
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:4  Page    1

     1  *> **  >>SOURCE FORMAT IS FREE
     2
     3  identification division.
     4
     5    program-id.                          cobolmac.
     6
     7  *> -----------------------------------------------------------------------------
     8  *>  CobolMac: a COBOL Macro Preprocessor.
     9  *> -----------------------------------------------------------------------------
    10  *>
    11  *>  This program is free software: you can redistribute it and/or modify it
    12  *>  under the terms of the GNU General Public License as published by the Free
    13  *>  Software Foundation, either version 3 of the License, or (at your option)
    14  *>  any later version.
    15  *>
    16  *>  This program is distributed in the hope that it will be useful, but WITHOUT
    17  *>  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
    18  *>  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
    19  *>  more details.
    20  *>
    21  *>  You should have received a copy of the GNU General Public License along with
    22  *>  this program. If not, see <http://www.gnu.org/licenses/>.
    23  *>
    24  *> -----------------------------------------------------------------------------
    25  *>
    26  *>  Description:
    27  *>
    28  *>    CobolMac is a COBOL Macro Preprocessor tool that reads a COBOL source file
    29  *>    prior to processing by GnuCOBOL's cobc.
    30  *>
    31  *>    It associates a macro name with a string of text. Macros can have up to
    32  *>    nine formal parameters. In the definition actual parameters are supplied
    33  *>    to replace the formal parameters when the macro is called in the source
    34  *>    program.
    35  *>
    36  *>    CobolMac is implemented as a command-line filter that emulates the macro
    37  *>    capability that is available with the Hewlett-Packard HPe3000 COBOL II/iX
    38  *>    Compiler.
    39  *>
    40  *>    Note: CobolMac assumes that it is preprocessing FREE FORMAT files. If used
    41  *>          to preprocess a FIXED FORMAT file then extra care must be taken when
    42  *>          defining the macros to ensure that all added code resides in the
    43  *>          correct areas - Area A (cols 7 to 11) and Area B (cols 12 to 72).
    44  *>
    45  *>  Usage:
    46  *>
    47  *>    w101-usage-text in Working-Storage contains the program usage text which
    48  *>    is displayed by using the --help option.
    49  *>
    50  *>  Compilation Instructions:
    51  *>
    52  *>    Production:
    53  *>
    54  *>      cobc -x cobolmac.cob
    55  *>
    56  *>    Development (enable ALL warnings and debugging lines):
    57  *>
    58  *>      cobc -x -W -fdebugging-line cobolmac.cob
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:4  Page    2

    59  *>
    60  *>  Modification History:
    61  *>
    62  *>    See the ChangeLog file.
    63  *>
    64  *>  Developer Notes:
    65  *>
    66  *>    See the DevNotes file.
    67  *>
    68  *> -----------------------------------------------------------------------------
    69
    70  environment division.
    71
    72    configuration section.
    73
    74      source-computer.                   Linux Mint Rebecca; Cinnamon Edition.
    75      object-computer.                   Linux Mint Rebecca; Cinnamon Edition.
    76
    77      repository.
    78
    79        function instr
    80        function all intrinsic.
    81
    82    input-output section.
    83
    84      file-control.
    85
    86        select stdin                     assign to keyboard
    87                                         access is sequential
    88                                         organization is line sequential
    89                                         file status is w500-file-status
    90                                         .
    91        select stdout                    assign to display
    92                                         access is sequential
    93                                         organization is line sequential
    94                                         file status is w500-file-status
    95                                         .
    96        select workin                    assign to w501-workin-filename
    97                                         access is sequential
    98                                         organization is line sequential
    99                                         file status is w500-file-status
   100                                         .
   101        select workout                   assign to w501-workout-filename
   102                                         access is sequential
   103                                         organization is line sequential
   104                                         file status is w500-file-status
   105                                         .
   106        select macrolib                  assign to w501-macrolib-filename
   107                                         access is dynamic
   108                                         organization is indexed
   109                                         record key is macrolib-key
   110                                         file status is w500-file-status
   111                                         .
   112        select incfile                   assign to w501-incfile-filename
   113                                         access is sequential
   114                                         organization is line sequential
   115                                         file status is w500-file-status
   116                                         .
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:4  Page    3

   117        select optional macrostd         assign to w501-macrostd-filename
   118                                         access is sequential
   119                                         organization is line sequential
   120                                         file status is w500-file-status
   121                                         .
   122
   123  data division.
   124
   125    file section.
   126
   127      fd  stdin.
   128
   129      01  stdin-record                   pic x(256).
   130
   131      fd  stdout.
   132
   133      01  stdout-record                  pic x(256).
   134
   135      fd  workin.
   136
   137      01  workin-record                  pic x(256).
   138
   139      fd  workout.
   140
   141      01  workout-record                 pic x(256).
   142
   143      fd  macrolib.
   144
   145      01  macrolib-record.
   146        05  macrolib-key.
   147          10  macrolib-name              pic x(030).
   148          10  macrolib-line-number       pic 9(004).
   149        05  macrolib-data.
   150          10  macrolib-code-line         pic x(256).
   151
   152      fd  incfile.
   153
   154      01  incfile-record                 pic x(256).
   155
   156      fd  macrostd.
   157
   158      01  macrostd-record                pic x(256).
   159
   160    working-storage section.
   161
   162      *> -------------------------------------------------------------------------
   163      *>  w1nn - Program Identification and Usage.
   164      *> -------------------------------------------------------------------------
   165
   166      01  w100-program-identity.
   167        05  w100-program-id-line-01.
   168          10                             pic x(009) value "cobolmac/".
   169          10  w100-program-v-uu-ff       pic x(007) value "B.02.00".
   170          10                             pic x(063) value " - COBOL Macro Preprocessor.".
   171        05  w100-program-id-line-02.
   172          10  w100-copyright             pic x(079) value "Copyright (c) Robert W. Mills (robertw-mills@users.sf.net), 2014-2015.".
   173        05  w100-program-id-line-03      pic x(079) value "This is free software; see the source for copying conditions. There is NO".
   174        05  w100-program-id-line-04      pic x(079) value "WARRANTY; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.".
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:4  Page    4

   175
   176      01  w101-program-usage.
   177        05  w101-usage-index             pic s9(04) comp.
   178        05  w101-usage-text.
   179                             *>"         1         2         3         4         5         6         7         "
   180                             *>"1234567890123456789012345678901234567890123456789012345678901234567890123456789"
   181          10  pic x(079) value "  Usage:".
   182          10  pic x(079) value "    $ cobolmac [options] <input >output [2>messages]".
   183          10  pic x(079) value "    $ cobolmac [options] <input [2>messages] | program2".
   184          10  pic x(079) value "    $ program1 | cobolmac [options] [2>messages] | program2".
   185          10  pic x(079) value " ".
   186          10  pic x(079) value "  Options:".
   187          10  pic x(079) value "    -h, --help     Display this text and exit.".
   188          10  pic x(079) value "    -v, --version  Display the preprocessor version and exit.".
   189          10  pic x(079) value "    -H, --hardwarn Treat all warnings like an error.".
   190          10  pic x(079) value "    -V, --verbose  Include Macro Begin/End comment lines.".
   191          10  pic x(079) value "    -d, --debug    Display additional error information.".
   192          10  pic x(079) value "    -m, --maclib   List the contents of the Macro Library.".
   193          10  pic x(079) value "    -sfilename, --stdlib=filename".
   194          10  pic x(079) value "                   [path/]name of file containing Standard Macros Library.".
   195          10  pic x(079) value " ".
   196          10  pic x(079) value "    input          [path/]name of file Standard Input redirected to.".
   197          10  pic x(079) value "    output         [path/]name of file Standard Output redirected to.".
   198          10  pic x(079) value "    messages       optional [path/]name of file Standard Error redirected to.".
   199          10  pic x(079) value "    program1       [path/]name of program that writes to Standard Output.".
   200          10  pic x(079) value "    program2       [path/]name of program that reads from Standard Input.".
   201          10  pic x(079) value " ".
   202          10  pic x(079) value "  Return Codes:".
   203          10  pic x(079) value "    0 (zero)       Program completed without any errors.".
   204          10  pic x(079) value "    1 (one)        Program terminated in an error state.".
   205          10  pic x(079) value "                   Details written to Standard Error prior to termination.".
   206          10  pic x(079) value "                   The output file, if created, is incomplete/corrupt.".
   207          10  pic x(079) value " ".
   208          10  pic x(079) value "***". *> end of program usage text marker.
   209                             *>"         1         2         3         4         5         6         7         "
   210                             *>"1234567890123456789012345678901234567890123456789012345678901234567890123456789"
   211        05  redefines w101-usage-text.
   212          10  w101-usage-line            pic x(079) occurs 28.
   213              *> Update occurs count if number of fillers below w101-usage-text changes.
   214
   215      *> -------------------------------------------------------------------------
   216      *>  w2nn - SQL Host Variables.
   217      *> -------------------------------------------------------------------------
   218
   219      *> -------------------------------------------------------------------------
   220      *>  w3nn - Program Constants.
   221      *> -------------------------------------------------------------------------
   222
   223      01  w300-preprocessor-defaults.
   224        05  w300-keychar                 pic x(001) value "%".
   225              *> This specifies the initial character of the macro name in both
   226              *> the macro definition and macro call.
   227        05  w300-parmchar                pic x(001) value "!".
   228              *> This specifies the initial character of the formal parameters in
   229              *> the macro definition.
   230        05  w300-delimiter               pic x(001) value "#".
   231              *> This specifies the character to be used to terminate the macro
   232              *> definition and the actual parameters in a macro call.
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:4  Page    5

   233
   234      01  w301-max-call-parms            pic s9(04) comp value 9.
   235
   236      01  w302-id-markers.
   237        05  w302-id-marker-values.
   238          10  pic x(002)                            value "!1".
   239          10  pic x(002)                            value "!2".
   240          10  pic x(002)                            value "!3".
   241          10  pic x(002)                            value "!4".
   242          10  pic x(002)                            value "!5".
   243          10  pic x(002)                            value "!6".
   244          10  pic x(002)                            value "!7".
   245          10  pic x(002)                            value "!8".
   246          10  pic x(002)                            value "!9".
   247        05  redefines w302-id-marker-values.
   248          10  w302-id-marker             pic x(002) occurs 9.
   249
   250      *> -------------------------------------------------------------------------
   251      *>  w4nn - System Intrinsic Parameters.
   252      *> -------------------------------------------------------------------------
   253
   254      *>  Parameters required by CBL_OC_GETOPT
   255
   256      78  w400-short-options                        value "hvHVdms:".
   257
   258      01  w400-long-options.
   259        05  w400-long-option-record      occurs 7 times.
   260          10  w400-long-option-name      pic x(025).
   261          10  w400-long-option-argument  pic 9(001).
   262            88  w400-no-argument                    value zero.
   263            88  w400-required-argument              value 1.
   264            88  w400-optional-argument              value 2.
   265          10                             pointer    value NULL.
   266          10  w400-long-option-alias     pic x(004).
   267
   268      01  w400-long-option-index         pic 9(002) value zero.
   269
   270      01  w400-long-option-prefix        pic 9(001) value zero.
   271
   272      01  w400-option-id                 pic x(004).
   273
   274      01  w400-option-argument           pic x(256).
   275
   276      *> -------------------------------------------------------------------------
   277      *>  w5nn - File Status, Handles and Buffers.
   278      *> -------------------------------------------------------------------------
   279
   280      01  w500-file-status               pic x(002).
   281
   282        88  w500-success                            value "00".
   283        88  w500-success-duplicate                  value "02".
   284        88  w500-success-incomplete                 value "04".
   285        88  w500-success-optional                   value "05".
   286        88  w500-success-no-unit                    value "07".
   287        88  w500-directory-full-missing             value "09".
   288
   289        88  w500-end-of-file                        value "10".
   290        88  w500-out-of-key-range                   value "14".
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:5  Page    6

   291
   292        88  w500-key-invalid                        value "21".
   293        88  w500-key-exists                         value "22".
   294        88  w500-key-not-exists                     value "23".
   295
   296        88  w500-permanent-error                    value "30".
   297        88  w500-inconsistent-filename              value "31".
   298        88  w500-boundary-violation                 value "34".
   299        88  w500-not-exists                         value "35".
   300        88  w500-permission-denied                  value "37".
   301        88  w500-closed-with-lock                   value "38".
   302        88  w500-conflict-attribute                 value "39".
   303
   304        88  w500-already-open                       value "41".
   305        88  w500-not-open                           value "42".
   306        88  w500-read-not-done                      value "43".
   307        88  w500-record-overflow                    value "44".
   308        88  w500-read-error                         value "46".
   309        88  w500-input-denied                       value "47".
   310        88  w500-output-denied                      value "48".
   311        88  w500-i-o-denied                         value "49".
   312
   313        88  w500-record-locked                      value "51".
   314        88  w500-end-of-page                        value "52".
   315        88  w500-i-o-linage                         value "57".
   316
   317        88  w500-file-sharing                       value "61".
   318
   319        88  w500-not-available                      value "91".
   320
   321      *> The following 5 variables have to be at the 01 level.
   322
   323      01  w501-workin-filename           pic x(256) value spaces.
   324      01  w501-workout-filename          pic x(256) value spaces.
   325      01  w501-macrolib-filename         pic x(256) value spaces.
   326      01  w501-incfile-filename          pic x(256) value spaces.
   327      01  w501-macrostd-filename         pic x(256) value spaces.
   328
   329      01  w502-work-files.
   330        05  w502-work-file-one           pic x(256).
   331        05  w502-work-file-two           pic x(256).
   332        05  w502-work-file-swap          pic x(256).
   333
   334      *> -------------------------------------------------------------------------
   335      *>  w6nn - General Work Variables.
   336      *> -------------------------------------------------------------------------
   337
   338      01  w600-error-handling.
   339        05  w600-location                pic x(080) value spaces.
   340        05  w600-sub-location            pic x(080) value spaces.
   341        05  w600-message                 pic x(240) value spaces.
   342        05  w600-message-2               pic x(240) value spaces.
   343        05  w600-file-status             pic x(080) value spaces.
   344
   345      *> w601- is available for use.
   346
   347      01  w602-os-type                   pic x(030) value "Other".
   348        88  w602-os-is-windows                      value "Windows_NT".
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:5  Page    7

   349        88  w602-os-is-other                        value "Other".
   350
   351      01  w603-random-number             pic 9(009) value zero.
   352
   353      01  w604-getopt-status             pic s9(9) comp.
   354        88  w604-no-more-options                    value -1.
   355        88  w604-non-option                         value 1.
   356        88  w604-option-argument-truncated          value 2.
   357        88  w604-valid-option-name                  value 3.
   358        88  w604-invalid-option-name                value 63.
   359
   360      01  w605-macro-define-workarea.
   361        05  w605-define-name             pic x(080).
   362        05  w605-define-code             pic x(256).
   363        05  w605-define-line-number      pic 9(004).
   364        05  w605-define-delimiter        pic x(001).
   365        05  w605-not-used                pic x(256).
   366
   367      01  w606-macro-call-workarea.
   368        05  w606-call-start              pic s9(04) comp.
   369        05  w606-call-end                pic s9(04) comp.
   370        05  w606-call-name               pic x(256) value spaces.
   371        05  w606-call-name-start         pic s9(04) comp.
   372        05  w606-call-name-delimiter     pic x(001) value spaces.
   373        05  w606-call-parms-list         pic x(256).
   374        05  w606-call-parameters.
   375          10  w606-call-parms-count      pic s9(04) comp value zero.
   376          10  w606-call-parm-number      pic s9(04) comp.
   377          10  w606-call-parameter        occurs 9.
   378            15  w606-call-parm           pic x(080).
   379        05  w606-call-count              pic s9(04) comp.
   380        05  w606-pre-call                pic x(256) value spaces.
   381        05  w606-pre-call-delimiter      pic x(001) value spaces.
   382        05  w606-post-call               pic x(256) value spaces.
   383        05  w606-post-call-delimiter     pic x(001) value spaces.
   384        05  w606-not-used                pic x(256).
   385
   386      01  w607-comment-start             pic s9(04) comp.
   387
   388      01  w608-preprocessor.
   389        05  w608-keychar                 pic x(001).
   390        05  w608-parmchar                pic x(001).
   391        05  w608-delimiter               pic x(001).
   392
   393      01  w609-include-file-unstring.
   394        05  w609-not-used                pic x(256).
   395        05  w609-include-file            pic x(256).
   396
   397      01  w610-macrolib-name             pic x(030).
   398
   399      01  w611-new-preprocessor-parms.
   400        05  w611-not-used-1              pic x(080).
   401        05  w611-parameter-1             pic x(010).
   402        05  w611-subparameter-1          pic x(010).
   403        05  w611-parameter-2             pic x(010).
   404        05  w611-subparameter-2          pic x(010).
   405        05  w611-parameter-3             pic x(010).
   406        05  w611-subparameter-3          pic x(010).
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:5  Page    8

   407        05  w611-not-used-2              pic x(256).
   408
   409      *> -------------------------------------------------------------------------
   410      *>  w7nn - Hard Coded Messages.
   411      *> -------------------------------------------------------------------------
   412
   413      *> -------------------------------------------------------------------------
   414      *>  w8nn - Printer Output Lines.
   415      *> -------------------------------------------------------------------------
   416
   417      *> -------------------------------------------------------------------------
   418      *>  w9nn - Process Control Switches.
   419      *> -------------------------------------------------------------------------
   420
   421      01  . *> End-of-file flags.
   422
   423        05  pic x(001). *> Standard Input end-of-file?
   424          88  w900-more-stdin                       value "M".
   425          88  w900-end-of-stdin                     value "E".
   426
   427        05  pic x(001). *> Work Input end-of-file?
   428          88  w900-more-workin                      value "M".
   429          88  w900-end-of-workin                    value "E".
   430
   431        05  pic x(001). *> Macro Library end-of-file?
   432          88  w900-more-macrolib                    value "M".
   433          88  w900-end-of-macrolib                  value "E".
   434
   435        05  pic x(001). *> $INCLUDE end-of-file?
   436          88  w900-more-incfile                     value "M".
   437          88  w900-end-of-incfile                   value "E".
   438
   439        05  pic x(001). *> $INCLUDE end-of-file?
   440          88  w900-more-macrostd                    value "M".
   441          88  w900-end-of-macrostd                  value "E".
   442
   443      01  pic x(001) value "U". *> What is the Operating System Type?
   444        88  w901-os-is-unknown                      value "U". *> Default setting.
   445        88  w901-os-is-linux                        value "L".
   446        88  w901-os-is-windows                      value "W".
   447
   448      *> w902- is available for use.
   449
   450      01  pic x(001) value "N". *> Have we processed the working-storage section?
   451        88  w903-ws-section-not-found               value "N". *> Default setting.
   452        88  w903-ws-section-found                   value "F".
   453
   454      01  pic x(001) value "S". *> Are Warnings Hard or Soft?
   455        88  w904-soft-warnings                      value "S". *> Default setting.
   456        88  w904-hard-warnings                      value "H".
   457
   458      01  pic x(001). *> Have we found a $DEFINE Delimiter?
   459        88  w905-define-delimiter-found             value "F".
   460        88  w905-define-delimiter-not-found         value "N".
   461
   462      01  pic x(001). *> Have we found an entry in the Macro Library?
   463        88  w906-macrolib-key-found                 value "F".
   464        88  w906-macrolib-key-not-found             value "N".
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:5  Page    9

   465
   466      01  pic x(001) value "E". *> Do we output a Macro Begin/End Marker?
   467        88  w907-exclude-macro-begin-end            value "E". *> Default setting.
   468        88  w907-include-macro-begin-end            value "I".
   469
   470      01  pic x(001). *> Are there any more Macro Calls?
   471        88  w908-more-macro-calls                   value "M".
   472        88  w908-no-more-macro-calls                value "N".
   473
   474      01  pic x(001) value "F". *> Is the internal debug flag set?
   475        88  w909-internal-debug-off                 value "F". *> Default setting.
   476        88  w909-internal-debug-on                  value "N".
   477
   478      01  pic x(001) value "H". *> Do we display the contents of the Macro Library?
   479        88  w910-hide-macrolib                      value "H". *> Default setting.
   480        88  w910-list-macrolib                      value "D".
   481
   482      01  pic x(001) value "N". *> Do we have any $DEFINEd Macros?
   483        88  w911-no-defined-macros                  value "N". *> Default setting.
   484        88  w911-defined-macros                     value "D".
   485
   486      01  pic x(001) value "N". *> Are there any more $INCLUDE files to be loaded?
   487        88  w912-no-include-files                   value "N". *> Default setting.
   488        88  w912-more-include-files                 value "M".
   489
   490      01  pic x(001) value "N". *> Have we found a Macro Call?
   491        88  w913-macro-call-not-found               value "N". *> Default setting.
   492        88  w913-macro-call-found                   value "F".
   493
   494  procedure division.
   495
   496    cobolmac-mainline.
   497      *> -------------------------------------------------------------------------
   498      *>  Program Control Block.
   499      *> -------------------------------------------------------------------------
   500
   501      perform a000-initialise
   502      perform b000-copy-stdin-to-workout
   503
   504      perform c000-load-include-files
   505        until w912-no-include-files
   506
   507      perform d000-load-define-commands
   508
   509      if w911-defined-macros then *> We have some preprocessing to do.
   510        set w908-more-macro-calls to true
   511        perform e000-expand-macro-calls
   512
   513      else *> No macro definitions were found.
   514        move "cobolmac-mainline" to w600-location
   515        move "No macro definitions have been found." to w600-message
   516        move "N/A" to w600-file-status
   517
   518        if w904-hard-warnings then *> Terminate the program.
   519          perform z999-abort
   520
   521        else *> Display message and exit.
   522          display w600-message upon stderr end-display
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:5  Page   10

   523        end-if
   524
   525      end-if
   526
   527      perform z000-finalise
   528
   529    .a000-initialise.
   530      *> --------------------------------------------------------------------------
   531      *>  Start of Program Processing.
   532      *> --------------------------------------------------------------------------
   533
   534      perform a100-get-operating-system-type
   535      perform a200-get-command-line-options
   536      perform a400-generate-work-filenames
   537      perform a500-initialise-defaults
   538
   539    .a100-get-operating-system-type.
   540      *> -------------------------------------------------------------------------
   541      *>  Which operating system are we running on?
   542      *> -------------------------------------------------------------------------
   543
   544      accept w602-os-type from environment "OP"
   545        on exception
   546          set w901-os-is-linux to true *> Assume Linux until we find another way.
   547        not on exception
   548          set w901-os-is-windows to true
   549      end-accept
   550
   551    .a200-get-command-line-options.
   552      *> -------------------------------------------------------------------------
   553      *>  Get the command-line options and validate them.
   554      *> -------------------------------------------------------------------------
   555
   556      move "help" to w400-long-option-name(1)
   557      move "h" to w400-long-option-alias(1)
   558      set w400-no-argument(1) to true
   559
   560      move "version" to w400-long-option-name(2)
   561      move "v" to w400-long-option-alias(2)
   562      set w400-no-argument(1) to true
   563
   564      move "hardwarn" to w400-long-option-name(3)
   565      move "H" to w400-long-option-alias(3)
   566      set w400-no-argument(3) to true
   567
   568      move "verbose" to w400-long-option-name(4)
   569      move "V" to w400-long-option-alias(4)
   570      set w400-no-argument(4) to true
   571
   572      move "debug" to w400-long-option-name(5)
   573      move "d" to w400-long-option-alias(5)
   574      set w400-no-argument(5) to true
   575
   576      move "maclib" to w400-long-option-name(6)
   577      move "m" to w400-long-option-alias(6)
   578      set w400-no-argument(6) to true
   579
   580      move "stdlib" to w400-long-option-name(7)
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:5  Page   11

   581      move "s" to w400-long-option-alias(7)
   582      set w400-required-argument(7) to true
   583
   584      perform with test after
   585        until w604-no-more-options
   586
   587        move spaces to w400-option-argument
   588
   589        call 'CBL_OC_GETOPT' using
   590          by reference w400-short-options, w400-long-options, w400-long-option-index
   591          by value w400-long-option-prefix
   592          by reference w400-option-id, w400-option-argument
   593        end-call
   594
   595        move return-code to w604-getopt-status
   596
   597        evaluate true
   598
   599          when w604-valid-option-name
   600            *> Action(s) to perform if we find a valid option.
   601
   602            evaluate trim(w400-option-id)
   603
   604              when "h" *> --help
   605                perform a210-display-program-usage
   606                move zero to return-code
   607                goback
   608
   609              when "v" *> --version
   610                display space upon stderr end-display
   611                display w100-program-id-line-01 upon stderr end-display
   612                display w100-program-id-line-02 upon stderr end-display
   613                display w100-program-id-line-03 upon stderr end-display
   614                display w100-program-id-line-04 upon stderr end-display
   615                display "Built " module-formatted-date upon stderr end-display
   616                display space upon stderr end-display
   617                move zero to return-code
   618                goback
   619
   620            when "H" *> --hardwarn
   621              set w904-hard-warnings to true
   622
   623            when "V" *> --verbose
   624              set w907-include-macro-begin-end to true
   625
   626            when "d" *> --debug
   627              set w909-internal-debug-on to true
   628
   629            when "m" *> --maclib
   630              set w910-list-macrolib to true
   631
   632            when "s" *> --stdlib
   633              move trim(w400-option-argument) to w501-macrostd-filename
   634
   635            end-evaluate
   636
   637          when w604-option-argument-truncated
   638            *> Action(s) to perform if we find a valid option BUT the argument has
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:5  Page   12

   639            *> been truncated. This situation will occur if the option-argument
   640            *> variable is not large enought to hold the required data.
   641
   642          when w604-invalid-option-name
   643            move "a200-get-command-line-options ()" to w600-location
   644            move spaces to w600-message
   645            string
   646              "Invalid command-line option: ", trim(w400-option-id) delimited by size
   647              into w600-message
   648            end-string
   649            move "N/A" to w600-file-status
   650            perform z999-abort
   651
   652          when w604-no-more-options
   653            continue
   654
   655          when other
   656            *> If we get here then we have probably detected an return status we are
   657            *> unable to handle. Suggest you treat is as a FATAL ERROR.
   658            move "a200-get-command-line-options ()" to w600-location
   659            move spaces to w600-message
   660            string
   661              "The CBL_OC_GETOPT routine returned an unknown status "
   662              w604-getopt-status
   663              "."
   664                delimited by size
   665              into w600-message
   666            end-string
   667            move "N/A" to w600-file-status
   668            perform z999-abort
   669
   670        end-evaluate
   671
   672      end-perform
   673
   674    .a210-display-program-usage.
   675      *> -------------------------------------------------------------------------
   676      *>  Display the program usage on Standard Error.
   677      *> -------------------------------------------------------------------------
   678
   679      display space upon stderr end-display
   680      display w100-program-id-line-01 upon stderr end-display
   681      display w100-program-id-line-02 upon stderr end-display
   682      display w100-program-id-line-03 upon stderr end-display
   683      display w100-program-id-line-04 upon stderr end-display
   684      display space upon stderr end-display
   685
   686      perform
   687        varying w101-usage-index from 1 by 1
   688        until w101-usage-line(w101-usage-index) = "***"
   689
   690        display w101-usage-line(w101-usage-index) upon stderr end-display
   691
   692      end-perform
   693
   694    .a400-generate-work-filenames.
   695      *> -------------------------------------------------------------------------
   696      *>  Generate Macro Library, Work Input and Work Output filenames.
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:5  Page   13

   697      *> -------------------------------------------------------------------------
   698
   699      compute w603-random-number
   700        = random(current-date(1:16)) * 1000000000
   701      end-compute
   702
   703      move spaces to w502-work-file-one
   704      string
   705        "/tmp/cobolmac-", w603-random-number, "-1" delimited by size
   706        into w502-work-file-one
   707      end-string
   708
   709      move spaces to w502-work-file-two
   710      string
   711        "/tmp/cobolmac-", w603-random-number, "-2" delimited by size
   712        into w502-work-file-two
   713      end-string
   714
   715      move spaces to w501-macrolib-filename
   716      string
   717        "/tmp/cobolmac-", w603-random-number, "-0" delimited by size
   718        into w501-macrolib-filename
   719      end-string
   720
   721    .a500-initialise-defaults.
   722      *> -------------------------------------------------------------------------
   723      *>  Initialise default variable values.
   724      *> -------------------------------------------------------------------------
   725
   726      move w300-keychar to w608-keychar
   727      move w300-parmchar to w608-parmchar
   728      move w300-delimiter to w608-delimiter
   729
   730      if w501-macrostd-filename = spaces then
   731        move "cobolmac.standard.macros" to w501-macrostd-filename
   732      end-if
   733
   734    .b000-copy-stdin-to-workout.
   735      *> -------------------------------------------------------------------------
   736      *>  Copy Standard Input to Work Output.
   737      *> -------------------------------------------------------------------------
   738
   739      move "b000-copy-stdin-to-workout (1)" to w600-location
   740      perform s001-open-read-stdin
   741
   742      if w900-end-of-stdin then
   743
   744        move "b000-copy-stdin-to-workout (2)" to w600-location
   745        perform s003-close-stdin
   746
   747        move "The specified input file was empty." to w600-message
   748        move "N/A" to w600-file-status
   749        perform z999-abort
   750
   751      end-if
   752
   753      move w502-work-file-one to w501-workout-filename
   754      move "b000-copy-stdin-to-workout (3)" to w600-location
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:5  Page   14

   755      perform s010-open-workout
   756
   757      move "b000-copy-stdin-to-workout (4)" to w600-location
   758      perform s025-open-read-macrostd
   759
   760      perform
   761        until w900-end-of-stdin
   762
   763        if instr(stdin-record, "$include") > zero then *> $INCLUDE file found.
   764          set w912-more-include-files to true
   765        end-if
   766
   767        if instr(stdin-record, "$if") > zero
   768        or instr(stdin-record, "$set") > zero
   769        or instr(stdin-record, "$page") > zero
   770        or instr(stdin-record, "$title") > zero
   771        or instr(stdin-record, "$control") > zero
   772        or instr(stdin-record, "$version") > zero
   773        or instr(stdin-record, "$copyright") > zero then
   774          move "This record type is not supported." to workout-record
   775
   776        else
   777          move stdin-record to workout-record
   778          move "b000-copy-stdin-to-workout (5)" to w600-location
   779          perform s011-write-workout
   780
   781          if w903-ws-section-not-found and w900-more-macrostd then
   782            perform b100-check-for-ws-section
   783            if w903-ws-section-found then
   784              perform b200-load-macrostd
   785            end-if
   786          end-if
   787
   788        end-if
   789
   790        move "b000-copy-stdin-to-workout (6)" to w600-location
   791        perform s002-read-stdin
   792
   793      end-perform
   794
   795      move "b000-copy-stdin-to-workout (7)" to w600-location
   796      perform s012-close-workout
   797
   798      move "b000-copy-stdin-to-workout (8)" to w600-location
   799      perform s003-close-stdin
   800
   801    .b100-check-for-ws-section.
   802      *> -------------------------------------------------------------------------
   803      *>  Check if we have entered the working-storage section.
   804      *> -------------------------------------------------------------------------
   805
   806      if instr(stdin-record, "working-storage") > zero
   807      and instr(stdin-record, "section") > zero then *> Found start of working-storage.
   808        set w903-ws-section-found to true
   809      end-if
   810
   811    .b200-load-macrostd.
   812      *> -------------------------------------------------------------------------
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:5  Page   15

   813      *>  Load Standard Macros file into Work Output.
   814      *> -------------------------------------------------------------------------
   815
   816      perform
   817        until w900-end-of-macrostd
   818
   819        move macrostd-record to workout-record
   820        move "b200-load-macrostd (1)" to w600-location
   821        perform s011-write-workout
   822
   823        move "b200-load-macrostd (2)" to w600-location
   824        perform s026-read-macrostd
   825
   826      end-perform
   827
   828      move "b200-load-macrostd (3)" to w600-location
   829      perform s027-close-macrostd
   830
   831    .c000-load-include-files.
   832      *> -------------------------------------------------------------------------
   833      *>  Load $INCLUDE file into Work Output.
   834      *> -------------------------------------------------------------------------
   835
   836      move w502-work-file-one to w501-workin-filename
   837      move "c000-load-include-files (1)" to w600-location
   838      perform s007-open-read-workin
   839
   840      move w502-work-file-two to w501-workout-filename
   841      move "c000-load-include-files (2)" to w600-location
   842      perform s010-open-workout
   843
   844      perform s023-swop-work-file-assignments
   845
   846      set w912-no-include-files to true
   847
   848      perform
   849        until w900-end-of-workin
   850
   851        if instr(workin-record, "$include") > zero then *> $INCLUDE file found.
   852
   853          move trim(workin-record) to workin-record
   854          unstring workin-record delimited by space
   855            into
   856              w609-not-used
   857              w609-include-file
   858          end-unstring
   859
   860  >>D     display "-- debug:   Loading file " trim(w609-include-file) upon stderr end-display
   861
   862          move trim(w609-include-file) to w501-incfile-filename
   863          move "c000-load-include-files (3)" to w600-location
   864          perform s019-open-read-incfile
   865
   866          perform
   867            until w900-end-of-incfile
   868
   869            if instr(incfile-record, "$include") > zero then *> Nested $INCLUDE file found.
   870              set w912-more-include-files to true
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:5  Page   16

   871            end-if
   872
   873            if instr(incfile-record, "$if") > zero
   874            or instr(incfile-record, "$set") > zero
   875            or instr(incfile-record, "$page") > zero
   876            or instr(incfile-record, "$title") > zero
   877            or instr(incfile-record, "$control") > zero
   878            or instr(incfile-record, "$version") > zero
   879            or instr(incfile-record, "$copyright") > zero then
   880              move "This record type is not supported." to workout-record
   881
   882            else
   883              move incfile-record to workout-record
   884              move "c000-load-include-files (4)" to w600-location
   885              perform s011-write-workout
   886            end-if
   887
   888            move "c000-load-include-files (5)" to w600-location
   889            perform s020-read-incfile
   890
   891          end-perform
   892
   893          perform s021-close-incfile
   894
   895        else *> Normal record found.
   896          move workin-record to workout-record
   897          move "c000-load-include-files (6)" to w600-location
   898          perform s011-write-workout
   899        end-if
   900
   901        move "c000-load-include-files (7)" to w600-location
   902        perform s008-read-workin
   903
   904      end-perform
   905
   906      move "c000-load-include-files (8)" to w600-location
   907      perform s009-close-workin
   908
   909      move "c000-load-include-files (9)" to w600-location
   910      perform s012-close-workout
   911
   912    .d000-load-define-commands.
   913      *> -------------------------------------------------------------------------
   914      *>  Extract $DEFINEd macros and load into Macro Library.
   915      *> -------------------------------------------------------------------------
   916
   917      move w502-work-file-one to w501-workin-filename
   918      move "d000-load-define-commands (1)" to w600-location
   919      perform s007-open-read-workin
   920
   921      move w502-work-file-two to w501-workout-filename
   922      move "d000-load-define-commands (2)" to w600-location
   923      perform s010-open-workout
   924
   925      perform s023-swop-work-file-assignments
   926
   927      move "d000-load-define-commands (3)" to w600-location
   928      perform s013-create-macrolib
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:5  Page   17

   929
   930      move "d000-load-define-commands (4)" to w600-location
   931      perform s014-open-macrolib
   932
   933      perform
   934        until w900-end-of-workin
   935
   936        if instr(workin-record, "$if") > zero
   937        or instr(workin-record, "$set") > zero
   938        or instr(workin-record, "$page") > zero
   939        or instr(workin-record, "$title") > zero
   940        or instr(workin-record, "$control") > zero
   941        or instr(workin-record, "$version") > zero
   942        or instr(workin-record, "$copyright") > zero then
   943          move "This record type is not supported." to workout-record
   944
   945        else if instr(workin-record, "$preprocessor") > zero then *> $PREPROCESSOR command found.
   946          perform s024-preprocessor-command
   947
   948        else if instr(workin-record, "$define") = zero then *> $DEFINE command not found.
   949          move workin-record to workout-record
   950          move "d000-load-define-commands (5)" to w600-location
   951          perform s011-write-workout
   952
   953        else
   954          perform d100-process-define-command
   955
   956        end-if end-if end-if
   957
   958        move "d000-load-define-commands (6)" to w600-location
   959        perform s008-read-workin
   960
   961      end-perform
   962
   963      move "d000-load-define-commands (7)" to w600-location
   964      perform s012-close-workout
   965
   966      move "d000-load-define-commands (8)" to w600-location
   967      perform s018-close-macrolib
   968
   969      move "d000-load-define-commands (9)" to w600-location
   970      perform s009-close-workin
   971
   972      if w910-list-macrolib and w911-defined-macros then
   973        perform d200-list-macrolib
   974      end-if
   975
   976    .d100-process-define-command.
   977      *> -------------------------------------------------------------------------
   978      *>  Process the $DEFINE command.
   979      *> -------------------------------------------------------------------------
   980
   981      unstring workin-record
   982        delimited by w608-keychar or "="
   983        into
   984          w605-not-used
   985          w605-define-name
   986          w605-define-code
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:5  Page   18

   987      end-unstring
   988
   989  >>D display "-- debug:   Looking in Macro Library for %", trim(w605-define-name), "." upon stderr end-display
   990
   991      move trim(w605-define-name) to macrolib-name
   992      move zeros to macrolib-line-number
   993      move "d100-process-define-command" to w600-location
   994      perform s015-read-key-macrolib
   995
   996      if w906-macrolib-key-found then *> We have a duplicate macro name.
   997        perform d110-found-duplicate-macro
   998
   999      else *> We have a new macro. Add it to Macro Library.
  1000        perform d120-add-macro-to-library
  1001      end-if
  1002
  1003    .d110-found-duplicate-macro.
  1004      *> -------------------------------------------------------------------------
  1005      *> Found a duplicate macro name. Generate an error or a warning?
  1006      *> -------------------------------------------------------------------------
  1007
  1008      move spaces to w600-message
  1009      string
  1010        "The ", trim(w605-define-name), " macro has already been $DEFINEd." delimited by size
  1011        into w600-message
  1012      end-string
  1013
  1014      move "N/A" to w600-file-status
  1015
  1016      if w904-hard-warnings then *> Terminate the program.
  1017        move "d110-found-duplicate-macro (1)" to w600-location
  1018        perform z999-abort
  1019
  1020      else *> Write warning messages and continue.
  1021        display "  WARNING: ", trim(w600-message) upon stderr end-display
  1022
  1023        move workin-record to workout-record
  1024        move "d110-found-duplicate-macro (2)" to w600-location
  1025        perform s011-write-workout
  1026
  1027        move spaces to workout-record
  1028        string
  1029          "*> WARNING: ", trim(w600-message) delimited by size
  1030          into workout-record
  1031        end-string
  1032
  1033        move "d110-found-duplicate-macro (3)" to w600-location
  1034        perform s011-write-workout
  1035
  1036      end-if
  1037
  1038    .d120-add-macro-to-library.
  1039      *> -------------------------------------------------------------------------
  1040      *> Add the macro definition to the Macro Library.
  1041      *> -------------------------------------------------------------------------
  1042
  1043  >>D display "-- debug:     Adding %", trim(w605-define-name), " to Macro Library." upon stderr end-display
  1044
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:5  Page   19

  1045      set w911-defined-macros to true
  1046      set w905-define-delimiter-not-found to true
  1047
  1048      move zeros to w605-define-line-number
  1049      unstring w605-define-code delimited by w608-delimiter
  1050        into
  1051          w605-define-code delimiter in w605-define-delimiter
  1052      end-unstring
  1053
  1054      move trim(w605-define-name) to macrolib-name
  1055      move w605-define-line-number to macrolib-line-number
  1056      move w605-define-code to macrolib-code-line
  1057      move "d120-add-macro-to-library (1)" to w600-location
  1058      perform s017-write-macrolib
  1059
  1060      if w605-define-delimiter = w608-delimiter then *> $DEFINE delimiter was found.
  1061        set w905-define-delimiter-found to true
  1062
  1063      else *> $DEFINE delimiter was not found.
  1064        move "d120-add-macro-to-library (2)" to w600-location
  1065        perform s008-read-workin
  1066      end-if
  1067
  1068      perform
  1069        until w905-define-delimiter-found
  1070
  1071        unstring workin-record delimited by w608-delimiter
  1072          into
  1073            w605-define-code delimiter in w605-define-delimiter
  1074        end-unstring
  1075
  1076        if w605-define-delimiter = w608-delimiter then *> $DEFINE delimiter found.
  1077          set w905-define-delimiter-found to true
  1078        end-if
  1079
  1080        add 1 to w605-define-line-number end-add
  1081        move w605-define-line-number to macrolib-line-number
  1082        move trim(w605-define-name) to macrolib-name
  1083        move w605-define-code to macrolib-code-line
  1084        move "d120-add-macro-to-library (3)" to w600-location
  1085        perform s017-write-macrolib
  1086
  1087        if w905-define-delimiter-not-found then
  1088          move "d120-add-macro-to-library (4)" to w600-location
  1089          perform s008-read-workin
  1090        end-if
  1091
  1092      end-perform
  1093
  1094    .d200-list-macrolib.
  1095      *> -------------------------------------------------------------------------
  1096      *>  List the contents of Macro Library on Standard Error (if redirected).
  1097      *> -------------------------------------------------------------------------
  1098
  1099      move "d200-list-macrolib (1)" to w600-location
  1100      perform s014-open-macrolib
  1101
  1102      display space upon stderr end-display
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:5  Page   20

  1103      display "---------- Start of Macros Library." upon stderr end-display
  1104      move "d200-list-macrolib (2)" to w600-location
  1105      perform s016-read-next-macrolib
  1106
  1107      perform
  1108        until w900-end-of-macrolib
  1109
  1110        if macrolib-line-number = zeros then *> 1st line for macro. Output macro name.
  1111          display space upon stderr end-display
  1112          display "Macro %", trim(macrolib-name) upon stderr end-display
  1113        end-if
  1114
  1115        display "[" macrolib-line-number "] ", trim(macrolib-data, trailing) upon stderr end-display
  1116
  1117        move "d200-list-macrolib (3)" to w600-location
  1118        perform s016-read-next-macrolib
  1119
  1120      end-perform
  1121
  1122      display space upon stderr end-display
  1123      display "---------- End of Macro Library." upon stderr end-display
  1124      display space upon stderr end-display
  1125
  1126      move "d200-list-macrolib (4)" to w600-location
  1127      perform s018-close-macrolib
  1128
  1129    .e000-expand-macro-calls.
  1130      *> -------------------------------------------------------------------------
  1131      *>  Replace the Macro Calls with code held in the Macro Library.
  1132      *> -------------------------------------------------------------------------
  1133
  1134      move "e000-expand-macro-calls (1)" to w600-location
  1135      perform s014-open-macrolib
  1136
  1137      perform
  1138        until w908-no-more-macro-calls
  1139
  1140        move zero to w606-call-count
  1141        move w502-work-file-one to w501-workin-filename
  1142        move "e000-expand-macro-calls (2)" to w600-location
  1143        perform s007-open-read-workin
  1144
  1145        move w502-work-file-two to w501-workout-filename
  1146        move "e000-expand-macro-calls (3)" to w600-location
  1147        perform s010-open-workout
  1148
  1149        perform s023-swop-work-file-assignments
  1150
  1151        perform
  1152          until w900-end-of-workin
  1153
  1154          perform e100-find-macro-call
  1155
  1156          if w913-macro-call-found then
  1157            perform e200-convert-call-to-code
  1158
  1159          else *> Write record to workout.
  1160            move workin-record to workout-record
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:5  Page   21

  1161            move "e000-expand-macro-calls (4)" to w600-location
  1162            perform s011-write-workout
  1163          end-if
  1164
  1165          move "e000-expand-macro-calls (5)" to w600-location
  1166          perform s008-read-workin
  1167
  1168        end-perform
  1169
  1170        move "e000-expand-macro-calls (6)" to w600-location
  1171        perform s012-close-workout
  1172
  1173        move "e000-expand-macro-calls (7)" to w600-location
  1174        perform s009-close-workin
  1175
  1176        if w606-call-count = 0 then
  1177          set w908-no-more-macro-calls to true
  1178        end-if
  1179
  1180      end-perform
  1181
  1182      move "e000-expand-macro-calls (7)" to w600-location
  1183      perform s018-close-macrolib
  1184
  1185    .e100-find-macro-call.
  1186      *> -------------------------------------------------------------------------
  1187      *>  Search the current workin record for a macro call.
  1188      *> -------------------------------------------------------------------------
  1189
  1190      *> Search for a comment marker and macro keychar.
  1191      move zero to w607-comment-start
  1192      move instr(workin-record, "*>") to w607-comment-start
  1193      move zero to w606-call-start
  1194      move instr(workin-record, w300-keychar) to w606-call-start
  1195
  1196      if w606-call-start = zero then *> Macro keychar not found.
  1197        set w913-macro-call-not-found to true
  1198
  1199      else if (w607-comment-start > 0) and (w606-call-start > w607-comment-start) then *> Macro keychar found in a comment.
  1200        set w913-macro-call-not-found to true
  1201
  1202      else
  1203        *> Extract the 'word' following the macro keychar.
  1204        move spaces to w606-call-name, w606-call-name-delimiter
  1205        add 1 to w606-call-start giving w606-call-name-start end-add
  1206        unstring workin-record delimited by "(" or ")" or "." or space or '"' or ","
  1207          into
  1208            w606-call-name delimiter in w606-call-name-delimiter
  1209          with pointer w606-call-name-start
  1210        end-unstring
  1211        *> Look in the Macro Library to see if this 'word' is a valid macro name.
  1212        move trim(w606-call-name) to macrolib-name
  1213        move zeros to macrolib-line-number
  1214        move "e100-find-macro-call" to w600-location
  1215        perform s015-read-key-macrolib
  1216        if w906-macrolib-key-found then *> We've found a macro call.
  1217          move macrolib-name to w610-macrolib-name
  1218          add 1 to w606-call-count end-add
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:5  Page   22

  1219          set w913-macro-call-found to true
  1220
  1221        else *> It is not a macro call.
  1222          set w913-macro-call-not-found to true
  1223        end-if
  1224      end-if end-if
  1225
  1226    .e200-convert-call-to-code.
  1227      *> -------------------------------------------------------------------------
  1228      *>  Replace the macro call with its code.
  1229      *> -------------------------------------------------------------------------
  1230
  1231      evaluate w606-call-name-delimiter
  1232
  1233        when "("
  1234          perform e210-macro-with-parameters
  1235
  1236        when " "
  1237          perform e220-macro-without-parameters
  1238
  1239        when "."
  1240          perform e230-macro-as-a-constant
  1241
  1242        when ")"
  1243          perform e230-macro-as-a-constant
  1244
  1245        when ","
  1246          perform e230-macro-as-a-constant
  1247
  1248        when other
  1249          move "e200-convert-call-to-code" to w600-location
  1250          move "Unable to determine the macro call type." to w600-message
  1251          move "N/A" to w600-file-status
  1252          perform z999-abort
  1253
  1254      end-evaluate
  1255
  1256    .e210-macro-with-parameters.
  1257      *> -------------------------------------------------------------------------
  1258      *>  Insert the macro code and replace parameter markers with actual values.
  1259      *> -------------------------------------------------------------------------
  1260
  1261      unstring workin-record delimited by w300-keychar or "("
  1262        into
  1263          w606-not-used *> line # (if present), leading spaces and marker.
  1264          w606-call-name delimiter in w606-call-name-delimiter
  1265          w606-call-parms-list
  1266      end-unstring
  1267
  1268      initialize w606-call-parameters
  1269      unstring w606-call-parms-list delimited by "#," or "#)"
  1270        into
  1271          w606-call-parm(1)
  1272          w606-call-parm(2)
  1273          w606-call-parm(3)
  1274          w606-call-parm(4)
  1275          w606-call-parm(5)
  1276          w606-call-parm(6)
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:5  Page   23

  1277          w606-call-parm(7)
  1278          w606-call-parm(8)
  1279          w606-call-parm(9)
  1280        tallying in w606-call-parms-count
  1281      end-unstring
  1282
  1283      subtract 1 from w606-call-parms-count end-subtract
  1284
  1285      if w907-include-macro-begin-end then
  1286        move spaces to workout-record
  1287        string
  1288          "*> **** Begin Macro ", trim(w606-call-name), "(", trim(w606-call-parms-list) delimited by size
  1289          into workout-record(w606-call-start:)
  1290        end-string
  1291        move "e210-macro-with-parameters (1)" to w600-location
  1292        perform s011-write-workout
  1293      end-if
  1294
  1295      if macrolib-code-line <> space then *> Filter out an initial blank line in the macro definition.
  1296
  1297        perform with test after
  1298          varying w606-call-parm-number from 1 by 1
  1299            until w606-call-parm-number = w301-max-call-parms
  1300
  1301          if instr(macrolib-code-line, w302-id-marker(w606-call-parm-number)) > zero then *> Found parameter.
  1302            move SUBSTITUTE(macrolib-code-line, w302-id-marker(w606-call-parm-number), trim(w606-call-parm(w606-call-parm-number))) to macrolib-code-line
  1303          end-if
  1304
  1305        end-perform
  1306
  1307        move spaces to workout-record
  1308        move macrolib-code-line to workout-record(w606-call-start:)
  1309        move "e210-macro-with-parameters (2)" to w600-location
  1310        perform s011-write-workout
  1311      end-if
  1312
  1313      move "e210-macro-with-parameters (3)" to w600-location
  1314      perform s016-read-next-macrolib
  1315
  1316      if macrolib-name <> w610-macrolib-name then
  1317        set w900-end-of-macrolib to true
  1318      end-if
  1319
  1320      perform
  1321        until w900-end-of-macrolib
  1322
  1323        perform with test after
  1324          varying w606-call-parm-number from 1 by 1
  1325            until w606-call-parm-number = w301-max-call-parms
  1326
  1327          if instr(macrolib-code-line, w302-id-marker(w606-call-parm-number)) > zero then *> Found parameter.
  1328            move SUBSTITUTE(macrolib-code-line, w302-id-marker(w606-call-parm-number), trim(w606-call-parm(w606-call-parm-number))) to macrolib-code-line
  1329          end-if
  1330
  1331        end-perform
  1332
  1333        move spaces to workout-record
  1334        move macrolib-code-line to workout-record(w606-call-start:)
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:5  Page   24

  1335        move "e210-macro-with-parameters (4)" to w600-location
  1336        perform s011-write-workout
  1337        move "e210-macro-with-parameters (5)" to w600-location
  1338        perform s016-read-next-macrolib
  1339
  1340        if macrolib-name <> w610-macrolib-name then
  1341          set w900-end-of-macrolib to true
  1342        end-if
  1343
  1344      end-perform
  1345
  1346      if w907-include-macro-begin-end then
  1347        move spaces to workout-record
  1348        string
  1349          "*> **** End Macro ", trim(w610-macrolib-name) delimited by size
  1350          into workout-record(w606-call-start:)
  1351        end-string
  1352        move "e210-macro-with-parameters (6)" to w600-location
  1353        perform s011-write-workout
  1354      end-if
  1355
  1356    .e220-macro-without-parameters.
  1357      *> -------------------------------------------------------------------------
  1358      *>  Insert the macro code.
  1359      *> -------------------------------------------------------------------------
  1360
  1361      if w907-include-macro-begin-end then
  1362        move spaces to workout-record
  1363        string
  1364          "*> **** Begin Macro ", trim(macrolib-name) delimited by size
  1365          into workout-record(w606-call-start:)
  1366        end-string
  1367        move "e220-macro-without-parameters (1)" to w600-location
  1368        perform s011-write-workout
  1369      end-if
  1370
  1371      if macrolib-code-line <> space then *> Filter out an initial blank line in the macro definition.
  1372        move spaces to workout-record
  1373        move macrolib-code-line to workout-record(w606-call-start:)
  1374        move "e220-macro-without-parameters (2)" to w600-location
  1375        perform s011-write-workout
  1376      end-if
  1377
  1378      move "e220-macro-without-parameters (3)" to w600-location
  1379      perform s016-read-next-macrolib
  1380
  1381      if macrolib-name <> w610-macrolib-name then
  1382        set w900-end-of-macrolib to true
  1383      end-if
  1384
  1385      perform
  1386        until w900-end-of-macrolib
  1387
  1388        move spaces to workout-record
  1389        move macrolib-code-line to workout-record(w606-call-start:)
  1390        move "e220-macro-without-parameters (4)" to w600-location
  1391        perform s011-write-workout
  1392        move "e220-macro-without-parameters (5)" to w600-location
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:6  Page   25

  1393        perform s016-read-next-macrolib
  1394
  1395        if macrolib-name <> w610-macrolib-name then
  1396          set w900-end-of-macrolib to true
  1397        end-if
  1398
  1399      end-perform
  1400
  1401      if w907-include-macro-begin-end then
  1402        move spaces to workout-record
  1403        string
  1404          "*> **** End Macro ", trim(w610-macrolib-name) delimited by size
  1405          into workout-record(w606-call-start:)
  1406        end-string
  1407        move "e220-macro-without-parameters (6)" to w600-location
  1408        perform s011-write-workout
  1409      end-if
  1410
  1411    .e230-macro-as-a-constant.
  1412      *> -------------------------------------------------------------------------
  1413      *>  Replace the macro name with its value and write record to workout.
  1414      *> -------------------------------------------------------------------------
  1415
  1416      move zero to w606-call-start
  1417      move instr(workin-record, w300-keychar) to w606-call-start
  1418      move length(trim(w606-call-name)) to w606-call-end
  1419      add w606-call-start to w606-call-end end-add
  1420
  1421      move spaces to workout-record
  1422      string
  1423        workin-record(1:w606-call-start - 1), trim(macrolib-code-line), workin-record(w606-call-end + 1:)
  1424        delimited by size
  1425        into workout-record
  1426      end-string
  1427
  1428      move "e230-macro-as-a-constant" to w600-location
  1429      perform s011-write-workout
  1430
  1431    .z000-finalise.
  1432      *> -------------------------------------------------------------------------
  1433      *>  End of Program Processing.
  1434      *> -------------------------------------------------------------------------
  1435
  1436      perform z100-copy-workin-to-stdout
  1437      perform s022-delete-workfiles
  1438
  1439      move zero to return-code
  1440      goback
  1441
  1442    .z100-copy-workin-to-stdout.
  1443      *> -------------------------------------------------------------------------
  1444      *>  Copy Work Input to Standard Output.
  1445      *> -------------------------------------------------------------------------
  1446
  1447      move w502-work-file-one to w501-workin-filename
  1448      move "z100-copy-workin-to-stdout (1)" to w600-location
  1449      perform s007-open-read-workin
  1450      move "z100-copy-workin-to-stdout (2)" to w600-location
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:6  Page   26

  1451      perform s004-open-stdout
  1452
  1453      perform
  1454        until w900-end-of-workin
  1455
  1456        move workin-record to stdout-record
  1457        move "z100-copy-workin-to-stdout (3)" to w600-location
  1458        perform s005-write-stdout
  1459        move "z100-copy-workin-to-stdout (4)" to w600-location
  1460        perform s008-read-workin
  1461
  1462      end-perform
  1463
  1464      move "z100-copy-workin-to-stdout (5)" to w600-location
  1465      perform s006-close-stdout
  1466      move "z100-copy-workin-to-stdout (6)" to w600-location
  1467      perform s009-close-workin
  1468
  1469    .z999-abort.
  1470      *> -------------------------------------------------------------------------
  1471      *>  Abnormal Termination Processing.
  1472      *> -------------------------------------------------------------------------
  1473
  1474      perform s022-delete-workfiles
  1475      display space upon stderr end-display
  1476      display w100-program-id-line-01 upon stderr end-display
  1477      display w100-program-id-line-02 upon stderr end-display
  1478      display w100-program-id-line-03 upon stderr end-display
  1479      display w100-program-id-line-04 upon stderr end-display
  1480      display space upon stderr end-display
  1481
  1482      if w909-internal-debug-on then
  1483        display "  Detected in ", trim(w600-location) " at ", trim(w600-sub-location) upon stderr end-display
  1484      end-if
  1485
  1486      display "  Error: ", trim(w600-message) upon stderr end-display
  1487
  1488      if trim(w600-message-2) <> spaces then
  1489        display "       : ", trim(w600-message-2) upon stderr end-display
  1490      end-if
  1491
  1492      if trim(w600-file-status) <> "N/A" then
  1493        display "  File Status: ", trim(w600-file-status) upon stderr end-display
  1494      end-if
  1495
  1496      display space upon stderr end-display
  1497      move 1 to return-code
  1498      goback
  1499
  1500  *> *****************************************************************************
  1501  *> Start of Internal Subroutines.
  1502
  1503    .s000-set-file-error-status.
  1504      *> -------------------------------------------------------------------------
  1505      *>  Set the file error status for display by z999-abort.
  1506      *> -------------------------------------------------------------------------
  1507
  1508      evaluate true
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:6  Page   27

  1509
  1510        when w500-success
  1511          move "00: Successful completion." to w600-file-status
  1512            *> Nothing extra to say.
  1513
  1514        when w500-success-duplicate
  1515          move "02: Next record has same key (Read) or Duplicate key value (Write)." to w600-file-status
  1516          *> The READ statement was successfully executed, but a duplicate key was
  1517          *> detected. That is, the key value for the current key of reference was
  1518          *> equal to the value of the key in the next record.
  1519
  1520        when w500-success-incomplete
  1521          move "04: Record length does not match fixed file attributes." to w600-file-status
  1522          *> An attempt was made to read a record that is larger than the largest,
  1523          *> or smaller than the smallest record allowed by the RECORD IS VARYING
  1524          *> clause of the associated file-name.
  1525
  1526        when w500-success-optional
  1527          move "05: Optional file not present at the time of Open." to w600-file-status
  1528          *> An OPEN statement is successfully executed, but the referenced
  1529          *> optional file is not present at the time the OPEN statement is
  1530          *> executed. If the open mode is I-O or EXTEND, the file has been
  1531          *> created.
  1532
  1533        when w500-success-no-unit
  1534          move "07: REEL/UNIT specified but file is non-reel/unit medium." to w600-file-status
  1535          *> For a CLOSE statement with the NO REWIND, REEL/UNIT, or FOR REMOVAL
  1536          *> phrase or for an OPEN statement with the NO REWIND phrase, the
  1537          *> referenced file was on a non-reel/unit medium.
  1538
  1539        when w500-directory-full-missing
  1540          move "09: No room in directory or directory does not exist." to w600-file-status
  1541          *> Nothing extra to say.
  1542
  1543        when w500-end-of-file
  1544          move "10: No next logical record exists (end of file)." to w600-file-status
  1545          *> A sequential READ statement was attempted and no next logical record
  1546          *> existed in the file because the end of the file had been reached.
  1547
  1548        when w500-out-of-key-range
  1549          move "14: Number of significant digits in relative record number > key data item size." to w600-file-status
  1550          *> A sequential READ statement was attempted for a relative file and the
  1551          *> number of significant digits in the relative record number was larger
  1552          *> than the size of the relative key data item described for the file.
  1553
  1554        when w500-key-invalid
  1555          move "21: Key sequence error." to w600-file-status
  1556          *> A sequence error exists for a sequentially accessed indexed file. The
  1557          *> prime record key value has been changed by the program between the
  1558          *> successful execution of a READ statement and the execution of the
  1559          *> next REWRITE statement for that file, or the ascending requirements
  1560          *> for successive record key values were violated.
  1561          *>
  1562          *> Alternatively, the program has changed the record key value between a
  1563          *> successful READ and subsequent REWRITE or DELETE operation on a
  1564          *> randomly or dynamically-accessed file with duplicate keys.
  1565
  1566        when w500-key-exists
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:6  Page   28

  1567          move "22: Duplicate key and duplicates not allowed." to w600-file-status
  1568          *> An attempt was made to write a record that would create a duplicate
  1569          *> key in a relative file; or an attempt was made to write or rewrite a
  1570          *> record that would create a duplicate prime record key in an indexed
  1571          *> file.
  1572
  1573        when w500-key-not-exists
  1574          move "23: Record not found." to w600-file-status
  1575          *> An attempt was made to randomly access a record that does not exist
  1576          *> in the file.
  1577
  1578        when w500-permanent-error
  1579          move "30: No further information." to w600-file-status
  1580          *> Nothing extra to say.
  1581
  1582        when w500-inconsistent-filename
  1583          move "31: Dynamic file attribute conflict." to w600-file-status
  1584          *> Nothing extra to say.
  1585
  1586        when w500-boundary-violation
  1587          move "34: Failed because of a boundry violation." to w600-file-status
  1588          *> The I/O statement failed because of a boundary violation. This
  1589          *> condition indicates that an attempt has been made to write beyond
  1590          *> the externally defined boundaries of a sequential file.
  1591
  1592        when w500-not-exists
  1593          move "35: Missing file." to w600-file-status
  1594          *> An OPEN operation with the I-O, INPUT, or EXTEND phrases has been
  1595          *> tried on a non-OPTIONAL file that is not present.
  1596
  1597        when w500-permission-denied
  1598          move "37: Invalid device/unwritable file." to w600-file-status
  1599          *> An OPEN operation has been tried on a file which does not support
  1600          *> the open mode specified in the OPEN statement. Possible violations
  1601          *> are:
  1602          *>   1. The EXTEND or OUTPUT phrase was specified but the file would not
  1603          *>      support write operations.
  1604          *>   2. The I-O phrase was specified but the file would not support the
  1605          *>      input and output operations permitted.
  1606          *>   3. The INPUT phrase was specified but the file would not support
  1607          *>      read operations.
  1608
  1609        when w500-closed-with-lock
  1610          move "38: Open on file closed with LOCK." to w600-file-status
  1611          *> An OPEN operation has been tried on a file previously closed with a
  1612          *> lock.
  1613
  1614        when w500-conflict-attribute
  1615          move "39: Fixed file attribute conflict." to w600-file-status
  1616          *> A conflict has been detected between the fixed file attributes and
  1617          *> the attributes specified for the file in the program. This is usually
  1618          *> caused by a conflict with record-length, key-length, key-position or
  1619          *> file organization. Other possible causes are:
  1620          *>   1. Alternate indexes are incorrectly defined.
  1621          *>   2. The Recording Mode is Variable or Fixed or not defined the same
  1622          *>      as when the file was created..
  1623
  1624        when w500-already-open
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:6  Page   29

  1625          move "41: File is already open." to w600-file-status
  1626          *> An OPEN operation has been tried on file already opened.
  1627
  1628        when w500-not-open
  1629          move "42: File is already closed." to w600-file-status
  1630          *> A CLOSE operation has been tried on file already closed.
  1631
  1632        when w500-read-not-done
  1633          move "43: No read before rewrite/delete." to w600-file-status
  1634          *> For a sequential file in the sequential access mode, the last input-
  1635          *> output statement executed for the associated file prior to the
  1636          *> execution of a REWRITE statement was not a successfully executed READ
  1637          *> statement. For relative and indexed files in the sequential access
  1638          *> mode, the last input-output statement executed for the file prior to
  1639          *> the execution of a DELETE or REWRITE statement was not a successfully
  1640          *> executed READ statement.
  1641
  1642        when w500-record-overflow
  1643          move "44: Boundry violation." to w600-file-status
  1644          *> A boundary violation exists because an attempt was made to rewrite a
  1645          *> record to a file and the record was not the same size as the record
  1646          *> being replaced. An attempt was made to write or rewrite a record that
  1647          *> is larger than the largest, or smaller than the smallest record
  1648          *> allowed by the RECORD IS VARYING clause of the associated file-name.
  1649
  1650        when w500-read-error
  1651          move "46: Unsuccessful read/start." to w600-file-status
  1652          *> A sequential READ, READ NEXT or READ PRIOR statement was attempted on
  1653          *> a file open in the input or I-O mode and no valid next record had
  1654          *> been established because the preceding START statement was
  1655          *> unsuccessful, or the preceding READ statement was unsuccessful or
  1656          *> caused an at end condition.
  1657
  1658        when w500-input-denied
  1659          move "47: File not open for input." to w600-file-status
  1660          *> The execution of a READ or START statement was attempted on a file
  1661          *> not open in the input or I-O mode.
  1662
  1663        when w500-output-denied
  1664          move "48: File not open for output." to w600-file-status
  1665          *> The execution of a WRITE statement was attempted on a sequential file
  1666          *> not open in the output, or extend mode. The execution of a WRITE
  1667          *> statement was attempted on an indexed or relative file not open in
  1668          *> the I-O, output, or extend mode.
  1669
  1670        when w500-i-o-denied
  1671          move "49: File not open for I-O." to w600-file-status
  1672          *> The execution of a DELETE or REWRITE statement was attempted on a
  1673          *> file not open in the I-O mode.
  1674
  1675        when w500-record-locked
  1676          move "51: Record already locked." to w600-file-status
  1677          *> Nothing extra to say.
  1678
  1679        when w500-end-of-page
  1680          move "52: End of page." to w600-file-status
  1681          *> Nothing extra to say.
  1682
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:6  Page   30

  1683        when w500-i-o-linage
  1684          move "57: I-O Linage." to w600-file-status
  1685          *> Nothing extra to say.
  1686
  1687        when w500-file-sharing
  1688          move "61: File sharing." to w600-file-status
  1689          *> Nothing extra to say.
  1690
  1691        when w500-not-available
  1692          move "91: Notavailable." to w600-file-status
  1693          *> Nothing extra to say.
  1694
  1695        when other
  1696          move spaces to w600-file-status
  1697          string
  1698            "Unknown error code (", w500-file-status, ") detected." delimited by size
  1699            into w600-file-status
  1700          end-string
  1701
  1702      end-evaluate
  1703
  1704    .s001-open-read-stdin.
  1705      *> -------------------------------------------------------------------------
  1706      *>  Open Standard Input and read the first record.
  1707      *> -------------------------------------------------------------------------
  1708
  1709      open input stdin
  1710
  1711      if not w500-success then
  1712        move "s001-open-read-stdin" to w600-sub-location
  1713        move "Unable to open Standard Input." to w600-message
  1714        perform s000-set-file-error-status
  1715        perform z999-abort
  1716      end-if
  1717
  1718      perform s002-read-stdin
  1719
  1720    .s002-read-stdin.
  1721      *> -------------------------------------------------------------------------
  1722      *>  Read the next record from Standard Input.
  1723      *> -------------------------------------------------------------------------
  1724
  1725      read stdin end-read
  1726
  1727      if w500-success then
  1728        set w900-more-stdin to true
  1729
  1730      else if w500-end-of-file then
  1731        set w900-end-of-stdin to true
  1732
  1733      else
  1734        move "s002-read-stdin" to w600-sub-location
  1735        move "Unable to read a record from Standard Input." to w600-message
  1736        perform s000-set-file-error-status
  1737        perform z999-abort
  1738      end-if end-if
  1739
  1740    .s003-close-stdin.
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:6  Page   31

  1741      *> -------------------------------------------------------------------------
  1742      *>  Close Standard Input.
  1743      *> -------------------------------------------------------------------------
  1744
  1745      close stdin
  1746
  1747      if not w500-success then
  1748        move "s003-close-stdin" to w600-sub-location
  1749        move "Unable to close Standard Input." to w600-message
  1750        perform s000-set-file-error-status
  1751        perform z999-abort
  1752      end-if
  1753
  1754    .s004-open-stdout.
  1755      *> -------------------------------------------------------------------------
  1756      *>  Open Standard Output.
  1757      *> -------------------------------------------------------------------------
  1758
  1759      open output stdout
  1760
  1761      if not w500-success then
  1762        move "s004-open-stdout" to w600-sub-location
  1763        move "Unable to open Standard Output." to w600-message
  1764        perform s000-set-file-error-status
  1765        perform z999-abort
  1766      end-if
  1767
  1768    .s005-write-stdout.
  1769      *> -------------------------------------------------------------------------
  1770      *>  Write a record to Standard Output.
  1771      *> -------------------------------------------------------------------------
  1772
  1773      write stdout-record end-write
  1774
  1775      if not w500-success then
  1776        move "s005-write-stdout" to w600-sub-location
  1777        move "Unable to write a record to Standard Output." to w600-message
  1778        perform s000-set-file-error-status
  1779        perform z999-abort
  1780      end-if
  1781
  1782    .s006-close-stdout.
  1783      *> -------------------------------------------------------------------------
  1784      *>  Close Standard Output.
  1785      *> -------------------------------------------------------------------------
  1786
  1787      close stdout
  1788
  1789      if not w500-success then
  1790        move "s006-close-stdout" to w600-sub-location
  1791        move "Unable to close Standard Output." to w600-message
  1792        perform s000-set-file-error-status
  1793        perform z999-abort
  1794      end-if
  1795
  1796    .s007-open-read-workin.
  1797      *> -------------------------------------------------------------------------
  1798      *>  Open Work Input and read the first record.
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:6  Page   32

  1799      *> -------------------------------------------------------------------------
  1800
  1801      open input workin
  1802
  1803      if not w500-success then
  1804        move "s007-open-read-workin" to w600-sub-location
  1805        move "Unable to open Work Input." to w600-message
  1806        move trim(w501-workin-filename) to w600-message-2
  1807        perform s000-set-file-error-status
  1808        perform z999-abort
  1809      end-if
  1810
  1811      perform s008-read-workin
  1812
  1813    .s008-read-workin.
  1814      *> -------------------------------------------------------------------------
  1815      *>  Read the next record from Work Input.
  1816      *> -------------------------------------------------------------------------
  1817
  1818      read workin end-read
  1819
  1820      if w500-success then
  1821        set w900-more-workin to true
  1822
  1823      else if w500-end-of-file then
  1824        set w900-end-of-workin to true
  1825
  1826      else
  1827        move "s005-read-workin" to w600-sub-location
  1828        move "Unable to read a record from Work Input." to w600-message
  1829        move trim(w501-workin-filename) to w600-message-2
  1830        perform s000-set-file-error-status
  1831        perform z999-abort
  1832      end-if end-if
  1833
  1834    .s009-close-workin.
  1835      *> -------------------------------------------------------------------------
  1836      *>  Close Work Input.
  1837      *> -------------------------------------------------------------------------
  1838
  1839      close workin
  1840
  1841      if not w500-success then
  1842        move "s009-close-workin" to w600-sub-location
  1843        move "Unable to close Work Input." to w600-message
  1844        move trim(w501-workin-filename) to w600-message-2
  1845        perform s000-set-file-error-status
  1846        perform z999-abort
  1847      end-if
  1848
  1849    .s010-open-workout.
  1850      *> -------------------------------------------------------------------------
  1851      *>  Open Work Output.
  1852      *> -------------------------------------------------------------------------
  1853
  1854      open output workout
  1855
  1856      if not w500-success then
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:6  Page   33

  1857        move "s010-open-workout" to w600-sub-location
  1858        move "Unable to open Work Output." to w600-message
  1859        move trim(w501-workout-filename) to w600-message-2
  1860        perform s000-set-file-error-status
  1861        perform z999-abort
  1862      end-if
  1863
  1864    .s011-write-workout.
  1865      *> -------------------------------------------------------------------------
  1866      *>  Write a record to Work Output.
  1867      *> -------------------------------------------------------------------------
  1868
  1869      write workout-record end-write
  1870
  1871      if not w500-success then
  1872        move "s011-write-workout" to w600-sub-location
  1873        move "Unable to write a record to Work Output." to w600-message
  1874        move trim(w501-workout-filename) to w600-message-2
  1875        perform s000-set-file-error-status
  1876        perform z999-abort
  1877      end-if
  1878
  1879    .s012-close-workout.
  1880      *> -------------------------------------------------------------------------
  1881      *>  Close Work Output.
  1882      *> -------------------------------------------------------------------------
  1883
  1884      close workout
  1885
  1886      if not w500-success then
  1887        move "s012-close-workout" to w600-sub-location
  1888        move "Unable to close Work Output." to w600-message
  1889        move trim(w501-workout-filename) to w600-message-2
  1890        perform s000-set-file-error-status
  1891        perform z999-abort
  1892      end-if
  1893
  1894    .s013-create-macrolib.
  1895      *> -------------------------------------------------------------------------
  1896      *>  Create Macro Library.
  1897      *> -------------------------------------------------------------------------
  1898
  1899      open output macrolib
  1900
  1901      if not w500-success then
  1902        move "s013-create-macrolib" to w600-sub-location
  1903        move "Unable to create Macro Library." to w600-message
  1904        move trim(w501-macrolib-filename) to w600-message-2
  1905        perform z999-abort
  1906      end-if
  1907
  1908      *> Macro Library must be closed before it can be opened for use.
  1909      perform s018-close-macrolib
  1910
  1911    .s014-open-macrolib.
  1912      *> -------------------------------------------------------------------------
  1913      *>  Open Macro Library.
  1914      *> -------------------------------------------------------------------------
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:6  Page   34

  1915
  1916      open i-o macrolib
  1917
  1918      if not w500-success then
  1919        move "s014-open-macrolib" to w600-sub-location
  1920        move "Unable to open Macro Library." to w600-message
  1921        move trim(w501-macrolib-filename) to w600-message-2
  1922        perform z999-abort
  1923      end-if
  1924
  1925    .s015-read-key-macrolib.
  1926      *> -------------------------------------------------------------------------
  1927      *>  Read a record with the specified key from Macro Library.
  1928      *> -------------------------------------------------------------------------
  1929
  1930      read macrolib end-read
  1931
  1932      if w500-success then
  1933        set w906-macrolib-key-found to true
  1934
  1935      else if w500-key-not-exists then
  1936        set w906-macrolib-key-not-found to true
  1937
  1938      else
  1939        move "s015-read-key-macrolib" to w600-sub-location
  1940        move "Unable to read a record from Macro Library." to w600-message
  1941        move trim(w501-macrolib-filename) to w600-message-2
  1942        perform s000-set-file-error-status
  1943        perform z999-abort
  1944      end-if end-if
  1945
  1946    .s016-read-next-macrolib.
  1947      *> -------------------------------------------------------------------------
  1948      *>  Read the next record from Macro Library.
  1949      *> -------------------------------------------------------------------------
  1950
  1951      read macrolib next end-read
  1952
  1953      if w500-success then
  1954        set w900-more-macrolib to true
  1955
  1956      else if w500-end-of-file then
  1957        set w900-end-of-macrolib to true
  1958
  1959      else
  1960        move "s016-read-next-macrolib" to w600-sub-location
  1961        move "Unable to read a record from Macro Library." to w600-message
  1962        move trim(w501-macrolib-filename) to w600-message-2
  1963        perform s000-set-file-error-status
  1964        perform z999-abort
  1965      end-if end-if
  1966
  1967    .s017-write-macrolib.
  1968      *> -------------------------------------------------------------------------
  1969      *>  Write a record to Macro Library.
  1970      *> -------------------------------------------------------------------------
  1971
  1972      write macrolib-record end-write
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:6  Page   35

  1973
  1974      if not w500-success then
  1975        move "s017-write-macrolib" to w600-sub-location
  1976        move "Unable to write a record to Macro Library." to w600-message
  1977        move trim(w501-macrolib-filename) to w600-message-2
  1978        perform s000-set-file-error-status
  1979        perform z999-abort
  1980      end-if
  1981
  1982    .s018-close-macrolib.
  1983      *> -------------------------------------------------------------------------
  1984      *>  Close Macro Library.
  1985      *> -------------------------------------------------------------------------
  1986
  1987      close macrolib
  1988
  1989      if not w500-success then
  1990        move "s018-close-macrolib" to w600-sub-location
  1991        move "Unable to close MacroLibrary." to w600-message
  1992        move trim(w501-macrolib-filename) to w600-message-2
  1993        perform s000-set-file-error-status
  1994        perform z999-abort
  1995      end-if
  1996
  1997    .s019-open-read-incfile.
  1998      *> -------------------------------------------------------------------------
  1999      *>  Open $INCLUDE file and read the first record.
  2000      *> -------------------------------------------------------------------------
  2001
  2002      open input incfile
  2003
  2004      if not w500-success then
  2005        move "s019-open-read-incfile" to w600-sub-location
  2006        move "Unable to open $INCLUDE file." to w600-message
  2007        move trim(w501-incfile-filename) to w600-message-2
  2008        perform s000-set-file-error-status
  2009        perform z999-abort
  2010      end-if
  2011
  2012      perform s020-read-incfile
  2013
  2014    .s020-read-incfile.
  2015      *> -------------------------------------------------------------------------
  2016      *>  Read the next record from $INCLUDE file.
  2017      *> -------------------------------------------------------------------------
  2018
  2019      read incfile end-read
  2020
  2021      if w500-success then
  2022        set w900-more-incfile to true
  2023
  2024      else if w500-end-of-file then
  2025        set w900-end-of-incfile to true
  2026
  2027      else
  2028        move "s020-read-incfile" to w600-sub-location
  2029        move "Unable to read a record from $INCLUDE file." to w600-message
  2030        move trim(w501-incfile-filename) to w600-message-2
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:6  Page   36

  2031        perform s000-set-file-error-status
  2032        perform z999-abort
  2033      end-if end-if
  2034
  2035    .s021-close-incfile.
  2036      *> -------------------------------------------------------------------------
  2037      *>  Close $INCLUDE file.
  2038      *> -------------------------------------------------------------------------
  2039
  2040      close incfile
  2041
  2042      if not w500-success then
  2043        move "s021-close-incfile" to w600-sub-location
  2044        move "Unable to close $INCLUDE file." to w600-message
  2045        move trim(w501-incfile-filename) to w600-message-2
  2046        perform s000-set-file-error-status
  2047        perform z999-abort
  2048      end-if
  2049
  2050    .s022-delete-workfiles.
  2051      *> -------------------------------------------------------------------------
  2052      *>  Delete the work workfiles.
  2053      *> -------------------------------------------------------------------------
  2054
  2055      call "C$DELETE" using w501-workin-filename, 0 end-call
  2056      call "C$DELETE" using w501-workout-filename, 0 end-call
  2057      call "C$DELETE" using w501-macrolib-filename, 0 end-call
  2058
  2059    .s023-swop-work-file-assignments.
  2060      *> -------------------------------------------------------------------------
  2061      *>  Swop the Work Input and Work Output file assignments.
  2062      *> -------------------------------------------------------------------------
  2063
  2064      move w502-work-file-one to w502-work-file-swap
  2065      move w502-work-file-two to w502-work-file-one
  2066      move w502-work-file-swap to w502-work-file-two
  2067      move spaces to w502-work-file-swap
  2068
  2069    .s024-preprocessor-command.
  2070      *> -------------------------------------------------------------------------
  2071      *>  Change the default characters used in macro definitions and names.
  2072      *> -------------------------------------------------------------------------
  2073
  2074      move trim(workin-record) to workin-record
  2075
  2076      move spaces to w611-new-preprocessor-parms
  2077      unstring workin-record delimited by space or "=" or ","
  2078        into
  2079          w611-not-used-1
  2080          w611-parameter-1 w611-subparameter-1
  2081          w611-parameter-2 w611-subparameter-2
  2082          w611-parameter-3 w611-subparameter-3
  2083          w611-not-used-2
  2084      end-unstring
  2085
  2086      evaluate true
  2087
  2088        when trim(lower-case(w611-parameter-1)) = "keychar"
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:6  Page   37

  2089          move trim(w611-subparameter-1) to w608-keychar
  2090
  2091        when trim(lower-case(w611-parameter-2)) = "keychar"
  2092          move trim(w611-subparameter-2) to w608-keychar
  2093
  2094        when trim(lower-case(w611-parameter-3)) = "keychar"
  2095          move trim(w611-subparameter-3) to w608-keychar
  2096
  2097        when trim(lower-case(w611-parameter-1)) = "parmchar"
  2098          move trim(w611-subparameter-1) to w608-parmchar
  2099
  2100        when trim(lower-case(w611-parameter-2)) = "parmchar"
  2101          move trim(w611-subparameter-2) to w608-parmchar
  2102
  2103        when trim(lower-case(w611-parameter-3)) = "parmchar"
  2104          move trim(w611-subparameter-3) to w608-parmchar
  2105
  2106        when trim(lower-case(w611-parameter-1)) = "delimiter"
  2107          move trim(w611-subparameter-1) to w608-delimiter
  2108
  2109        when trim(lower-case(w611-parameter-2)) = "delimiter"
  2110          move trim(w611-subparameter-2) to w608-delimiter
  2111
  2112        when trim(lower-case(w611-parameter-3)) = "delimiter"
  2113          move trim(w611-subparameter-3) to w608-delimiter
  2114
  2115      end-evaluate
  2116
  2117  >>D display "-- debug:   keychar = [" w608-keychar "] parmchar = [" w608-parmchar "] delimiter = [" w608-delimiter "]" upon stderr end-display
  2118
  2119    .s025-open-read-macrostd.
  2120      *> -------------------------------------------------------------------------
  2121      *>  Open Standard Macros and read the first record.
  2122      *> -------------------------------------------------------------------------
  2123
  2124      open input macrostd
  2125
  2126      if w500-success then
  2127        perform s026-read-macrostd
  2128
  2129      else if w500-success-optional
  2130        set w900-end-of-macrostd to true
  2131
  2132      else
  2133        move "s025-open-read-macrostd" to w600-sub-location
  2134        move "Unable to open Standard Input." to w600-message
  2135        perform s000-set-file-error-status
  2136        perform z999-abort
  2137      end-if end-if
  2138
  2139    .s026-read-macrostd.
  2140      *> -------------------------------------------------------------------------
  2141      *>  Read the next record from Standard Macros.
  2142      *> -------------------------------------------------------------------------
  2143
  2144      read macrostd end-read
  2145
  2146      if w500-success then
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:6  Page   38

  2147        set w900-more-macrostd to true
  2148
  2149      else if w500-end-of-file then
  2150        set w900-end-of-macrostd to true
  2151
  2152      else
  2153        move "s026-read-macrostd" to w600-sub-location
  2154        move "Unable to read a record from Standard Macros." to w600-message
  2155        perform s000-set-file-error-status
  2156        perform z999-abort
  2157      end-if end-if
  2158
  2159    .s027-close-macrostd.
  2160      *> -------------------------------------------------------------------------
  2161      *>  Close Standard Macros.
  2162      *> -------------------------------------------------------------------------
  2163
  2164      close macrostd
  2165
  2166      if not w500-success then
  2167        move "s027-close-macrostd" to w600-sub-location
  2168        move "Unable to close Standard Macros." to w600-message
  2169        perform s000-set-file-error-status
  2170        perform z999-abort
  2171      end-if
  2172
  2173  *> End of Internal Subroutines.
  2174  *> *****************************************************************************
  2175
  2176  .end program cobolmac.
  2177
  2178  *> *****************************************************************************
  2179  *> Start of Functions.
  2180
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:6  Page   39
Symbols of Module: COBOLMAC (COBOLMAC)
--------------------------------------

Data Section (FILE)              Defn    Locations
--------------------------------+---------------------------------------------------------------


INCFILE                         000112F  000152 002002 002019 002040
INCFILE-RECORD                  000154F  000869 000873 000874 000875 000876 000877 000878 000879
                                         000883
MACROLIB                        000106F  000143 001899 001916 001930 001951 001987
MACROLIB-CODE-LINE              000150F  001056 001083 001295 001301 001302 001302 001308 001327
                                         001328 001328 001334 001371 001373 001389 001423
MACROLIB-DATA                   000149F  001115
MACROLIB-KEY                    000109F  000146
MACROLIB-LINE-NUMBER            000148F  000992 001055 001081 001110 001115 001213
MACROLIB-NAME                   000147F  000991 001054 001082 001112 001212 001217 001316 001340
                                         001364 001381 001395
MACROLIB-RECORD                 000145F  001972
MACROSTD                        000117F  000156 002124 002144 002164
MACROSTD-RECORD                 000158F  000819
STDIN                           000086F  000127 001709 001725 001745
STDIN-RECORD                    000129F  000763 000767 000768 000769 000770 000771 000772 000773
                                         000777 000806 000807
STDOUT                          000091F  000131 001759 001787
STDOUT-RECORD                   000133F  001456 001773
W500-FILE-STATUS                000089F  000094 000099 000104 000110 000115 000120 000280 001698
W501-INCFILE-FILENAME           000112F  000326 000862 002007 002030 002045
W501-MACROLIB-FILENAME          000106F  000325 000715 000718 001904 001921 001941 001962 001977
                                         001992 002057
W501-MACROSTD-FILENAME          000117F  000327 000633 000730 000731
W501-WORKIN-FILENAME            000096F  000323 000836 000917 001141 001447 001806 001829 001844
                                         002055
W501-WORKOUT-FILENAME           000101F  000324 000753 000840 000921 001145 001859 001874 001889
                                         002056
WORKIN                          000096F  000135 001801 001818 001839
WORKIN-RECORD                   000137F  000851 000853 000854 000896 000936 000937 000938 000939
                                         000940 000941 000942 000945 000948 000949 000981 001023
                                         001071 001160 001192 001194 001206 001261 001417 001423
                                         001423 001456 002074 002077
WORKOUT                         000101F  000139 001854 001884
WORKOUT-RECORD                  000141F  000774 000777 000819 000880 000883 000896 000943 000949
                                         001023 001027 001030 001160 001286 001289 001307 001308
                                         001333 001334 001347 001350 001362 001365 001372 001373
                                         001388 001389 001402 001405 001421 001425 001869
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:6  Page   40
Symbols of Module: COBOLMAC (COBOLMAC)
--------------------------------------

Data Section (WORKING-STORAGE)   Defn    Locations
--------------------------------+---------------------------------------------------------------


05                              000423W
W100-COPYRIGHT                  000172W
W100-PROGRAM-ID-LINE-01         000167W  000611 000680 001476
W100-PROGRAM-ID-LINE-02         000171W  000612 000681 001477
W100-PROGRAM-ID-LINE-03         000173W  000613 000682 001478
W100-PROGRAM-ID-LINE-04         000174W  000614 000683 001479
W100-PROGRAM-IDENTITY           000166W
W100-PROGRAM-V-UU-FF            000169W
W101-PROGRAM-USAGE              000176W
W101-USAGE-INDEX                000177W  000687 000688 000690
W101-USAGE-LINE                 000212W  000688 000690
W101-USAGE-TEXT                 000178W  000211
W300-DELIMITER                  000230W  000728
W300-KEYCHAR                    000224W  000726 001194 001261 001417
W300-PARMCHAR                   000227W  000727
W300-PREPROCESSOR-DEFAULTS      000223W
W301-MAX-CALL-PARMS             000234W  001299 001325
W302-ID-MARKER                  000248W  001301 001302 001327 001328
W302-ID-MARKER-VALUES           000237W  000247
W302-ID-MARKERS                 000236W
W400-LONG-OPTION-ALIAS          000266W  000557 000561 000565 000569 000573 000577 000581
W400-LONG-OPTION-ARGUMENT       000261W
W400-LONG-OPTION-INDEX          000268W  000590
W400-LONG-OPTION-NAME           000260W  000556 000560 000564 000568 000572 000576 000580
W400-LONG-OPTION-PREFIX         000270W  000591
W400-LONG-OPTION-RECORD         000259W
W400-LONG-OPTIONS               000258W  000590
W400-NO-ARGUMENT                000262W  000558 000562 000566 000570 000574 000578
W400-OPTION-ARGUMENT            000274W  000587 000592 000633
W400-OPTION-ID                  000272W  000592 000602 000646
W400-OPTIONAL-ARGUMENT          000264W
W400-REQUIRED-ARGUMENT          000263W  000582
W400-SHORT-OPTIONS              000256W  000590
W500-ALREADY-OPEN               000304W  001624
W500-BOUNDARY-VIOLATION         000298W  001586
W500-CLOSED-WITH-LOCK           000301W  001609
W500-CONFLICT-ATTRIBUTE         000302W  001614
W500-DIRECTORY-FULL-MISSING     000287W  001539
W500-END-OF-FILE                000289W  001543 001730 001823 001956 002024 002149
W500-END-OF-PAGE                000314W  001679
W500-FILE-SHARING               000317W  001687
W500-FILE-STATUS                000280W  001698
W500-I-O-DENIED                 000311W  001670
W500-I-O-LINAGE                 000315W  001683
W500-INCONSISTENT-FILENAME      000297W  001582
W500-INPUT-DENIED               000309W  001658
W500-KEY-EXISTS                 000293W  001566
W500-KEY-INVALID                000292W  001554
W500-KEY-NOT-EXISTS             000294W  001573 001935
W500-NOT-AVAILABLE              000319W  001691
W500-NOT-EXISTS                 000299W  001592
W500-NOT-OPEN                   000305W  001628
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:6  Page   41
Symbols of Module: COBOLMAC (COBOLMAC)
--------------------------------------

Data Section (WORKING-STORAGE)   Defn    Locations
--------------------------------+---------------------------------------------------------------


W500-OUT-OF-KEY-RANGE           000290W  001548
W500-OUTPUT-DENIED              000310W  001663
W500-PERMANENT-ERROR            000296W  001578
W500-PERMISSION-DENIED          000300W  001597
W500-READ-ERROR                 000308W  001650
W500-READ-NOT-DONE              000306W  001632
W500-RECORD-LOCKED              000313W  001675
W500-RECORD-OVERFLOW            000307W  001642
W500-SUCCESS                    000282W  001510 001711 001727 001747 001761 001775 001789 001803
                                         001820 001841 001856 001871 001886 001901 001918 001932
                                         001953 001974 001989 002004 002021 002042 002126 002146
                                         002166
W500-SUCCESS-DUPLICATE          000283W  001514
W500-SUCCESS-INCOMPLETE         000284W  001520
W500-SUCCESS-NO-UNIT            000286W  001533
W500-SUCCESS-OPTIONAL           000285W  001526 002129
W501-INCFILE-FILENAME           000326W  000862 002007 002030 002045
W501-MACROLIB-FILENAME          000325W  000715 000718 001904 001921 001941 001962 001977 001992
                                         002057
W501-MACROSTD-FILENAME          000327W  000633 000730 000731
W501-WORKIN-FILENAME            000323W  000836 000917 001141 001447 001806 001829 001844 002055
W501-WORKOUT-FILENAME           000324W  000753 000840 000921 001145 001859 001874 001889 002056
W502-WORK-FILE-ONE              000330W  000703 000706 000753 000836 000917 001141 001447 002064
                                         002065
W502-WORK-FILE-SWAP             000332W  002064 002066 002067
W502-WORK-FILE-TWO              000331W  000709 000712 000840 000921 001145 002065 002066
W502-WORK-FILES                 000329W
W600-ERROR-HANDLING             000338W
W600-FILE-STATUS                000343W  000516 000649 000667 000748 001014 001251 001492 001493
                                         001511 001515 001521 001527 001534 001540 001544 001549
                                         001555 001567 001574 001579 001583 001587 001593 001598
                                         001610 001615 001625 001629 001633 001643 001651 001659
                                         001664 001671 001676 001680 001684 001688 001692 001696
                                         001699
W600-LOCATION                   000339W  000514 000643 000658 000739 000744 000754 000757 000778
                                         000790 000795 000798 000820 000823 000828 000837 000841
                                         000863 000884 000888 000897 000901 000906 000909 000918
                                         000922 000927 000930 000950 000958 000963 000966 000969
                                         000993 001017 001024 001033 001057 001064 001084 001088
                                         001099 001104 001117 001126 001134 001142 001146 001161
                                         001165 001170 001173 001182 001214 001249 001291 001309
                                         001313 001335 001337 001352 001367 001374 001378 001390
                                         001392 001407 001428 001448 001450 001457 001459 001464
                                         001466 001483
W600-MESSAGE                    000341W  000515 000522 000644 000647 000659 000665 000747 001008
                                         001011 001021 001029 001250 001486 001713 001735 001749
                                         001763 001777 001791 001805 001828 001843 001858 001873
                                         001888 001903 001920 001940 001961 001976 001991 002006
                                         002029 002044 002134 002154 002168
W600-MESSAGE-2                  000342W  001488 001489 001806 001829 001844 001859 001874 001889
                                         001904 001921 001941 001962 001977 001992 002007 002030
                                         002045
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:6  Page   42
Symbols of Module: COBOLMAC (COBOLMAC)
--------------------------------------

Data Section (WORKING-STORAGE)   Defn    Locations
--------------------------------+---------------------------------------------------------------


W600-SUB-LOCATION               000340W  001483 001712 001734 001748 001762 001776 001790 001804
                                         001827 001842 001857 001872 001887 001902 001919 001939
                                         001960 001975 001990 002005 002028 002043 002133 002153
                                         002167
W602-OS-IS-OTHER                000349W
W602-OS-IS-WINDOWS              000348W
W602-OS-TYPE                    000347W  000544
W603-RANDOM-NUMBER              000351W  000699 000705 000711 000717
W604-GETOPT-STATUS              000353W  000595 000662
W604-INVALID-OPTION-NAME        000358W  000642
W604-NO-MORE-OPTIONS            000354W  000585 000652
W604-NON-OPTION                 000355W
W604-OPTION-ARGUMENT-TRUNCATED  000356W  000637
W604-VALID-OPTION-NAME          000357W  000599
W605-DEFINE-CODE                000362W  000986 001049 001051 001056 001073 001083
W605-DEFINE-DELIMITER           000364W  001051 001060 001073 001076
W605-DEFINE-LINE-NUMBER         000363W  001048 001055 001080 001081
W605-DEFINE-NAME                000361W  000985 000989 000991 001010 001043 001054 001082
W605-MACRO-DEFINE-WORKAREA      000360W
W605-NOT-USED                   000365W  000984
W606-CALL-COUNT                 000379W  001140 001176 001218
W606-CALL-END                   000369W  001418 001419 001423
W606-CALL-NAME                  000370W  001204 001208 001212 001264 001288 001418
W606-CALL-NAME-DELIMITER        000372W  001204 001208 001231 001264
W606-CALL-NAME-START            000371W  001205 001209
W606-CALL-PARAMETER             000377W
W606-CALL-PARAMETERS            000374W  001268
W606-CALL-PARM                  000378W  001271 001272 001273 001274 001275 001276 001277 001278
                                         001279 001302 001328
W606-CALL-PARM-NUMBER           000376W  001298 001299 001301 001302 001302 001324 001325 001327
                                         001328 001328
W606-CALL-PARMS-COUNT           000375W  001280 001283
W606-CALL-PARMS-LIST            000373W  001265 001269 001288
W606-CALL-START                 000368W  001193 001194 001196 001199 001205 001289 001308 001334
                                         001350 001365 001373 001389 001405 001416 001417 001419
                                         001423
W606-MACRO-CALL-WORKAREA        000367W
W606-NOT-USED                   000384W  001263
W606-POST-CALL                  000382W
W606-POST-CALL-DELIMITER        000383W
W606-PRE-CALL                   000380W
W606-PRE-CALL-DELIMITER         000381W
W607-COMMENT-START              000386W  001191 001192 001199 001199
W608-DELIMITER                  000391W  000728 001049 001060 001071 001076 002107 002110 002113
                                         002117
W608-KEYCHAR                    000389W  000726 000982 002089 002092 002095 002117
W608-PARMCHAR                   000390W  000727 002098 002101 002104 002117
W608-PREPROCESSOR               000388W
W609-INCLUDE-FILE               000395W  000857 000860 000862
W609-INCLUDE-FILE-UNSTRING      000393W
W609-NOT-USED                   000394W  000856
W610-MACROLIB-NAME              000397W  001217 001316 001340 001349 001381 001395 001404
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:6  Page   43
Symbols of Module: COBOLMAC (COBOLMAC)
--------------------------------------

Data Section (WORKING-STORAGE)   Defn    Locations
--------------------------------+---------------------------------------------------------------


W611-NEW-PREPROCESSOR-PARMS     000399W  002076
W611-NOT-USED-1                 000400W  002079
W611-NOT-USED-2                 000407W  002083
W611-PARAMETER-1                000401W  002080 002088 002097 002106
W611-PARAMETER-2                000403W  002081 002091 002100 002109
W611-PARAMETER-3                000405W  002082 002094 002103 002112
W611-SUBPARAMETER-1             000402W  002080 002089 002098 002107
W611-SUBPARAMETER-2             000404W  002081 002092 002101 002110
W611-SUBPARAMETER-3             000406W  002082 002095 002104 002113
W900-END-OF-INCFILE             000437W  000867 002025
W900-END-OF-MACROLIB            000433W  001108 001317 001321 001341 001382 001386 001396 001957
W900-END-OF-MACROSTD            000441W  000817 002130 002150
W900-END-OF-STDIN               000425W  000742 000761 001731
W900-END-OF-WORKIN              000429W  000849 000934 001152 001454 001824
W900-MORE-INCFILE               000436W  002022
W900-MORE-MACROLIB              000432W  001954
W900-MORE-MACROSTD              000440W  000781 002147
W900-MORE-STDIN                 000424W  001728
W900-MORE-WORKIN                000428W  001821
W901-OS-IS-LINUX                000445W  000546
W901-OS-IS-UNKNOWN              000444W
W901-OS-IS-WINDOWS              000446W  000548
W903-WS-SECTION-FOUND           000452W  000783 000808
W903-WS-SECTION-NOT-FOUND       000451W  000781
W904-HARD-WARNINGS              000456W  000518 000621 001016
W904-SOFT-WARNINGS              000455W
W905-DEFINE-DELIMITER-FOUND     000459W  001061 001069 001077
W905-DEFINE-DELIMITER-NOT-FOUND 000460W  001046 001087
W906-MACROLIB-KEY-FOUND         000463W  000996 001216 001933
W906-MACROLIB-KEY-NOT-FOUND     000464W  001936
W907-EXCLUDE-MACRO-BEGIN-END    000467W
W907-INCLUDE-MACRO-BEGIN-END    000468W  000624 001285 001346 001361 001401
W908-MORE-MACRO-CALLS           000471W  000510
W908-NO-MORE-MACRO-CALLS        000472W  001138 001177
W909-INTERNAL-DEBUG-OFF         000475W
W909-INTERNAL-DEBUG-ON          000476W  000627 001482
W910-HIDE-MACROLIB              000479W
W910-LIST-MACROLIB              000480W  000630 000972
W911-DEFINED-MACROS             000484W  000509 000972 001045
W911-NO-DEFINED-MACROS          000483W
W912-MORE-INCLUDE-FILES         000488W  000764 000870
W912-NO-INCLUDE-FILES           000487W  000505 000846
W913-MACRO-CALL-FOUND           000492W  001156 001219
W913-MACRO-CALL-NOT-FOUND       000491W  001197 001200 001222
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:6  Page   44
Variable Tested [S]            Symbol (88-Conditions)
--------------------------------------------------------------


05                              W900-MORE-STDIN
05                              W900-END-OF-STDIN
FILLER                          W900-MORE-WORKIN
FILLER                          W900-END-OF-WORKIN
FILLER                          W900-MORE-MACROLIB
FILLER                          W900-END-OF-MACROLIB
FILLER                          W900-MORE-INCFILE
FILLER                          W900-END-OF-INCFILE
FILLER                          W900-MORE-MACROSTD
FILLER                          W900-END-OF-MACROSTD
FILLER                          W901-OS-IS-WINDOWS
FILLER                          W905-DEFINE-DELIMITER-FOUND
FILLER                          W905-DEFINE-DELIMITER-NOT-FOUND
FILLER                          W906-MACROLIB-KEY-FOUND
FILLER                          W906-MACROLIB-KEY-NOT-FOUND
FILLER                          W908-MORE-MACRO-CALLS
FILLER                          W908-NO-MORE-MACRO-CALLS
W400-LONG-OPTION-ARGUMENT       W400-NO-ARGUMENT
W400-LONG-OPTION-ARGUMENT       W400-REQUIRED-ARGUMENT
W400-LONG-OPTION-ARGUMENT       W400-OPTIONAL-ARGUMENT
W500-FILE-STATUS                W500-SUCCESS
W500-FILE-STATUS                W500-SUCCESS-DUPLICATE
W500-FILE-STATUS                W500-SUCCESS-INCOMPLETE
W500-FILE-STATUS                W500-SUCCESS-OPTIONAL
W500-FILE-STATUS                W500-SUCCESS-NO-UNIT
W500-FILE-STATUS                W500-DIRECTORY-FULL-MISSING
W500-FILE-STATUS                W500-END-OF-FILE
W500-FILE-STATUS                W500-OUT-OF-KEY-RANGE
W500-FILE-STATUS                W500-KEY-INVALID
W500-FILE-STATUS                W500-KEY-EXISTS
W500-FILE-STATUS                W500-KEY-NOT-EXISTS
W500-FILE-STATUS                W500-PERMANENT-ERROR
W500-FILE-STATUS                W500-INCONSISTENT-FILENAME
W500-FILE-STATUS                W500-BOUNDARY-VIOLATION
W500-FILE-STATUS                W500-NOT-EXISTS
W500-FILE-STATUS                W500-PERMISSION-DENIED
W500-FILE-STATUS                W500-CLOSED-WITH-LOCK
W500-FILE-STATUS                W500-CONFLICT-ATTRIBUTE
W500-FILE-STATUS                W500-ALREADY-OPEN
W500-FILE-STATUS                W500-NOT-OPEN
W500-FILE-STATUS                W500-READ-NOT-DONE
W500-FILE-STATUS                W500-RECORD-OVERFLOW
W500-FILE-STATUS                W500-READ-ERROR
W500-FILE-STATUS                W500-INPUT-DENIED
W500-FILE-STATUS                W500-OUTPUT-DENIED
W500-FILE-STATUS                W500-I-O-DENIED
W500-FILE-STATUS                W500-RECORD-LOCKED
W500-FILE-STATUS                W500-END-OF-PAGE
W500-FILE-STATUS                W500-I-O-LINAGE
W500-FILE-STATUS                W500-FILE-SHARING
W500-FILE-STATUS                W500-NOT-AVAILABLE
W602-OS-TYPE                    W602-OS-IS-WINDOWS
W602-OS-TYPE                    W602-OS-IS-OTHER
W604-GETOPT-STATUS              W604-NO-MORE-OPTIONS
W604-GETOPT-STATUS              W604-NON-OPTION
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:6  Page   45
Variable Tested [S]            Symbol (88-Conditions)
--------------------------------------------------------------


W604-GETOPT-STATUS              W604-OPTION-ARGUMENT-TRUNCATED
W604-GETOPT-STATUS              W604-VALID-OPTION-NAME
W604-GETOPT-STATUS              W604-INVALID-OPTION-NAME
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:6  Page   46
Variable Tested                Symbol (88-Conditions) [S]
--------------------------------------------------------------


W400-LONG-OPTION-ARGUMENT       W400-NO-ARGUMENT
W400-LONG-OPTION-ARGUMENT       W400-OPTIONAL-ARGUMENT
W400-LONG-OPTION-ARGUMENT       W400-REQUIRED-ARGUMENT
W500-FILE-STATUS                W500-ALREADY-OPEN
W500-FILE-STATUS                W500-BOUNDARY-VIOLATION
W500-FILE-STATUS                W500-CLOSED-WITH-LOCK
W500-FILE-STATUS                W500-CONFLICT-ATTRIBUTE
W500-FILE-STATUS                W500-DIRECTORY-FULL-MISSING
W500-FILE-STATUS                W500-END-OF-FILE
W500-FILE-STATUS                W500-END-OF-PAGE
W500-FILE-STATUS                W500-FILE-SHARING
W500-FILE-STATUS                W500-I-O-DENIED
W500-FILE-STATUS                W500-I-O-LINAGE
W500-FILE-STATUS                W500-INCONSISTENT-FILENAME
W500-FILE-STATUS                W500-INPUT-DENIED
W500-FILE-STATUS                W500-KEY-EXISTS
W500-FILE-STATUS                W500-KEY-INVALID
W500-FILE-STATUS                W500-KEY-NOT-EXISTS
W500-FILE-STATUS                W500-NOT-AVAILABLE
W500-FILE-STATUS                W500-NOT-EXISTS
W500-FILE-STATUS                W500-NOT-OPEN
W500-FILE-STATUS                W500-OUT-OF-KEY-RANGE
W500-FILE-STATUS                W500-OUTPUT-DENIED
W500-FILE-STATUS                W500-PERMANENT-ERROR
W500-FILE-STATUS                W500-PERMISSION-DENIED
W500-FILE-STATUS                W500-READ-ERROR
W500-FILE-STATUS                W500-READ-NOT-DONE
W500-FILE-STATUS                W500-RECORD-LOCKED
W500-FILE-STATUS                W500-RECORD-OVERFLOW
W500-FILE-STATUS                W500-SUCCESS
W500-FILE-STATUS                W500-SUCCESS-DUPLICATE
W500-FILE-STATUS                W500-SUCCESS-INCOMPLETE
W500-FILE-STATUS                W500-SUCCESS-NO-UNIT
W500-FILE-STATUS                W500-SUCCESS-OPTIONAL
W602-OS-TYPE                    W602-OS-IS-OTHER
W602-OS-TYPE                    W602-OS-IS-WINDOWS
W604-GETOPT-STATUS              W604-INVALID-OPTION-NAME
W604-GETOPT-STATUS              W604-NO-MORE-OPTIONS
W604-GETOPT-STATUS              W604-NON-OPTION
W604-GETOPT-STATUS              W604-OPTION-ARGUMENT-TRUNCATED
W604-GETOPT-STATUS              W604-VALID-OPTION-NAME
FILLER                          W900-END-OF-INCFILE
FILLER                          W900-END-OF-MACROLIB
FILLER                          W900-END-OF-MACROSTD
05                              W900-END-OF-STDIN
FILLER                          W900-END-OF-WORKIN
FILLER                          W900-MORE-INCFILE
FILLER                          W900-MORE-MACROLIB
FILLER                          W900-MORE-MACROSTD
05                              W900-MORE-STDIN
FILLER                          W900-MORE-WORKIN
FILLER                          W901-OS-IS-WINDOWS
FILLER                          W905-DEFINE-DELIMITER-FOUND
FILLER                          W905-DEFINE-DELIMITER-NOT-FOUND
FILLER                          W906-MACROLIB-KEY-FOUND
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:6  Page   47
Variable Tested                Symbol (88-Conditions) [S]
--------------------------------------------------------------


FILLER                          W906-MACROLIB-KEY-NOT-FOUND
FILLER                          W908-MORE-MACRO-CALLS
FILLER                          W908-NO-MORE-MACRO-CALLS
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:6  Page   48
Functions                        Defn    Locations
--------------------------------+---------------------------------------------------------------


CURRENT-DATE                    000700I
LOWER-CASE                      002088I  002091 002094 002097 002100 002103 002106 002109 002112
MODULE-FORMATTED-DATE           000615I
SUBSTITUTE                      001302I  001328
TRIM                            000602I  000633 000646 000853 000860 000862 000989 000991 001010
                                         001021 001029 001043 001054 001082 001112 001115 001212
                                         001288 001288 001302 001328 001349 001364 001404 001418
                                         001423 001483 001483 001486 001488 001489 001492 001493
                                         001806 001829 001844 001859 001874 001889 001904 001921
                                         001941 001962 001977 001992 002007 002030 002045 002074
                                         002088 002089 002091 002092 002094 002095 002097 002098
                                         002100 002101 002103 002104 002106 002107 002109 002110
                                         002112 002113
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:6  Page   49
Procedure                        Defn    Locations
--------------------------------+---------------------------------------------------------------


A000-INITIALISE                 000529P  000501
A100-GET-OPERATING-SYSTEM-TYPE  000539P  000534
A200-GET-COMMAND-LINE-OPTIONS   000551P  000535
A210-DISPLAY-PROGRAM-USAGE      000674P  000605
A400-GENERATE-WORK-FILENAMES    000694P  000536
A500-INITIALISE-DEFAULTS        000721P  000537
B000-COPY-STDIN-TO-WORKOUT      000734P  000502
B100-CHECK-FOR-WS-SECTION       000801P  000782
B200-LOAD-MACROSTD              000811P  000784
C000-LOAD-INCLUDE-FILES         000831P  000504
COBOLMAC                        002176P
COBOLMAC-MAINLINE               000496P
D000-LOAD-DEFINE-COMMANDS       000912P  000507
D100-PROCESS-DEFINE-COMMAND     000976P  000954
D110-FOUND-DUPLICATE-MACRO      001003P  000997
D120-ADD-MACRO-TO-LIBRARY       001038P  001000
D200-LIST-MACROLIB              001094P  000973
E000-EXPAND-MACRO-CALLS         001129P  000511
E100-FIND-MACRO-CALL            001185P  001154
E200-CONVERT-CALL-TO-CODE       001226P  001157
E210-MACRO-WITH-PARAMETERS      001256P  001234
E220-MACRO-WITHOUT-PARAMETERS   001356P  001237
E230-MACRO-AS-A-CONSTANT        001411P  001240 001243 001246
INSTR                           000763P  000767 000768 000769 000770 000771 000772 000773 000806
                                         000807 000851 000869 000873 000874 000875 000876 000877
                                         000878 000879 000936 000937 000938 000939 000940 000941
                                         000942 000945 000948 001192 001194 001301 001327 001417
S000-SET-FILE-ERROR-STATUS      001503P  001714 001736 001750 001764 001778 001792 001807 001830
                                         001845 001860 001875 001890 001942 001963 001978 001993
                                         002008 002031 002046 002135 002155 002169
S001-OPEN-READ-STDIN            001704P  000740
S002-READ-STDIN                 001720P  000791 001718
S003-CLOSE-STDIN                001740P  000745 000799
S004-OPEN-STDOUT                001754P  001451
S005-WRITE-STDOUT               001768P  001458
S006-CLOSE-STDOUT               001782P  001465
S007-OPEN-READ-WORKIN           001796P  000838 000919 001143 001449
S008-READ-WORKIN                001813P  000902 000959 001065 001089 001166 001460 001811
S009-CLOSE-WORKIN               001834P  000907 000970 001174 001467
S010-OPEN-WORKOUT               001849P  000755 000842 000923 001147
S011-WRITE-WORKOUT              001864P  000779 000821 000885 000898 000951 001025 001034 001162
                                         001292 001310 001336 001353 001368 001375 001391 001408
                                         001429
S012-CLOSE-WORKOUT              001879P  000796 000910 000964 001171
S013-CREATE-MACROLIB            001894P  000928
S014-OPEN-MACROLIB              001911P  000931 001100 001135
S015-READ-KEY-MACROLIB          001925P  000994 001215
S016-READ-NEXT-MACROLIB         001946P  001105 001118 001314 001338 001379 001393
S017-WRITE-MACROLIB             001967P  001058 001085
S018-CLOSE-MACROLIB             001982P  000967 001127 001183 001909
S019-OPEN-READ-INCFILE          001997P  000864
S020-READ-INCFILE               002014P  000889 002012
S021-CLOSE-INCFILE              002035P  000893
S022-DELETE-WORKFILES           002050P  001437 001474
S023-SWOP-WORK-FILE-ASSIGNMENTS 002059P  000844 000925 001149
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:6  Page   50
Procedure                        Defn    Locations
--------------------------------+---------------------------------------------------------------


S024-PREPROCESSOR-COMMAND       002069P  000946
S025-OPEN-READ-MACROSTD         002119P  000758
S026-READ-MACROSTD              002139P  000824 002127
S027-CLOSE-MACROSTD             002159P  000829
STDERR                          000522P  000610 000611 000612 000613 000614 000615 000616 000679
                                         000680 000681 000682 000683 000684 000690 000860 000989
                                         001021 001043 001102 001103 001111 001112 001115 001122
                                         001123 001124 001475 001476 001477 001478 001479 001480
                                         001483 001486 001489 001493 001496 002117
Z000-FINALISE                   001431P  000527
Z100-COPY-WORKIN-TO-STDOUT      001442P  001436
Z999-ABORT                      001469P  000519 000650 000668 000749 001018 001252 001715 001737
                                         001751 001765 001779 001793 001808 001831 001846 001861
                                         001876 001891 001905 001922 001943 001964 001979 001994
                                         002009 002032 002047 002136 002156 002170
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:6  Page   51
Unreferenced Working Storage Symbols


05                              000423W
W100-COPYRIGHT                  000172W
W100-PROGRAM-IDENTITY           000166W
W100-PROGRAM-V-UU-FF            000169W
W101-PROGRAM-USAGE              000176W
W300-PREPROCESSOR-DEFAULTS      000223W
W302-ID-MARKERS                 000236W
W400-LONG-OPTION-ARGUMENT       000261W
W400-LONG-OPTION-RECORD         000259W
W400-OPTIONAL-ARGUMENT          000264W
W502-WORK-FILES                 000329W
W600-ERROR-HANDLING             000338W
W602-OS-IS-OTHER                000349W
W602-OS-IS-WINDOWS              000348W
W604-NON-OPTION                 000355W
W605-MACRO-DEFINE-WORKAREA      000360W
W606-CALL-PARAMETER             000377W
W606-MACRO-CALL-WORKAREA        000367W
W606-POST-CALL                  000382W
W606-POST-CALL-DELIMITER        000383W
W606-PRE-CALL                   000380W
W606-PRE-CALL-DELIMITER         000381W
W608-PREPROCESSOR               000388W
W609-INCLUDE-FILE-UNSTRING      000393W
W901-OS-IS-UNKNOWN              000444W
W904-SOFT-WARNINGS              000455W
W907-EXCLUDE-MACRO-BEGIN-END    000467W
W909-INTERNAL-DEBUG-OFF         000475W
W910-HIDE-MACROLIB              000479W
W911-NO-DEFINED-MACROS          000483W
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:6  Page   52
Unreferenced Procedures


COBOLMAC                        002176P
COBOLMAC-MAINLINE               000496P



ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:6  Page   53

  2181  identification division.
  2182
  2183    function-id.                         instr.
  2184
  2185  *> -----------------------------------------------------------------------------
  2186  *> Purpose:          An InStr function in COBOL for COBOL.
  2187  *>
  2188  *> Usage:            found-pos = instr(source-str, search-str)
  2189  *>
  2190  *> Parameters:
  2191  *>   source-str      The string to be searched starting at character 1.
  2192  *>   search-str      The string to search for.
  2193  *>
  2194  *> Returns:
  2195  *>   found-pos       The char position in source-str where search-str starts.
  2196  *>                   Returns zero if search-str is not found.
  2197  *>
  2198  *> Notes:            Before the search is started the following is done:
  2199  *>                   1) Trailing spaces removed from source string.
  2200  *>                   2) Leading and trailing spaces removed from search string.
  2201  *>                   3) Source and search strings are case downshifted.
  2202  *> -----------------------------------------------------------------------------
  2203
  2204  environment division.
  2205
  2206    configuration section.
  2207
  2208      repository.
  2209        function all intrinsic.
  2210
  2211  data division.
  2212
  2213    working-storage section.
  2214      01  source-lstr                    pic x(256).
  2215      01  source-length                  pic s9(04) comp.
  2216      01  search-lstr                    pic x(256).
  2217      01  search-length                  pic s9(04) comp.
  2218      01  start-index                    pic s9(04) comp value zero.
  2219      01  stop-index                     pic s9(04) comp value zero.
  2220
  2221    linkage section.
  2222      01  source-str                     pic x(001) any length.
  2223      01  search-str                     pic x(001) any length.
  2224      01  found-pos                      pic s9(04) comp.
  2225
  2226  procedure division using source-str, search-str returning found-pos.
  2227
  2228    instr-mainline.
  2229
  2230      *> Downshift the source and search strings and get their lengths.
  2231      move lower-case(source-str) to source-lstr
  2232      move length(trim(source-lstr, trailing)) to source-length
  2233      move lower-case(search-str) to search-lstr
  2234      move length(trim(search-lstr)) to search-length
  2235
  2236      *> Return zero if search string longer than source string.
  2237      if search-length > source-length then
  2238        move zero to found-pos
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:6  Page   54

  2239        goback
  2240      end-if
  2241
  2242      *> Return one if the search and source strings are the same.
  2243      if trim(search-lstr) = trim(source-lstr) then
  2244        move 1 to found-pos
  2245        goback
  2246      end-if
  2247
  2248      *> Calculate where the stop index is (stops us getting a bounds violation).
  2249      compute stop-index
  2250        = (source-length - search-length) + 1
  2251      end-compute
  2252
  2253      *> Loop until we find the search string or we hit the stop index.
  2254      perform
  2255        varying start-index from 1 by 1
  2256        until (source-lstr(start-index:search-length) = search-lstr(1:search-length))
  2257           or (start-index = stop-index)
  2258
  2259        *> Nothing to do here as it's all done in the perform statement.
  2260
  2261      end-perform
  2262
  2263      *> If we've found the search string then return where.
  2264      if start-index < stop-index then
  2265        move start-index to found-pos
  2266        goback
  2267      end-if
  2268
  2269      *> If we get here then the search string was not found.
  2270      move zero to found-pos
  2271      goback
  2272
  2273  .end function instr.
  2274
  2275  *> End of source code.
  2276  *> *****************************************************************************
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:6  Page   55
Symbols of Module: COBOLMAC (COBOLMAC)
--------------------------------------

Data Section (WORKING-STORAGE)   Defn    Locations
--------------------------------+---------------------------------------------------------------


SEARCH-LENGTH                   002217W  002234 002237 002250 002256 002256
SEARCH-LSTR                     002216W  002233 002234 002243 002256
SOURCE-LENGTH                   002215W  002232 002237 002250
SOURCE-LSTR                     002214W  002231 002232 002243 002256
START-INDEX                     002218W  002255 002256 002257 002264 002265
STOP-INDEX                      002219W  002249 002257 002264
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:6  Page   56
Symbols of Module: COBOLMAC (COBOLMAC)
--------------------------------------

Data Section (LINKAGE)           Defn    Locations
--------------------------------+---------------------------------------------------------------


FOUND-POS                       002224K  002226 002238 002244 002265 002270
SEARCH-STR                      002223K  002226 002233
SOURCE-STR                      002222K  002226 002231
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:6  Page   57
Functions                        Defn    Locations
--------------------------------+---------------------------------------------------------------


LOWER-CASE                      002231I  002233
TRIM                            002232I  002234 002243 002243
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:6  Page   58
Procedure                        Defn    Locations
--------------------------------+---------------------------------------------------------------


INSTR                           002273P
INSTR-MAINLINE                  002228P
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:6  Page   59
Unreferenced Working Storage Symbols


None
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    11/06/15  22:13:08:6  Page   60
Unreferenced Procedures


INSTR                           002273P
INSTR-MAINLINE                  002228P

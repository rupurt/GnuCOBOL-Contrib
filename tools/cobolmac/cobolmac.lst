
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:3  Page    1

     1  *> **  >>SOURCE FORMAT IS FREE
     2
     3  identification division.
     4
     5    program-id.                          cobolmac.
     6
     7  *> -----------------------------------------------------------------------------
     8  *>  CobolMac: a COBOL Macro Preprocessor.
     9  *> -----------------------------------------------------------------------------
    10  *>
    11  *>  This program is free software: you can redistribute it and/or modify it
    12  *>  under the terms of the GNU General Public License as published by the Free
    13  *>  Software Foundation, either version 3 of the License, or (at your option)
    14  *>  any later version.
    15  *>
    16  *>  This program is distributed in the hope that it will be useful, but WITHOUT
    17  *>  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
    18  *>  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
    19  *>  more details.
    20  *>
    21  *>  You should have received a copy of the GNU General Public License along with
    22  *>  this program. If not, see <http://www.gnu.org/licenses/>.
    23  *>
    24  *> -----------------------------------------------------------------------------
    25  *>
    26  *>  Description:
    27  *>
    28  *>    CobolMac is a COBOL Macro Preprocessor tool that reads a COBOL source file
    29  *>    prior to processing by GnuCOBOL's cobc.
    30  *>
    31  *>    It associates a macro name with a string of text. Macros can have up to
    32  *>    nine formal parameters. In the definition actual parameters are supplied
    33  *>    to replace the formal parameters when the macro is called in the source
    34  *>    program.
    35  *>
    36  *>    CobolMac is implemented as a command-line filter that emulates the macro
    37  *>    capability that is available with the Hewlett-Packard HPe3000 COBOL II/iX
    38  *>    Compiler.
    39  *>
    40  *>    Note: CobolMac assumes that it is preprocessing FREE FORMAT files. If used
    41  *>          to preprocess a FIXED FORMAT file then extra care must be taken when
    42  *>          defining the macros to ensure that all added code resides in the
    43  *>          correct areas - Area A (cols 7 to 11) and Area B (cols 12 to 72).
    44  *>
    45  *>  Usage:
    46  *>
    47  *>    w101-usage-text in Working-Storage contains the program usage text which
    48  *>    is displayed by using the --help option.
    49  *>
    50  *>  Compilation Instructions:
    51  *>
    52  *>    Production:
    53  *>
    54  *>      cobc -x cobolmac.cob
    55  *>
    56  *>    Development (enable ALL warnings and debugging lines):
    57  *>
    58  *>      cobc -x -W -fdebugging-line cobolmac.cob
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:3  Page    2

    59  *>
    60  *>  Modification History:
    61  *>
    62  *>    See the ChangeLog file.
    63  *>
    64  *>  Developer Notes:
    65  *>
    66  *>    See the DevNotes file.
    67  *>
    68  *> -----------------------------------------------------------------------------
    69
    70  environment division.
    71
    72    configuration section.
    73
    74      source-computer.                   Linux Mint Rebecca; Cinnamon Edition.
    75      object-computer.                   Linux Mint Rebecca; Cinnamon Edition.
    76
    77      repository.
    78
    79        function instr
    80        function all intrinsic.
    81
    82    input-output section.
    83
    84      file-control.
    85
    86        select stdin                     assign to keyboard
    87                                         access is sequential
    88                                         organization is line sequential
    89                                         file status is w500-file-status
    90                                         .
    91        select stdout                    assign to display
    92                                         access is sequential
    93                                         organization is line sequential
    94                                         file status is w500-file-status
    95                                         .
    96        select workin                    assign to w501-workin-filename
    97                                         access is sequential
    98                                         organization is line sequential
    99                                         file status is w500-file-status
   100                                         .
   101        select workout                   assign to w501-workout-filename
   102                                         access is sequential
   103                                         organization is line sequential
   104                                         file status is w500-file-status
   105                                         .
   106        select macrolib                  assign to w501-macrolib-filename
   107                                         access is dynamic
   108                                         organization is indexed
   109                                         record key is macrolib-key
   110                                         file status is w500-file-status
   111                                         .
   112        select incfile                   assign to w501-incfile-filename
   113                                         access is sequential
   114                                         organization is line sequential
   115                                         file status is w500-file-status
   116                                         .
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:3  Page    3

   117
   118  data division.
   119
   120    file section.
   121
   122      fd  stdin.
   123
   124      01  stdin-record                   pic x(256).
   125
   126      fd  stdout.
   127
   128      01  stdout-record                  pic x(256).
   129
   130      fd  workin.
   131
   132      01  workin-record                  pic x(256).
   133
   134      fd  workout.
   135
   136      01  workout-record                 pic x(256).
   137
   138      fd  macrolib.
   139
   140      01  macrolib-record.
   141        05  macrolib-key.
   142          10  macrolib-name              pic x(030).
   143          10  macrolib-line-number       pic 9(004).
   144        05  macrolib-data.
   145          10  macrolib-code-line         pic x(256).
   146
   147      fd  incfile.
   148
   149      01  incfile-record                 pic x(256).
   150
   151    working-storage section.
   152
   153      *> -------------------------------------------------------------------------
   154      *>  w1nn - Program Identification and Usage.
   155      *> -------------------------------------------------------------------------
   156
   157      01  w100-program-identity.
   158        05  w100-program-id-line-01.
   159          10                             pic x(009) value "cobolmac/".
   160          10  w100-program-v-uu-ff       pic x(007) value "B.01.00".
   161          10                             pic x(063) value " - COBOL Macro Preprocessor.".
   162        05  w100-program-id-line-02.
   163          10  w100-copyright             pic x(079) value "Copyright (c) Robert W. Mills (robertw-mills@users.sf.net), 2014-2015.".
   164        05  w100-program-id-line-03      pic x(079) value "This is free software; see the source for copying conditions. There is NO".
   165        05  w100-program-id-line-04      pic x(079) value "WARRANTY; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.".
   166
   167      01  w101-program-usage.
   168        05  w101-usage-index             pic s9(04) comp.
   169        05  w101-usage-text.
   170                             *>"         1         2         3         4         5         6         7         "
   171                             *>"1234567890123456789012345678901234567890123456789012345678901234567890123456789"
   172          10  pic x(079) value "  Usage:".
   173          10  pic x(079) value "    $ cobolmac [options] <input >output [2>messages]".
   174          10  pic x(079) value "    $ cobolmac [options] <input [2>messages] | program2".
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:3  Page    4

   175          10  pic x(079) value "    $ program1 | cobolmac [options] [2>messages] | program2".
   176          10  pic x(079) value " ".
   177          10  pic x(079) value "  Parameters:".
   178          10  pic x(079) value "    options        The available values are:".
   179          10  pic x(079) value "      --help       Display this text and exit.".
   180          10  pic x(079) value "      --version    Display the preprocessor version and exit.".
   181          10  pic x(079) value "      --hardwarn   Treat all warnings like an error.".
   182          10  pic x(079) value "      --verbose    Include Macro Begin/End comment lines.".
   183          10  pic x(079) value "      --debug      Display additional error information.".
   184          10  pic x(079) value "      --maclib     List the contents of the Macro Library.".
   185          10  pic x(079) value "    input          [path/]name of file Standard Input redirected to.".
   186          10  pic x(079) value "    output         [path/]name of file Standard Output redirected to.".
   187          10  pic x(079) value "    messages       optional [path/]name of file Standard Error redirected to.".
   188          10  pic x(079) value "    program1       [path/]name of program that writes to Standard Output.".
   189          10  pic x(079) value "    program2       [path/]name of program that reads from Standard Input.".
   190          10  pic x(079) value " ".
   191          10  pic x(079) value "  Return Codes:".
   192          10  pic x(079) value "    0 (zero)       Program completed without any errors.".
   193          10  pic x(079) value "    1 (one)        Program terminated in an error state.".
   194          10  pic x(079) value "                   Details written to Standard Error prior to termination.".
   195          10  pic x(079) value "                   The output file, if created, is incomplete/corrupt.".
   196          10  pic x(079) value " ".
   197          10  pic x(079) value "***". *> end of program usage text marker.
   198                             *>"         1         2         3         4         5         6         7         "
   199                             *>"1234567890123456789012345678901234567890123456789012345678901234567890123456789"
   200        05  w101-usage-lines             redefines w101-usage-text.
   201          10  w101-usage-line            pic x(079) occurs 26.
   202              *> Update occurs count if number of fillers below w101-usage-text changes.
   203
   204      *> -------------------------------------------------------------------------
   205      *>  w2nn - SQL Host Variables.
   206      *> -------------------------------------------------------------------------
   207
   208      *> -------------------------------------------------------------------------
   209      *>  w3nn - Program Constants.
   210      *> -------------------------------------------------------------------------
   211
   212      01  w300-preprocessor-defaults.
   213        05  w300-keychar                 pic x(001) value "%".
   214              *> This specifies the initial character of the macro name in both
   215              *> the macro definition and macro call.
   216        05  w300-parmchar                pic x(001) value "!".
   217              *> This specifies the initial character of the formal parameters in
   218              *> the macro definition.
   219        05  w300-delimiter               pic x(001) value "#".
   220              *> This specifies the character to be used to terminate the macro
   221              *> definition and the actual parameters in a macro call.
   222
   223      01  w301-max-call-parms            pic s9(04) comp value 9.
   224
   225      01  w302-id-markers.
   226        05  w302-id-marker-values.
   227          10  pic x(002) value "!1".
   228          10  pic x(002) value "!2".
   229          10  pic x(002) value "!3".
   230          10  pic x(002) value "!4".
   231          10  pic x(002) value "!5".
   232          10  pic x(002) value "!6".
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:3  Page    5

   233          10  pic x(002) value "!7".
   234          10  pic x(002) value "!8".
   235          10  pic x(002) value "!9".
   236        05  w302-id-markers-redef        redefines w302-id-marker-values.
   237          10  w302-id-marker             pic x(002) occurs 9.
   238
   239      *> -------------------------------------------------------------------------
   240      *>  w4nn - System Intrinsic Parameters.
   241      *> -------------------------------------------------------------------------
   242
   243      *> -------------------------------------------------------------------------
   244      *>  w5nn - File Status, Handles and Buffers.
   245      *> -------------------------------------------------------------------------
   246
   247      01  w500-file-status               pic x(002).
   248
   249        88  w500-success                            value "00".
   250        88  w500-success-duplicate                  value "02".
   251        88  w500-success-incomplete                 value "04".
   252        88  w500-success-optional                   value "05".
   253        88  w500-success-no-unit                    value "07".
   254        88  w500-directory-full-missing             value "09".
   255
   256        88  w500-end-of-file                        value "10".
   257        88  w500-out-of-key-range                   value "14".
   258
   259        88  w500-key-invalid                        value "21".
   260        88  w500-key-exists                         value "22".
   261        88  w500-key-not-exists                     value "23".
   262
   263        88  w500-permanent-error                    value "30".
   264        88  w500-inconsistent-filename              value "31".
   265        88  w500-boundary-violation                 value "34".
   266        88  w500-not-exists                         value "35".
   267        88  w500-permission-denied                  value "37".
   268        88  w500-closed-with-lock                   value "38".
   269        88  w500-conflict-attribute                 value "39".
   270
   271        88  w500-already-open                       value "41".
   272        88  w500-not-open                           value "42".
   273        88  w500-read-not-done                      value "43".
   274        88  w500-record-overflow                    value "44".
   275        88  w500-read-error                         value "46".
   276        88  w500-input-denied                       value "47".
   277        88  w500-output-denied                      value "48".
   278        88  w500-i-o-denied                         value "49".
   279
   280        88  w500-record-locked                      value "51".
   281        88  w500-end-of-page                        value "52".
   282        88  w500-i-o-linage                         value "57".
   283
   284        88  w500-file-sharing                       value "61".
   285
   286        88  w500-not-available                      value "91".
   287
   288      *> The following 4 variables have to be at the 01 level.
   289
   290      01  w501-workin-filename           pic x(256).
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:3  Page    6

   291      01  w501-workout-filename          pic x(256).
   292      01  w501-macrolib-filename         pic x(256).
   293      01  w501-incfile-filename          pic x(256).
   294
   295      01  w502-work-files.
   296        05  w502-work-file-one           pic x(256).
   297        05  w502-work-file-two           pic x(256).
   298        05  w502-work-file-swap          pic x(256).
   299
   300      *> -------------------------------------------------------------------------
   301      *>  w6nn - General Work Variables.
   302      *> -------------------------------------------------------------------------
   303
   304      01  w600-error-handling.
   305        05  w600-location                pic x(080) value spaces.
   306        05  w600-sub-location            pic x(080) value spaces.
   307        05  w600-message                 pic x(240) value spaces.
   308        05  w600-message-2               pic x(240) value spaces.
   309        05  w600-file-status             pic x(080) value spaces.
   310
   311      01  w601-argv-option               pic x(256) value spaces.
   312        88  w601-help                               value "--help".
   313        88  w601-version                            value "--version".
   314        88  w601-hard-warnings                      value "--hardwarn".
   315        88  w601-verbose                            value "--verbose".
   316        88  w601-debug                              value "--debug".
   317        88  w601-list-macrolib                      value "--maclib".
   318
   319      01  w602-os-type                   pic x(030) value "Other".
   320        88  w602-os-is-windows                      value "Windows_NT".
   321        88  w602-os-is-other                        value "Other".
   322
   323      01  w603-random-number             pic 9(009) value zero.
   324
   325      *> w604- is available for use.
   326
   327      01  w605-macro-define-workarea.
   328        05  w605-define-name             pic x(080).
   329        05  w605-define-code             pic x(256).
   330        05  w605-define-line-number      pic 9(004).
   331        05  w605-define-delimiter        pic x(001).
   332        05  w605-not-used                pic x(256).
   333
   334      01  w606-macro-call-workarea.
   335        05  w606-call-start              pic s9(04) comp.
   336        05  w606-call-end                pic s9(04) comp.
   337        05  w606-call-name               pic x(256) value spaces.
   338        05  w606-call-name-start         pic s9(04) comp.
   339        05  w606-call-name-delimiter     pic x(001) value spaces.
   340        05  w606-call-parms-list         pic x(256).
   341        05  w606-call-parameters.
   342          10  w606-call-parms-count      pic s9(04) comp value zero.
   343          10  w606-call-parm-number      pic s9(04) comp.
   344          10  w606-call-parameter        occurs 9.
   345            15  w606-call-parm           pic x(080).
   346        05  w606-call-count              pic s9(04) comp.
   347        05  w606-pre-call                pic x(256) value spaces.
   348        05  w606-pre-call-delimiter      pic x(001) value spaces.
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:3  Page    7

   349        05  w606-post-call               pic x(256) value spaces.
   350        05  w606-post-call-delimiter     pic x(001) value spaces.
   351        05  w606-not-used                pic x(256).
   352
   353      01  w607-comment-start             pic s9(04) comp.
   354
   355      01  w608-preprocessor.
   356        05  w608-keychar                 pic x(001).
   357        05  w608-parmchar                pic x(001).
   358        05  w608-delimiter               pic x(001).
   359
   360      01  w609-include-file-unstring.
   361        05  w609-not-used                pic x(256).
   362        05  w609-include-file            pic x(256).
   363
   364      01  w610-macrolib-name             pic x(030).
   365
   366      01  w611-new-preprocessor-parms.
   367        05  w611-not-used-1              pic x(080).
   368        05  w611-parameter-1             pic x(010).
   369        05  w611-subparameter-1          pic x(010).
   370        05  w611-parameter-2             pic x(010).
   371        05  w611-subparameter-2          pic x(010).
   372        05  w611-parameter-3             pic x(010).
   373        05  w611-subparameter-3          pic x(010).
   374        05  w611-not-used-2              pic x(256).
   375
   376      *> -------------------------------------------------------------------------
   377      *>  w7nn - Hard Coded Messages.
   378      *> -------------------------------------------------------------------------
   379
   380      *> -------------------------------------------------------------------------
   381      *>  w8nn - Printer Output Lines.
   382      *> -------------------------------------------------------------------------
   383
   384      *> -------------------------------------------------------------------------
   385      *>  w9nn - Process Control Switches.
   386      *> -------------------------------------------------------------------------
   387
   388      01  . *> End-of-file flags.
   389
   390        05  pic x(001). *> Standard Input end-of-file?
   391          88  w900-more-stdin                       value "M".
   392          88  w900-end-of-stdin                     value "E".
   393
   394        05  pic x(001). *> Work Input end-of-file?
   395          88  w900-more-workin                      value "M".
   396          88  w900-end-of-workin                    value "E".
   397
   398        05  pic x(001). *> Macro Library end-of-file?
   399          88  w900-more-macrolib                    value "M".
   400          88  w900-end-of-macrolib                  value "E".
   401
   402        05  pic x(001). *> $INCLUDE end-of-file?
   403          88  w900-more-incfile                     value "M".
   404          88  w900-end-of-incfile                   value "E".
   405
   406      01  pic x(001) value "U". *> What is the Operating System Type?
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:3  Page    8

   407        88  w901-os-is-unknown                      value "U". *> Default setting.
   408        88  w901-os-is-linux                        value "L".
   409        88  w901-os-is-windows                      value "W".
   410
   411      01  pic x(001) value "M". *> Are there any more Command Line options?
   412        88  w902-more-commands                      value "M". *> Default setting.
   413        88  w902-last-command                       value "L".
   414
   415      *> w903- is available for use.
   416
   417      01  pic x(001) value "S". *> Are Warnings Hard or Soft?
   418        88  w904-soft-warnings                      value "S". *> Default setting.
   419        88  w904-hard-warnings                      value "H".
   420
   421      01  pic x(001). *> Have we found a $DEFINE Delimiter?
   422        88  w905-define-delimiter-found             value "F".
   423        88  w905-define-delimiter-not-found         value "N".
   424
   425      01  pic x(001). *> Have we found an entry in the Macro Library?
   426        88  w906-macrolib-key-found                 value "F".
   427        88  w906-macrolib-key-not-found             value "N".
   428
   429      01  pic x(001) value "E". *> Do we output a Macro Begin/End Marker?
   430        88  w907-exclude-macro-begin-end            value "E". *> Default setting.
   431        88  w907-include-macro-begin-end            value "I".
   432
   433      01  pic x(001). *> Are there any more Macro Calls?
   434        88  w908-more-macro-calls                   value "M".
   435        88  w908-no-more-macro-calls                value "N".
   436
   437      01  pic x(001) value "F". *> Is the internal debug flag set?
   438        88  w909-internal-debug-off                 value "F". *> Default setting.
   439        88  w909-internal-debug-on                  value "N".
   440
   441      01  pic x(001) value "H". *> Do we display the contents of the Macro Library?
   442        88  w910-hide-macrolib                      value "H". *> Default setting.
   443        88  w910-list-macrolib                      value "D".
   444
   445      01  pic x(001) value "N". *> Do we have any $DEFINEd Macros?
   446        88  w911-no-defined-macros                  value "N". *> Default setting.
   447        88  w911-defined-macros                     value "D".
   448
   449      01  pic x(001) value "N". *> Are there any more $INCLUDE files to be loaded?
   450        88  w912-no-include-files                   value "N". *> Default setting.
   451        88  w912-more-include-files                 value "M".
   452
   453      01  pic x(001) value "N". *> Have we found a Macro Call?
   454        88  w913-macro-call-not-found               value "N". *> Default setting.
   455        88  w913-macro-call-found                   value "F".
   456
   457  procedure division.
   458
   459    cobolmac-mainline.
   460      *> -------------------------------------------------------------------------
   461      *>  Program Control Block.
   462      *> -------------------------------------------------------------------------
   463
   464      perform a000-initialise
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:3  Page    9

   465      perform b000-copy-stdin-to-workout
   466
   467      perform c000-load-include-files
   468        until w912-no-include-files
   469
   470      perform d000-load-define-commands
   471
   472      if w911-defined-macros then *> We have some preprocessing to do.
   473        set w908-more-macro-calls to true
   474        perform e000-expand-macro-calls
   475
   476      else *> No macro definitions were found.
   477        move "cobolmac-mainline" to w600-location
   478        move "No macro definitions have been found." to w600-message
   479        move "N/A" to w600-file-status
   480
   481        if w904-hard-warnings then *> Terminate the program.
   482          perform z999-abort
   483
   484        else *> Display message and exit.
   485          display w600-message upon stderr end-display
   486        end-if
   487
   488      end-if
   489
   490      perform z000-finalise
   491
   492    .a000-initialise.
   493      *> --------------------------------------------------------------------------
   494      *>  Start of Program Processing.
   495      *> --------------------------------------------------------------------------
   496
   497      perform a100-get-operating-system-type
   498      perform a200-get-command-line-options
   499      perform a400-generate-work-filenames
   500      perform a500-initialise-defaults
   501
   502    .a100-get-operating-system-type.
   503      *> -------------------------------------------------------------------------
   504      *>  Which operating system are we running on?
   505      *> -------------------------------------------------------------------------
   506
   507      accept w602-os-type from environment "OP"
   508        on exception
   509          set w901-os-is-linux to true *> Assume Linux until we find another way.
   510        not on exception
   511          set w901-os-is-windows to true
   512      end-accept
   513
   514    .a200-get-command-line-options.
   515      *> -------------------------------------------------------------------------
   516      *>  Get the command-line options and validate them.
   517      *> -------------------------------------------------------------------------
   518
   519      perform
   520        until w902-last-command
   521
   522        move low-values to w601-argv-option
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:3  Page   10

   523        accept w601-argv-option from argument-value end-accept
   524
   525        if w601-argv-option > low-values then *> Found argument.
   526
   527          evaluate true
   528
   529            when w601-help *> --help
   530              perform a210-display-program-usage
   531              move zero to return-code
   532              goback
   533
   534            when w601-version *> --version
   535              display space upon stderr end-display
   536              display w100-program-id-line-01 upon stderr end-display
   537              display w100-program-id-line-02 upon stderr end-display
   538              display w100-program-id-line-03 upon stderr end-display
   539              display w100-program-id-line-04 upon stderr end-display
   540              display "Built " module-formatted-date upon stderr end-display
   541              display space upon stderr end-display
   542              move zero to return-code
   543              goback
   544
   545            when w601-hard-warnings *> --hardwarn
   546              set w904-hard-warnings to true
   547
   548            when w601-verbose *> --verbose
   549              set w907-include-macro-begin-end to true
   550
   551            when w601-debug *> --debug
   552              set w909-internal-debug-on to true
   553
   554            when w601-list-macrolib *> --maclib
   555              set w910-list-macrolib to true
   556
   557            when other *> Invalid option.
   558              move "a200-get-command-line-options" to w600-location
   559              move spaces to w600-message
   560              string
   561                "Invalid command-line option: ", w601-argv-option delimited by size
   562                into w600-message
   563              end-string
   564              move "N/A" to w600-file-status
   565              perform z999-abort
   566
   567          end-evaluate
   568
   569        else *> No more options were found.
   570          set w902-last-command to true
   571        end-if
   572
   573      end-perform
   574
   575    .a210-display-program-usage.
   576      *> -------------------------------------------------------------------------
   577      *>  Display the program usage on Standard Error.
   578      *> -------------------------------------------------------------------------
   579
   580      display space upon stderr end-display
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:3  Page   11

   581      display w100-program-id-line-01 upon stderr end-display
   582      display w100-program-id-line-02 upon stderr end-display
   583      display w100-program-id-line-03 upon stderr end-display
   584      display w100-program-id-line-04 upon stderr end-display
   585      display space upon stderr end-display
   586
   587      perform
   588        varying w101-usage-index from 1 by 1
   589        until w101-usage-line(w101-usage-index) = "***"
   590
   591        display w101-usage-line(w101-usage-index) upon stderr end-display
   592
   593      end-perform
   594
   595    .a400-generate-work-filenames.
   596      *> -------------------------------------------------------------------------
   597      *>  Generate Macro Library, Work Input and Work Output filenames.
   598      *> -------------------------------------------------------------------------
   599
   600      compute w603-random-number
   601        = random(current-date(1:16)) * 1000000000
   602      end-compute
   603
   604      move spaces to w502-work-file-one
   605      string
   606        "/tmp/cobolmac-", w603-random-number, "-1" delimited by size
   607        into w502-work-file-one
   608      end-string
   609
   610      move spaces to w502-work-file-two
   611      string
   612        "/tmp/cobolmac-", w603-random-number, "-2" delimited by size
   613        into w502-work-file-two
   614      end-string
   615
   616      move spaces to w501-macrolib-filename
   617      string
   618        "/tmp/cobolmac-", w603-random-number, "-0" delimited by size
   619        into w501-macrolib-filename
   620      end-string
   621
   622    .a500-initialise-defaults.
   623      *> -------------------------------------------------------------------------
   624      *>  Initialise default variable values.
   625      *> -------------------------------------------------------------------------
   626
   627      move w300-keychar to w608-keychar
   628      move w300-parmchar to w608-parmchar.
   629      move w300-delimiter to w608-delimiter.
   630
   631    .b000-copy-stdin-to-workout.
   632      *> -------------------------------------------------------------------------
   633      *>  Copy Standard Input to Work Output.
   634      *> -------------------------------------------------------------------------
   635
   636      move "b000-copy-stdin-to-workout (1)" to w600-location
   637      perform s001-open-read-stdin
   638
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:3  Page   12

   639      if w900-end-of-stdin then
   640
   641        move "b000-copy-stdin-to-workout (2)" to w600-location
   642        perform s003-close-stdin
   643
   644        move "The specified input file was empty." to w600-message
   645        move "N/A" to w600-file-status
   646        perform z999-abort
   647
   648      end-if
   649
   650      move w502-work-file-one to w501-workout-filename
   651      move "b000-copy-stdin-to-workout (3)" to w600-location
   652      perform s010-open-workout
   653
   654      perform
   655        until w900-end-of-stdin
   656
   657        if instr(stdin-record, "$include") > zero then *> $INCLUDE file found.
   658          set w912-more-include-files to true
   659        end-if
   660
   661        if instr(stdin-record, "$if") > zero
   662        or instr(stdin-record, "$set") > zero
   663        or instr(stdin-record, "$page") > zero
   664        or instr(stdin-record, "$title") > zero
   665        or instr(stdin-record, "$control") > zero
   666        or instr(stdin-record, "$version") > zero
   667        or instr(stdin-record, "$copyright") > zero then
   668          move "This record type is not supported." to workout-record
   669
   670        else
   671          move stdin-record to workout-record
   672          move "b000-copy-stdin-to-workout (4)" to w600-location
   673          perform s011-write-workout
   674        end-if
   675
   676        move "b000-copy-stdin-to-workout (5)" to w600-location
   677        perform s002-read-stdin
   678
   679      end-perform
   680
   681      move "b000-copy-stdin-to-workout (6)" to w600-location
   682      perform s012-close-workout
   683
   684      move "b000-copy-stdin-to-workout (7)" to w600-location
   685      perform s003-close-stdin
   686
   687    .c000-load-include-files.
   688      *> -------------------------------------------------------------------------
   689      *>  Load $INCLUDE file into Work Output.
   690      *> -------------------------------------------------------------------------
   691
   692      move w502-work-file-one to w501-workin-filename
   693      move "c000-load-include-files (1)" to w600-location
   694      perform s007-open-read-workin
   695
   696      move w502-work-file-two to w501-workout-filename
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:4  Page   13

   697      move "c000-load-include-files (2)" to w600-location
   698      perform s010-open-workout
   699
   700      perform s023-swop-work-file-assignments
   701
   702      set w912-no-include-files to true
   703
   704      perform
   705        until w900-end-of-workin
   706
   707        if instr(workin-record, "$include") > zero then *> $INCLUDE file found.
   708
   709          move trim(workin-record) to workin-record
   710          unstring workin-record delimited by space
   711            into
   712              w609-not-used
   713              w609-include-file
   714          end-unstring
   715
   716  >>D     display "-- debug:   Loading file " trim(w609-include-file) upon stderr end-display
   717
   718          move trim(w609-include-file) to w501-incfile-filename
   719          move "c000-load-include-files (3)" to w600-location
   720          perform s019-open-read-incfile
   721
   722          perform
   723            until w900-end-of-incfile
   724
   725            if instr(incfile-record, "$include") > zero then *> Nested $INCLUDE file found.
   726              set w912-more-include-files to true
   727            end-if
   728
   729            if instr(incfile-record, "$if") > zero
   730            or instr(incfile-record, "$set") > zero
   731            or instr(incfile-record, "$page") > zero
   732            or instr(incfile-record, "$title") > zero
   733            or instr(incfile-record, "$control") > zero
   734            or instr(incfile-record, "$version") > zero
   735            or instr(incfile-record, "$copyright") > zero then
   736              move "This record type is not supported." to workout-record
   737
   738            else
   739              move incfile-record to workout-record
   740              move "c000-load-include-files (4)" to w600-location
   741              perform s011-write-workout
   742            end-if
   743
   744            move "c000-load-include-files (5)" to w600-location
   745            perform s020-read-incfile
   746
   747          end-perform
   748
   749          perform s021-close-incfile
   750
   751        else *> Normal record found.
   752          move workin-record to workout-record
   753          move "c000-load-include-files (6)" to w600-location
   754          perform s011-write-workout
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:4  Page   14

   755        end-if
   756
   757        move "c000-load-include-files (7)" to w600-location
   758        perform s008-read-workin
   759
   760      end-perform
   761
   762      move "c000-load-include-files (8)" to w600-location
   763      perform s009-close-workin
   764
   765      move "c000-load-include-files (9)" to w600-location
   766      perform s012-close-workout
   767
   768    .d000-load-define-commands.
   769      *> -------------------------------------------------------------------------
   770      *>  Extract $DEFINEd macros and load into Macro Library.
   771      *> -------------------------------------------------------------------------
   772
   773      move w502-work-file-one to w501-workin-filename
   774      move "d000-load-define-commands (1)" to w600-location
   775      perform s007-open-read-workin
   776
   777      move w502-work-file-two to w501-workout-filename
   778      move "d000-load-define-commands (2)" to w600-location
   779      perform s010-open-workout
   780
   781      perform s023-swop-work-file-assignments
   782
   783      move "d000-load-define-commands (3)" to w600-location
   784      perform s013-create-macrolib
   785
   786      move "d000-load-define-commands (4)" to w600-location
   787      perform s014-open-macrolib
   788
   789      perform
   790        until w900-end-of-workin
   791
   792        if instr(workin-record, "$if") > zero
   793        or instr(workin-record, "$set") > zero
   794        or instr(workin-record, "$page") > zero
   795        or instr(workin-record, "$title") > zero
   796        or instr(workin-record, "$control") > zero
   797        or instr(workin-record, "$version") > zero
   798        or instr(workin-record, "$copyright") > zero then
   799          move "This record type is not supported." to workout-record
   800
   801        else if instr(workin-record, "$preprocessor") > zero then *> $PREPROCESSOR command found.
   802          perform s024-preprocessor-command
   803
   804        else if instr(workin-record, "$define") = zero then *> $DEFINE command not found.
   805          move workin-record to workout-record
   806          move "d000-load-define-commands (5)" to w600-location
   807          perform s011-write-workout
   808
   809        else
   810          perform d100-process-define-command
   811
   812        end-if end-if end-if
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:4  Page   15

   813
   814        move "d000-load-define-commands (6)" to w600-location
   815        perform s008-read-workin
   816
   817      end-perform
   818
   819      move "d000-load-define-commands (7)" to w600-location
   820      perform s012-close-workout
   821
   822      move "d000-load-define-commands (8)" to w600-location
   823      perform s018-close-macrolib
   824
   825      move "d000-load-define-commands (9)" to w600-location
   826      perform s009-close-workin
   827
   828      if w910-list-macrolib and w911-defined-macros then
   829        perform d200-list-macrolib
   830      end-if
   831
   832    .d100-process-define-command.
   833      *> -------------------------------------------------------------------------
   834      *>  Process the $DEFINE command.
   835      *> -------------------------------------------------------------------------
   836
   837      unstring workin-record
   838        delimited by w608-keychar or "="
   839        into
   840          w605-not-used
   841          w605-define-name
   842          w605-define-code
   843      end-unstring
   844
   845  >>D display "-- debug:   Looking in Macro Library for %", trim(w605-define-name), "." upon stderr end-display
   846
   847      move trim(w605-define-name) to macrolib-name
   848      move zeros to macrolib-line-number
   849      move "d100-process-define-command" to w600-location
   850      perform s015-read-key-macrolib
   851
   852      if w906-macrolib-key-found then *> We have a duplicate macro name.
   853        perform d110-found-duplicate-macro
   854
   855      else *> We have a new macro. Add it to Macro Library.
   856        perform d120-add-macro-to-library
   857      end-if
   858
   859    .d110-found-duplicate-macro.
   860      *> -------------------------------------------------------------------------
   861      *> Found a duplicate macro name. Generate an error or a warning?
   862      *> -------------------------------------------------------------------------
   863
   864      move spaces to w600-message
   865      string
   866        "The ", trim(w605-define-name), " macro has already been $DEFINEd." delimited by size
   867        into w600-message
   868      end-string
   869
   870      move "N/A" to w600-file-status
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:4  Page   16

   871
   872      if w904-hard-warnings then *> Terminate the program.
   873        move "d110-found-duplicate-macro (1)" to w600-location
   874        perform z999-abort
   875
   876      else *> Write warning messages and continue.
   877        display "  WARNING: ", trim(w600-message) upon stderr end-display
   878
   879        move workin-record to workout-record
   880        move "d110-found-duplicate-macro (2)" to w600-location
   881        perform s011-write-workout
   882
   883        move spaces to workout-record
   884        string
   885          "*> WARNING: ", trim(w600-message) delimited by size
   886          into workout-record
   887        end-string
   888
   889        move "d110-found-duplicate-macro (3)" to w600-location
   890        perform s011-write-workout
   891
   892      end-if
   893
   894    .d120-add-macro-to-library.
   895      *> -------------------------------------------------------------------------
   896      *> Add the macro definition to the Macro Library.
   897      *> -------------------------------------------------------------------------
   898
   899  >>D display "-- debug:     Adding %", trim(w605-define-name), " to Macro Library." upon stderr end-display
   900
   901      set w911-defined-macros to true
   902      set w905-define-delimiter-not-found to true
   903
   904      move zeros to w605-define-line-number
   905      unstring w605-define-code delimited by w608-delimiter
   906        into
   907          w605-define-code delimiter in w605-define-delimiter
   908      end-unstring
   909
   910      move trim(w605-define-name) to macrolib-name
   911      move w605-define-line-number to macrolib-line-number
   912      move w605-define-code to macrolib-code-line
   913      move "d120-add-macro-to-library (1)" to w600-location
   914      perform s017-write-macrolib
   915
   916      if w605-define-delimiter = w608-delimiter then *> $DEFINE delimiter was found.
   917        set w905-define-delimiter-found to true
   918
   919      else *> $DEFINE delimiter was not found.
   920        move "d120-add-macro-to-library (2)" to w600-location
   921        perform s008-read-workin
   922      end-if
   923
   924      perform
   925        until w905-define-delimiter-found
   926
   927        unstring workin-record delimited by w608-delimiter
   928          into
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:4  Page   17

   929            w605-define-code delimiter in w605-define-delimiter
   930        end-unstring
   931
   932        if w605-define-delimiter = w608-delimiter then *> $DEFINE delimiter found.
   933          set w905-define-delimiter-found to true
   934        end-if
   935
   936        add 1 to w605-define-line-number end-add
   937        move w605-define-line-number to macrolib-line-number
   938        move trim(w605-define-name) to macrolib-name
   939        move w605-define-code to macrolib-code-line
   940        move "d120-add-macro-to-library (3)" to w600-location
   941        perform s017-write-macrolib
   942
   943        if w905-define-delimiter-not-found then
   944          move "d120-add-macro-to-library (4)" to w600-location
   945          perform s008-read-workin
   946        end-if
   947
   948      end-perform
   949
   950    .d200-list-macrolib.
   951      *> -------------------------------------------------------------------------
   952      *>  List the contents of Macro Library on Standard Error (if redirected).
   953      *> -------------------------------------------------------------------------
   954
   955      move "d200-list-macrolib (1)" to w600-location
   956      perform s014-open-macrolib
   957
   958      display space upon stderr end-display
   959      display "---------- Start of Macros Library." upon stderr end-display
   960      move "d200-list-macrolib (2)" to w600-location
   961      perform s016-read-next-macrolib
   962
   963      perform
   964        until w900-end-of-macrolib
   965
   966        if macrolib-line-number = zeros then *> 1st line for macro. Output macro name.
   967          display space upon stderr end-display
   968          display "Macro %", trim(macrolib-name) upon stderr end-display
   969        end-if
   970
   971        display "[" macrolib-line-number "] ", trim(macrolib-data, trailing) upon stderr end-display
   972
   973        move "d200-list-macrolib (3)" to w600-location
   974        perform s016-read-next-macrolib
   975
   976      end-perform
   977
   978      display space upon stderr end-display
   979      display "---------- End of Macro Library." upon stderr end-display
   980      display space upon stderr end-display
   981
   982      move "d200-list-macrolib (4)" to w600-location
   983      perform s018-close-macrolib
   984
   985    .e000-expand-macro-calls.
   986      *> -------------------------------------------------------------------------
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:4  Page   18

   987      *>  Replace the Macro Calls with code held in the Macro Library.
   988      *> -------------------------------------------------------------------------
   989
   990      move "e000-expand-macro-calls (1)" to w600-location
   991      perform s014-open-macrolib
   992
   993      perform
   994        until w908-no-more-macro-calls
   995
   996        move zero to w606-call-count
   997        move w502-work-file-one to w501-workin-filename
   998        move "e000-expand-macro-calls (2)" to w600-location
   999        perform s007-open-read-workin
  1000
  1001        move w502-work-file-two to w501-workout-filename
  1002        move "e000-expand-macro-calls (3)" to w600-location
  1003        perform s010-open-workout
  1004
  1005        perform s023-swop-work-file-assignments
  1006
  1007        perform
  1008          until w900-end-of-workin
  1009
  1010          perform e100-find-macro-call
  1011
  1012          if w913-macro-call-found then
  1013            perform e200-convert-call-to-code
  1014
  1015          else *> Write record to workout.
  1016            move workin-record to workout-record
  1017            move "e000-expand-macro-calls (4)" to w600-location
  1018            perform s011-write-workout
  1019          end-if
  1020
  1021          move "e000-expand-macro-calls (5)" to w600-location
  1022          perform s008-read-workin
  1023
  1024        end-perform
  1025
  1026        move "e000-expand-macro-calls (6)" to w600-location
  1027        perform s012-close-workout
  1028
  1029        move "e000-expand-macro-calls (7)" to w600-location
  1030        perform s009-close-workin
  1031
  1032        if w606-call-count = 0 then
  1033          set w908-no-more-macro-calls to true
  1034        end-if
  1035
  1036      end-perform
  1037
  1038      move "e000-expand-macro-calls (7)" to w600-location
  1039      perform s018-close-macrolib
  1040
  1041    .e100-find-macro-call.
  1042      *> -------------------------------------------------------------------------
  1043      *>  Search the current workin record for a macro call.
  1044      *> -------------------------------------------------------------------------
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:4  Page   19

  1045
  1046      *> Search for a comment marker and macro keychar.
  1047      move zero to w607-comment-start
  1048      move instr(workin-record, "*>") to w607-comment-start
  1049      move zero to w606-call-start
  1050      move instr(workin-record, w300-keychar) to w606-call-start
  1051
  1052      if w606-call-start = zero then *> Macro keychar not found.
  1053        set w913-macro-call-not-found to true
  1054
  1055      else if (w607-comment-start > 0) and (w606-call-start > w607-comment-start) then *> Macro keychar found in a comment.
  1056        set w913-macro-call-not-found to true
  1057
  1058      else
  1059        *> Extract the 'word' following the macro keychar.
  1060        move spaces to w606-call-name, w606-call-name-delimiter
  1061        add 1 to w606-call-start giving w606-call-name-start end-add
  1062        unstring workin-record delimited by "(" or ")" or "." or space or '"' or ","
  1063          into
  1064            w606-call-name delimiter in w606-call-name-delimiter
  1065          with pointer w606-call-name-start
  1066        end-unstring
  1067        *> Look in the Macro Library to see if this 'word' is a valid macro name.
  1068        move trim(w606-call-name) to macrolib-name
  1069        move zeros to macrolib-line-number
  1070        move "e100-find-macro-call" to w600-location
  1071        perform s015-read-key-macrolib
  1072        if w906-macrolib-key-found then *> We've found a macro call.
  1073          move macrolib-name to w610-macrolib-name
  1074          add 1 to w606-call-count end-add
  1075          set w913-macro-call-found to true
  1076
  1077        else *> It is not a macro call.
  1078          set w913-macro-call-not-found to true
  1079        end-if
  1080      end-if end-if
  1081
  1082    .e200-convert-call-to-code.
  1083      *> -------------------------------------------------------------------------
  1084      *>  Replace the macro call with its code.
  1085      *> -------------------------------------------------------------------------
  1086
  1087      evaluate w606-call-name-delimiter
  1088
  1089        when "("
  1090          perform e210-macro-with-parameters
  1091
  1092        when " "
  1093          perform e220-macro-without-parameters
  1094
  1095        when "."
  1096          perform e230-macro-as-a-constant
  1097
  1098        when ")"
  1099          perform e230-macro-as-a-constant
  1100
  1101        when ","
  1102          perform e230-macro-as-a-constant
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:4  Page   20

  1103
  1104        when other
  1105          move "e200-convert-call-to-code" to w600-location
  1106          move "Unable to determine the macro call type." to w600-message
  1107          move "N/A" to w600-file-status
  1108          perform z999-abort
  1109
  1110      end-evaluate
  1111
  1112    .e210-macro-with-parameters.
  1113      *> -------------------------------------------------------------------------
  1114      *>  Insert the macro code and replace parameter markers with actual values.
  1115      *> -------------------------------------------------------------------------
  1116
  1117      unstring workin-record delimited by w300-keychar or "("
  1118        into
  1119          w606-not-used *> line # (if present), leading spaces and marker.
  1120          w606-call-name delimiter in w606-call-name-delimiter
  1121          w606-call-parms-list
  1122      end-unstring
  1123
  1124      initialize w606-call-parameters
  1125      unstring w606-call-parms-list delimited by "#," or "#)"
  1126        into
  1127          w606-call-parm(1)
  1128          w606-call-parm(2)
  1129          w606-call-parm(3)
  1130          w606-call-parm(4)
  1131          w606-call-parm(5)
  1132          w606-call-parm(6)
  1133          w606-call-parm(7)
  1134          w606-call-parm(8)
  1135          w606-call-parm(9)
  1136        tallying in w606-call-parms-count
  1137      end-unstring
  1138
  1139      subtract 1 from w606-call-parms-count end-subtract
  1140
  1141      if w907-include-macro-begin-end then
  1142        move spaces to workout-record
  1143        string
  1144          "*> **** Begin Macro ", trim(w606-call-name), "(", trim(w606-call-parms-list) delimited by size
  1145          into workout-record(w606-call-start:)
  1146        end-string
  1147        move "e210-macro-with-parameters (1)" to w600-location
  1148        perform s011-write-workout
  1149      end-if
  1150
  1151      if macrolib-code-line <> space then *> Filter out an initial blank line in the macro definition.
  1152
  1153        perform with test after
  1154          varying w606-call-parm-number from 1 by 1
  1155            until w606-call-parm-number = w301-max-call-parms
  1156
  1157          if instr(macrolib-code-line, w302-id-marker(w606-call-parm-number)) > zero then *> Found parameter.
  1158            move SUBSTITUTE(macrolib-code-line, w302-id-marker(w606-call-parm-number), trim(w606-call-parm(w606-call-parm-number))) to macrolib-code-line
  1159          end-if
  1160
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:4  Page   21

  1161        end-perform
  1162
  1163        move spaces to workout-record
  1164        move macrolib-code-line to workout-record(w606-call-start:)
  1165        move "e210-macro-with-parameters (2)" to w600-location
  1166        perform s011-write-workout
  1167      end-if
  1168
  1169      move "e210-macro-with-parameters (3)" to w600-location
  1170      perform s016-read-next-macrolib
  1171
  1172      if macrolib-name <> w610-macrolib-name then
  1173        set w900-end-of-macrolib to true
  1174      end-if
  1175
  1176      perform
  1177        until w900-end-of-macrolib
  1178
  1179        perform with test after
  1180          varying w606-call-parm-number from 1 by 1
  1181            until w606-call-parm-number = w301-max-call-parms
  1182
  1183          if instr(macrolib-code-line, w302-id-marker(w606-call-parm-number)) > zero then *> Found parameter.
  1184            move SUBSTITUTE(macrolib-code-line, w302-id-marker(w606-call-parm-number), trim(w606-call-parm(w606-call-parm-number))) to macrolib-code-line
  1185          end-if
  1186
  1187        end-perform
  1188
  1189        move spaces to workout-record
  1190        move macrolib-code-line to workout-record(w606-call-start:)
  1191        move "e210-macro-with-parameters (4)" to w600-location
  1192        perform s011-write-workout
  1193        move "e210-macro-with-parameters (5)" to w600-location
  1194        perform s016-read-next-macrolib
  1195
  1196        if macrolib-name <> w610-macrolib-name then
  1197          set w900-end-of-macrolib to true
  1198        end-if
  1199
  1200      end-perform
  1201
  1202      if w907-include-macro-begin-end then
  1203        move spaces to workout-record
  1204        string
  1205          "*> **** End Macro ", trim(w610-macrolib-name) delimited by size
  1206          into workout-record(w606-call-start:)
  1207        end-string
  1208        move "e210-macro-with-parameters (6)" to w600-location
  1209        perform s011-write-workout
  1210      end-if
  1211
  1212    .e220-macro-without-parameters.
  1213      *> -------------------------------------------------------------------------
  1214      *>  Insert the macro code.
  1215      *> -------------------------------------------------------------------------
  1216
  1217      if w907-include-macro-begin-end then
  1218        move spaces to workout-record
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:4  Page   22

  1219        string
  1220          "*> **** Begin Macro ", trim(macrolib-name) delimited by size
  1221          into workout-record(w606-call-start:)
  1222        end-string
  1223        move "e220-macro-without-parameters (1)" to w600-location
  1224        perform s011-write-workout
  1225      end-if
  1226
  1227      if macrolib-code-line <> space then *> Filter out an initial blank line in the macro definition.
  1228        move spaces to workout-record
  1229        move macrolib-code-line to workout-record(w606-call-start:)
  1230        move "e220-macro-without-parameters (2)" to w600-location
  1231        perform s011-write-workout
  1232      end-if
  1233
  1234      move "e220-macro-without-parameters (3)" to w600-location
  1235      perform s016-read-next-macrolib
  1236
  1237      if macrolib-name <> w610-macrolib-name then
  1238        set w900-end-of-macrolib to true
  1239      end-if
  1240
  1241      perform
  1242        until w900-end-of-macrolib
  1243
  1244        move spaces to workout-record
  1245        move macrolib-code-line to workout-record(w606-call-start:)
  1246        move "e220-macro-without-parameters (4)" to w600-location
  1247        perform s011-write-workout
  1248        move "e220-macro-without-parameters (5)" to w600-location
  1249        perform s016-read-next-macrolib
  1250
  1251        if macrolib-name <> w610-macrolib-name then
  1252          set w900-end-of-macrolib to true
  1253        end-if
  1254
  1255      end-perform
  1256
  1257      if w907-include-macro-begin-end then
  1258        move spaces to workout-record
  1259        string
  1260          "*> **** End Macro ", trim(w610-macrolib-name) delimited by size
  1261          into workout-record(w606-call-start:)
  1262        end-string
  1263        move "e220-macro-without-parameters (6)" to w600-location
  1264        perform s011-write-workout
  1265      end-if
  1266
  1267    .e230-macro-as-a-constant.
  1268      *> -------------------------------------------------------------------------
  1269      *>  Replace the macro name with its value and write record to workout.
  1270      *> -------------------------------------------------------------------------
  1271
  1272      move zero to w606-call-start
  1273      move instr(workin-record, w300-keychar) to w606-call-start
  1274      move length(trim(w606-call-name)) to w606-call-end
  1275      add w606-call-start to w606-call-end end-add
  1276
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:4  Page   23

  1277      move spaces to workout-record
  1278      string
  1279        workin-record(1:w606-call-start - 1), trim(macrolib-code-line), workin-record(w606-call-end + 1:)
  1280        delimited by size
  1281        into workout-record
  1282      end-string
  1283
  1284      move "e230-macro-as-a-constant" to w600-location
  1285      perform s011-write-workout
  1286
  1287    .z000-finalise.
  1288      *> -------------------------------------------------------------------------
  1289      *>  End of Program Processing.
  1290      *> -------------------------------------------------------------------------
  1291
  1292      perform z100-copy-workin-to-stdout
  1293      perform s022-delete-workfiles
  1294
  1295      move zero to return-code
  1296      goback
  1297
  1298    .z100-copy-workin-to-stdout.
  1299      *> -------------------------------------------------------------------------
  1300      *>  Copy Work Input to Standard Output.
  1301      *> -------------------------------------------------------------------------
  1302
  1303      move w502-work-file-one to w501-workin-filename
  1304      move "z100-copy-workin-to-stdout (1)" to w600-location
  1305      perform s007-open-read-workin
  1306      move "z100-copy-workin-to-stdout (2)" to w600-location
  1307      perform s004-open-stdout
  1308
  1309      perform
  1310        until w900-end-of-workin
  1311
  1312        move workin-record to stdout-record
  1313        move "z100-copy-workin-to-stdout (3)" to w600-location
  1314        perform s005-write-stdout
  1315        move "z100-copy-workin-to-stdout (4)" to w600-location
  1316        perform s008-read-workin
  1317
  1318      end-perform
  1319
  1320      move "z100-copy-workin-to-stdout (5)" to w600-location
  1321      perform s006-close-stdout
  1322      move "z100-copy-workin-to-stdout (6)" to w600-location
  1323      perform s009-close-workin
  1324
  1325    .z999-abort.
  1326      *> -------------------------------------------------------------------------
  1327      *>  Abnormal Termination Processing.
  1328      *> -------------------------------------------------------------------------
  1329
  1330      perform s022-delete-workfiles
  1331      display space upon stderr end-display
  1332      display w100-program-id-line-01 upon stderr end-display
  1333      display w100-program-id-line-02 upon stderr end-display
  1334      display w100-program-id-line-03 upon stderr end-display
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:4  Page   24

  1335      display w100-program-id-line-04 upon stderr end-display
  1336      display space upon stderr end-display
  1337
  1338      if w909-internal-debug-on then
  1339        display "  Detected in ", trim(w600-location) " at ", trim(w600-sub-location) upon stderr end-display
  1340      end-if
  1341
  1342      display "  Error: ", trim(w600-message) upon stderr end-display
  1343
  1344      if trim(w600-message-2) <> spaces then
  1345        display "       : ", trim(w600-message-2) upon stderr end-display
  1346      end-if
  1347
  1348      if trim(w600-file-status) <> "N/A" then
  1349        display "  File Status: ", trim(w600-file-status) upon stderr end-display
  1350      end-if
  1351
  1352      display space upon stderr end-display
  1353      move 1 to return-code
  1354      goback
  1355
  1356  *> *****************************************************************************
  1357  *> Start of Internal Subroutines.
  1358
  1359    .s000-set-file-error-status.
  1360      *> -------------------------------------------------------------------------
  1361      *>  Set the file error status for display by z999-abort.
  1362      *> -------------------------------------------------------------------------
  1363
  1364      evaluate true
  1365
  1366        when w500-success
  1367          move "00: Successful completion." to w600-file-status
  1368            *> Nothing extra to say.
  1369
  1370        when w500-success-duplicate
  1371          move "02: Next record has same key (Read) or Duplicate key value (Write)." to w600-file-status
  1372          *> The READ statement was successfully executed, but a duplicate key was
  1373          *> detected. That is, the key value for the current key of reference was
  1374          *> equal to the value of the key in the next record.
  1375
  1376        when w500-success-incomplete
  1377          move "04: Record length does not match fixed file attributes." to w600-file-status
  1378          *> An attempt was made to read a record that is larger than the largest,
  1379          *> or smaller than the smallest record allowed by the RECORD IS VARYING
  1380          *> clause of the associated file-name.
  1381
  1382        when w500-success-optional
  1383          move "05: Optional file not present at the time of Open." to w600-file-status
  1384          *> An OPEN statement is successfully executed, but the referenced
  1385          *> optional file is not present at the time the OPEN statement is
  1386          *> executed. If the open mode is I-O or EXTEND, the file has been
  1387          *> created.
  1388
  1389        when w500-success-no-unit
  1390          move "07: REEL/UNIT specified but file is non-reel/unit medium." to w600-file-status
  1391          *> For a CLOSE statement with the NO REWIND, REEL/UNIT, or FOR REMOVAL
  1392          *> phrase or for an OPEN statement with the NO REWIND phrase, the
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:4  Page   25

  1393          *> referenced file was on a non-reel/unit medium.
  1394
  1395        when w500-directory-full-missing
  1396          move "09: No room in directory or directory does not exist." to w600-file-status
  1397          *> Nothing extra to say.
  1398
  1399        when w500-end-of-file
  1400          move "10: No next logical record exists (end of file)." to w600-file-status
  1401          *> A sequential READ statement was attempted and no next logical record
  1402          *> existed in the file because the end of the file had been reached.
  1403
  1404        when w500-out-of-key-range
  1405          move "14: Number of significant digits in relative record number > key data item size." to w600-file-status
  1406          *> A sequential READ statement was attempted for a relative file and the
  1407          *> number of significant digits in the relative record number was larger
  1408          *> than the size of the relative key data item described for the file.
  1409
  1410        when w500-key-invalid
  1411          move "21: Key sequence error." to w600-file-status
  1412          *> A sequence error exists for a sequentially accessed indexed file. The
  1413          *> prime record key value has been changed by the program between the
  1414          *> successful execution of a READ statement and the execution of the
  1415          *> next REWRITE statement for that file, or the ascending requirements
  1416          *> for successive record key values were violated.
  1417          *>
  1418          *> Alternatively, the program has changed the record key value between a
  1419          *> successful READ and subsequent REWRITE or DELETE operation on a
  1420          *> randomly or dynamically-accessed file with duplicate keys.
  1421
  1422        when w500-key-exists
  1423          move "22: Duplicate key and duplicates not allowed." to w600-file-status
  1424          *> An attempt was made to write a record that would create a duplicate
  1425          *> key in a relative file; or an attempt was made to write or rewrite a
  1426          *> record that would create a duplicate prime record key in an indexed
  1427          *> file.
  1428
  1429        when w500-key-not-exists
  1430          move "23: Record not found." to w600-file-status
  1431          *> An attempt was made to randomly access a record that does not exist
  1432          *> in the file.
  1433
  1434        when w500-permanent-error
  1435          move "30: No further information." to w600-file-status
  1436          *> Nothing extra to say.
  1437
  1438        when w500-inconsistent-filename
  1439          move "31: Dynamic file attribute conflict." to w600-file-status
  1440          *> Nothing extra to say.
  1441
  1442        when w500-boundary-violation
  1443          move "34: Failed because of a boundry violation." to w600-file-status
  1444          *> The I/O statement failed because of a boundary violation. This
  1445          *> condition indicates that an attempt has been made to write beyond
  1446          *> the externally defined boundaries of a sequential file.
  1447
  1448        when w500-not-exists
  1449          move "35: Missing file." to w600-file-status
  1450          *> An OPEN operation with the I-O, INPUT, or EXTEND phrases has been
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:4  Page   26

  1451          *> tried on a non-OPTIONAL file that is not present.
  1452
  1453        when w500-permission-denied
  1454          move "37: Invalid device/unwritable file." to w600-file-status
  1455          *> An OPEN operation has been tried on a file which does not support
  1456          *> the open mode specified in the OPEN statement. Possible violations
  1457          *> are:
  1458          *>   1. The EXTEND or OUTPUT phrase was specified but the file would not
  1459          *>      support write operations.
  1460          *>   2. The I-O phrase was specified but the file would not support the
  1461          *>      input and output operations permitted.
  1462          *>   3. The INPUT phrase was specified but the file would not support
  1463          *>      read operations.
  1464
  1465        when w500-closed-with-lock
  1466          move "38: Open on file closed with LOCK." to w600-file-status
  1467          *> An OPEN operation has been tried on a file previously closed with a
  1468          *> lock.
  1469
  1470        when w500-conflict-attribute
  1471          move "39: Fixed file attribute conflict." to w600-file-status
  1472          *> A conflict has been detected between the fixed file attributes and
  1473          *> the attributes specified for the file in the program. This is usually
  1474          *> caused by a conflict with record-length, key-length, key-position or
  1475          *> file organization. Other possible causes are:
  1476          *>   1. Alternate indexes are incorrectly defined.
  1477          *>   2. The Recording Mode is Variable or Fixed or not defined the same
  1478          *>      as when the file was created..
  1479
  1480        when w500-already-open
  1481          move "41: File is already open." to w600-file-status
  1482          *> An OPEN operation has been tried on file already opened.
  1483
  1484        when w500-not-open
  1485          move "42: File is already closed." to w600-file-status
  1486          *> A CLOSE operation has been tried on file already closed.
  1487
  1488        when w500-read-not-done
  1489          move "43: No read before rewrite/delete." to w600-file-status
  1490          *> For a sequential file in the sequential access mode, the last input-
  1491          *> output statement executed for the associated file prior to the
  1492          *> execution of a REWRITE statement was not a successfully executed READ
  1493          *> statement. For relative and indexed files in the sequential access
  1494          *> mode, the last input-output statement executed for the file prior to
  1495          *> the execution of a DELETE or REWRITE statement was not a successfully
  1496          *> executed READ statement.
  1497
  1498        when w500-record-overflow
  1499          move "44: Boundry violation." to w600-file-status
  1500          *> A boundary violation exists because an attempt was made to rewrite a
  1501          *> record to a file and the record was not the same size as the record
  1502          *> being replaced. An attempt was made to write or rewrite a record that
  1503          *> is larger than the largest, or smaller than the smallest record
  1504          *> allowed by the RECORD IS VARYING clause of the associated file-name.
  1505
  1506        when w500-read-error
  1507          move "46: Unsuccessful read/start." to w600-file-status
  1508          *> A sequential READ, READ NEXT or READ PRIOR statement was attempted on
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:4  Page   27

  1509          *> a file open in the input or I-O mode and no valid next record had
  1510          *> been established because the preceding START statement was
  1511          *> unsuccessful, or the preceding READ statement was unsuccessful or
  1512          *> caused an at end condition.
  1513
  1514        when w500-input-denied
  1515          move "47: File not open for input." to w600-file-status
  1516          *> The execution of a READ or START statement was attempted on a file
  1517          *> not open in the input or I-O mode.
  1518
  1519        when w500-output-denied
  1520          move "48: File not open for output." to w600-file-status
  1521          *> The execution of a WRITE statement was attempted on a sequential file
  1522          *> not open in the output, or extend mode. The execution of a WRITE
  1523          *> statement was attempted on an indexed or relative file not open in
  1524          *> the I-O, output, or extend mode.
  1525
  1526        when w500-i-o-denied
  1527          move "49: File not open for I-O." to w600-file-status
  1528          *> The execution of a DELETE or REWRITE statement was attempted on a
  1529          *> file not open in the I-O mode.
  1530
  1531        when w500-record-locked
  1532          move "51: Record already locked." to w600-file-status
  1533          *> Nothing extra to say.
  1534
  1535        when w500-end-of-page
  1536          move "52: End of page." to w600-file-status
  1537          *> Nothing extra to say.
  1538
  1539        when w500-i-o-linage
  1540          move "57: I-O Linage." to w600-file-status
  1541          *> Nothing extra to say.
  1542
  1543        when w500-file-sharing
  1544          move "61: File sharing." to w600-file-status
  1545          *> Nothing extra to say.
  1546
  1547        when w500-not-available
  1548          move "91: Notavailable." to w600-file-status
  1549          *> Nothing extra to say.
  1550
  1551        when other
  1552          move spaces to w600-file-status
  1553          string
  1554            "Unknown error code (", w500-file-status, ") detected." delimited by size
  1555            into w600-file-status
  1556          end-string
  1557
  1558      end-evaluate
  1559
  1560    .s001-open-read-stdin.
  1561      *> -------------------------------------------------------------------------
  1562      *>  Open Standard Input and read the first record.
  1563      *> -------------------------------------------------------------------------
  1564
  1565      open input stdin
  1566
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:4  Page   28

  1567      if not w500-success then
  1568        move "s001-open-read-stdin" to w600-sub-location
  1569        move "Unable to open Standard Input." to w600-message
  1570        perform s000-set-file-error-status
  1571        perform z999-abort
  1572      end-if
  1573
  1574      perform s002-read-stdin
  1575
  1576    .s002-read-stdin.
  1577      *> -------------------------------------------------------------------------
  1578      *>  Read the next record from Standard Input.
  1579      *> -------------------------------------------------------------------------
  1580
  1581      read stdin end-read
  1582
  1583      if w500-success then
  1584        set w900-more-stdin to true
  1585
  1586      else if w500-end-of-file then
  1587        set w900-end-of-stdin to true
  1588
  1589      else
  1590        move "s002-read-stdin" to w600-sub-location
  1591        move "Unable to read a record from Standard Input." to w600-message
  1592        perform s000-set-file-error-status
  1593        perform z999-abort
  1594      end-if end-if
  1595
  1596    .s003-close-stdin.
  1597      *> -------------------------------------------------------------------------
  1598      *>  Close Standard Input.
  1599      *> -------------------------------------------------------------------------
  1600
  1601      close stdin
  1602
  1603      if not w500-success then
  1604        move "s003-close-stdin" to w600-sub-location
  1605        move "Unable to close Standard Input." to w600-message
  1606        perform s000-set-file-error-status
  1607        perform z999-abort
  1608      end-if
  1609
  1610    .s004-open-stdout.
  1611      *> -------------------------------------------------------------------------
  1612      *>  Open Standard Output.
  1613      *> -------------------------------------------------------------------------
  1614
  1615      open output stdout
  1616
  1617      if not w500-success then
  1618        move "s004-open-stdout" to w600-sub-location
  1619        move "Unable to open Standard Output." to w600-message
  1620        perform s000-set-file-error-status
  1621        perform z999-abort
  1622      end-if
  1623
  1624    .s005-write-stdout.
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:4  Page   29

  1625      *> -------------------------------------------------------------------------
  1626      *>  Write a record to Standard Output.
  1627      *> -------------------------------------------------------------------------
  1628
  1629      write stdout-record end-write
  1630
  1631      if not w500-success then
  1632        move "s005-write-stdout" to w600-sub-location
  1633        move "Unable to write a record to Standard Output." to w600-message
  1634        perform s000-set-file-error-status
  1635        perform z999-abort
  1636      end-if
  1637
  1638    .s006-close-stdout.
  1639      *> -------------------------------------------------------------------------
  1640      *>  Close Standard Output.
  1641      *> -------------------------------------------------------------------------
  1642
  1643      close stdout
  1644
  1645      if not w500-success then
  1646        move "s006-close-stdout" to w600-sub-location
  1647        move "Unable to close Standard Output." to w600-message
  1648        perform s000-set-file-error-status
  1649        perform z999-abort
  1650      end-if
  1651
  1652    .s007-open-read-workin.
  1653      *> -------------------------------------------------------------------------
  1654      *>  Open Work Input and read the first record.
  1655      *> -------------------------------------------------------------------------
  1656
  1657      open input workin
  1658
  1659      if not w500-success then
  1660        move "s007-open-read-workin" to w600-sub-location
  1661        move "Unable to open Work Input." to w600-message
  1662        move trim(w501-workin-filename) to w600-message-2
  1663        perform s000-set-file-error-status
  1664        perform z999-abort
  1665      end-if
  1666
  1667      perform s008-read-workin
  1668
  1669    .s008-read-workin.
  1670      *> -------------------------------------------------------------------------
  1671      *>  Read the next record from Work Input.
  1672      *> -------------------------------------------------------------------------
  1673
  1674      read workin end-read
  1675
  1676      if w500-success then
  1677        set w900-more-workin to true
  1678
  1679      else if w500-end-of-file then
  1680        set w900-end-of-workin to true
  1681
  1682      else
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:4  Page   30

  1683        move "s005-read-workin" to w600-sub-location
  1684        move "Unable to read a record from Work Input." to w600-message
  1685        move trim(w501-workin-filename) to w600-message-2
  1686        perform s000-set-file-error-status
  1687        perform z999-abort
  1688      end-if end-if
  1689
  1690    .s009-close-workin.
  1691      *> -------------------------------------------------------------------------
  1692      *>  Close Work Input.
  1693      *> -------------------------------------------------------------------------
  1694
  1695      close workin
  1696
  1697      if not w500-success then
  1698        move "s009-close-workin" to w600-sub-location
  1699        move "Unable to close Work Input." to w600-message
  1700        move trim(w501-workin-filename) to w600-message-2
  1701        perform s000-set-file-error-status
  1702        perform z999-abort
  1703      end-if
  1704
  1705    .s010-open-workout.
  1706      *> -------------------------------------------------------------------------
  1707      *>  Open Work Output.
  1708      *> -------------------------------------------------------------------------
  1709
  1710      open output workout
  1711
  1712      if not w500-success then
  1713        move "s010-open-workout" to w600-sub-location
  1714        move "Unable to open Work Output." to w600-message
  1715        move trim(w501-workout-filename) to w600-message-2
  1716        perform s000-set-file-error-status
  1717        perform z999-abort
  1718      end-if
  1719
  1720    .s011-write-workout.
  1721      *> -------------------------------------------------------------------------
  1722      *>  Write a record to Work Output.
  1723      *> -------------------------------------------------------------------------
  1724
  1725      write workout-record end-write
  1726
  1727      if not w500-success then
  1728        move "s011-write-workout" to w600-sub-location
  1729        move "Unable to write a record to Work Output." to w600-message
  1730        move trim(w501-workout-filename) to w600-message-2
  1731        perform s000-set-file-error-status
  1732        perform z999-abort
  1733      end-if
  1734
  1735    .s012-close-workout.
  1736      *> -------------------------------------------------------------------------
  1737      *>  Close Work Output.
  1738      *> -------------------------------------------------------------------------
  1739
  1740      close workout
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:4  Page   31

  1741
  1742      if not w500-success then
  1743        move "s012-close-workout" to w600-sub-location
  1744        move "Unable to close Work Output." to w600-message
  1745        move trim(w501-workout-filename) to w600-message-2
  1746        perform s000-set-file-error-status
  1747        perform z999-abort
  1748      end-if
  1749
  1750    .s013-create-macrolib.
  1751      *> -------------------------------------------------------------------------
  1752      *>  Create Macro Library.
  1753      *> -------------------------------------------------------------------------
  1754
  1755      open output macrolib
  1756
  1757      if not w500-success then
  1758        move "s013-create-macrolib" to w600-sub-location
  1759        move "Unable to create Macro Library." to w600-message
  1760        move trim(w501-macrolib-filename) to w600-message-2
  1761        perform z999-abort
  1762      end-if
  1763
  1764      *> Macro Library must be closed before it can be opened for use.
  1765      perform s018-close-macrolib
  1766
  1767    .s014-open-macrolib.
  1768      *> -------------------------------------------------------------------------
  1769      *>  Open Macro Library.
  1770      *> -------------------------------------------------------------------------
  1771
  1772      open i-o macrolib
  1773
  1774      if not w500-success then
  1775        move "s014-open-macrolib" to w600-sub-location
  1776        move "Unable to open Macro Library." to w600-message
  1777        move trim(w501-macrolib-filename) to w600-message-2
  1778        perform z999-abort
  1779      end-if
  1780
  1781    .s015-read-key-macrolib.
  1782      *> -------------------------------------------------------------------------
  1783      *>  Read a record with the specified key from Macro Library.
  1784      *> -------------------------------------------------------------------------
  1785
  1786      read macrolib end-read
  1787
  1788      if w500-success then
  1789        set w906-macrolib-key-found to true
  1790
  1791      else if w500-key-not-exists then
  1792        set w906-macrolib-key-not-found to true
  1793
  1794      else
  1795        move "s015-read-key-macrolib" to w600-sub-location
  1796        move "Unable to read a record from Macro Library." to w600-message
  1797        move trim(w501-macrolib-filename) to w600-message-2
  1798        perform s000-set-file-error-status
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:4  Page   32

  1799        perform z999-abort
  1800      end-if end-if
  1801
  1802    .s016-read-next-macrolib.
  1803      *> -------------------------------------------------------------------------
  1804      *>  Read the next record from Macro Library.
  1805      *> -------------------------------------------------------------------------
  1806
  1807      read macrolib next end-read
  1808
  1809      if w500-success then
  1810        set w900-more-macrolib to true
  1811
  1812      else if w500-end-of-file then
  1813        set w900-end-of-macrolib to true
  1814
  1815      else
  1816        move "s016-read-next-macrolib" to w600-sub-location
  1817        move "Unable to read a record from Macro Library." to w600-message
  1818        move trim(w501-macrolib-filename) to w600-message-2
  1819        perform s000-set-file-error-status
  1820        perform z999-abort
  1821      end-if end-if
  1822
  1823    .s017-write-macrolib.
  1824      *> -------------------------------------------------------------------------
  1825      *>  Write a record to Macro Library.
  1826      *> -------------------------------------------------------------------------
  1827
  1828      write macrolib-record end-write
  1829
  1830      if not w500-success then
  1831        move "s017-write-macrolib" to w600-sub-location
  1832        move "Unable to write a record to Macro Library." to w600-message
  1833        move trim(w501-macrolib-filename) to w600-message-2
  1834        perform s000-set-file-error-status
  1835        perform z999-abort
  1836      end-if
  1837
  1838    .s018-close-macrolib.
  1839      *> -------------------------------------------------------------------------
  1840      *>  Close Macro Library.
  1841      *> -------------------------------------------------------------------------
  1842
  1843      close macrolib
  1844
  1845      if not w500-success then
  1846        move "s018-close-macrolib" to w600-sub-location
  1847        move "Unable to close MacroLibrary." to w600-message
  1848        move trim(w501-macrolib-filename) to w600-message-2
  1849        perform s000-set-file-error-status
  1850        perform z999-abort
  1851      end-if
  1852
  1853    .s019-open-read-incfile.
  1854      *> -------------------------------------------------------------------------
  1855      *>  Open $INCLUDE file and read the first record.
  1856      *> -------------------------------------------------------------------------
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:5  Page   33

  1857
  1858      open input incfile
  1859
  1860      if not w500-success then
  1861        move "s019-open-read-incfile" to w600-sub-location
  1862        move "Unable to open $INCLUDE file." to w600-message
  1863        move trim(w501-incfile-filename) to w600-message-2
  1864        perform s000-set-file-error-status
  1865        perform z999-abort
  1866      end-if
  1867
  1868      perform s020-read-incfile
  1869
  1870    .s020-read-incfile.
  1871      *> -------------------------------------------------------------------------
  1872      *>  Read the next record from $INCLUDE file.
  1873      *> -------------------------------------------------------------------------
  1874
  1875      read incfile end-read
  1876
  1877      if w500-success then
  1878        set w900-more-incfile to true
  1879
  1880      else if w500-end-of-file then
  1881        set w900-end-of-incfile to true
  1882
  1883      else
  1884        move "s020-read-incfile" to w600-sub-location
  1885        move "Unable to read a record from $INCLUDE file." to w600-message
  1886        move trim(w501-incfile-filename) to w600-message-2
  1887        perform s000-set-file-error-status
  1888        perform z999-abort
  1889      end-if end-if
  1890
  1891    .s021-close-incfile.
  1892      *> -------------------------------------------------------------------------
  1893      *>  Close $INCLUDE file.
  1894      *> -------------------------------------------------------------------------
  1895
  1896      close incfile
  1897
  1898      if not w500-success then
  1899        move "s021-close-incfile" to w600-sub-location
  1900        move "Unable to close $INCLUDE file." to w600-message
  1901        move trim(w501-incfile-filename) to w600-message-2
  1902        perform s000-set-file-error-status
  1903        perform z999-abort
  1904      end-if
  1905
  1906    .s022-delete-workfiles.
  1907      *> -------------------------------------------------------------------------
  1908      *>  Delete the work workfiles.
  1909      *> -------------------------------------------------------------------------
  1910
  1911      call "C$DELETE" using w501-workin-filename, 0 end-call
  1912      call "C$DELETE" using w501-workout-filename, 0 end-call
  1913      call "C$DELETE" using w501-macrolib-filename, 0 end-call
  1914
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:5  Page   34

  1915    .s023-swop-work-file-assignments.
  1916      *> -------------------------------------------------------------------------
  1917      *>  Swop the Work Input and Work Output file assignments.
  1918      *> -------------------------------------------------------------------------
  1919
  1920      move w502-work-file-one to w502-work-file-swap
  1921      move w502-work-file-two to w502-work-file-one
  1922      move w502-work-file-swap to w502-work-file-two
  1923      move spaces to w502-work-file-swap
  1924
  1925    .s024-preprocessor-command.
  1926      *> -------------------------------------------------------------------------
  1927      *>  Change the default characters used in macro definitions and names.
  1928      *> -------------------------------------------------------------------------
  1929
  1930      move trim(workin-record) to workin-record
  1931
  1932      move spaces to w611-new-preprocessor-parms
  1933      unstring workin-record delimited by space or "=" or ","
  1934        into
  1935          w611-not-used-1
  1936          w611-parameter-1 w611-subparameter-1
  1937          w611-parameter-2 w611-subparameter-2
  1938          w611-parameter-3 w611-subparameter-3
  1939          w611-not-used-2
  1940      end-unstring
  1941
  1942      evaluate true
  1943
  1944        when trim(lower-case(w611-parameter-1)) = "keychar"
  1945          move trim(w611-subparameter-1) to w608-keychar
  1946
  1947        when trim(lower-case(w611-parameter-2)) = "keychar"
  1948          move trim(w611-subparameter-2) to w608-keychar
  1949
  1950        when trim(lower-case(w611-parameter-3)) = "keychar"
  1951          move trim(w611-subparameter-3) to w608-keychar
  1952
  1953        when trim(lower-case(w611-parameter-1)) = "parmchar"
  1954          move trim(w611-subparameter-1) to w608-parmchar
  1955
  1956        when trim(lower-case(w611-parameter-2)) = "parmchar"
  1957          move trim(w611-subparameter-2) to w608-parmchar
  1958
  1959        when trim(lower-case(w611-parameter-3)) = "parmchar"
  1960          move trim(w611-subparameter-3) to w608-parmchar
  1961
  1962        when trim(lower-case(w611-parameter-1)) = "delimiter"
  1963          move trim(w611-subparameter-1) to w608-delimiter
  1964
  1965        when trim(lower-case(w611-parameter-2)) = "delimiter"
  1966          move trim(w611-subparameter-2) to w608-delimiter
  1967
  1968        when trim(lower-case(w611-parameter-3)) = "delimiter"
  1969          move trim(w611-subparameter-3) to w608-delimiter
  1970
  1971      end-evaluate
  1972
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:5  Page   35

  1973  >>D display "-- debug:   keychar = [" w608-keychar "] parmchar = [" w608-parmchar "] delimiter = [" w608-delimiter "]" upon stderr end-display
  1974
  1975  *> End of Internal Subroutines.
  1976  *> *****************************************************************************
  1977
  1978  .end program cobolmac.
  1979
  1980  *> *****************************************************************************
  1981  *> Start of Functions.
  1982
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:5  Page   36
Symbols of Module: COBOLMAC (COBOLMAC)
--------------------------------------

Data Section (FILE)              Defn    Locations
--------------------------------+---------------------------------------------------------------


INCFILE                         000112F  000147 001858 001875 001896
INCFILE-RECORD                  000149F  000725 000729 000730 000731 000732 000733 000734 000735
                                         000739
MACROLIB                        000106F  000138 001755 001772 001786 001807 001843
MACROLIB-CODE-LINE              000145F  000912 000939 001151 001157 001158 001158 001164 001183
                                         001184 001184 001190 001227 001229 001245 001279
MACROLIB-DATA                   000144F  000971
MACROLIB-KEY                    000109F  000141
MACROLIB-LINE-NUMBER            000143F  000848 000911 000937 000966 000971 001069
MACROLIB-NAME                   000142F  000847 000910 000938 000968 001068 001073 001172 001196
                                         001220 001237 001251
MACROLIB-RECORD                 000140F  001828
STDIN                           000086F  000122 001565 001581 001601
STDIN-RECORD                    000124F  000657 000661 000662 000663 000664 000665 000666 000667
                                         000671
STDOUT                          000091F  000126 001615 001643
STDOUT-RECORD                   000128F  001312 001629
W500-FILE-STATUS                000089F  000094 000099 000104 000110 000115 000247 001554
W501-INCFILE-FILENAME           000112F  000293 000718 001863 001886 001901
W501-MACROLIB-FILENAME          000106F  000292 000616 000619 001760 001777 001797 001818 001833
                                         001848 001913
W501-WORKIN-FILENAME            000096F  000290 000692 000773 000997 001303 001662 001685 001700
                                         001911
W501-WORKOUT-FILENAME           000101F  000291 000650 000696 000777 001001 001715 001730 001745
                                         001912
WORKIN                          000096F  000130 001657 001674 001695
WORKIN-RECORD                   000132F  000707 000709 000710 000752 000792 000793 000794 000795
                                         000796 000797 000798 000801 000804 000805 000837 000879
                                         000927 001016 001048 001050 001062 001117 001273 001279
                                         001279 001312 001930 001933
WORKOUT                         000101F  000134 001710 001740
WORKOUT-RECORD                  000136F  000668 000671 000736 000739 000752 000799 000805 000879
                                         000883 000886 001016 001142 001145 001163 001164 001189
                                         001190 001203 001206 001218 001221 001228 001229 001244
                                         001245 001258 001261 001277 001281 001725
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:5  Page   37
Symbols of Module: COBOLMAC (COBOLMAC)
--------------------------------------

Data Section (WORKING-STORAGE)   Defn    Locations
--------------------------------+---------------------------------------------------------------


05                              000390W
W100-COPYRIGHT                  000163W
W100-PROGRAM-ID-LINE-01         000158W  000536 000581 001332
W100-PROGRAM-ID-LINE-02         000162W  000537 000582 001333
W100-PROGRAM-ID-LINE-03         000164W  000538 000583 001334
W100-PROGRAM-ID-LINE-04         000165W  000539 000584 001335
W100-PROGRAM-IDENTITY           000157W
W100-PROGRAM-V-UU-FF            000160W
W101-PROGRAM-USAGE              000167W
W101-USAGE-INDEX                000168W  000588 000589 000591
W101-USAGE-LINE                 000201W  000589 000591
W101-USAGE-LINES                000200W
W101-USAGE-TEXT                 000169W  000200
W300-DELIMITER                  000219W  000629
W300-KEYCHAR                    000213W  000627 001050 001117 001273
W300-PARMCHAR                   000216W  000628
W300-PREPROCESSOR-DEFAULTS      000212W
W301-MAX-CALL-PARMS             000223W  001155 001181
W302-ID-MARKER                  000237W  001157 001158 001183 001184
W302-ID-MARKER-VALUES           000226W  000236
W302-ID-MARKERS                 000225W
W302-ID-MARKERS-REDEF           000236W
W500-ALREADY-OPEN               000271W  001480
W500-BOUNDARY-VIOLATION         000265W  001442
W500-CLOSED-WITH-LOCK           000268W  001465
W500-CONFLICT-ATTRIBUTE         000269W  001470
W500-DIRECTORY-FULL-MISSING     000254W  001395
W500-END-OF-FILE                000256W  001399 001586 001679 001812 001880
W500-END-OF-PAGE                000281W  001535
W500-FILE-SHARING               000284W  001543
W500-FILE-STATUS                000247W  001554
W500-I-O-DENIED                 000278W  001526
W500-I-O-LINAGE                 000282W  001539
W500-INCONSISTENT-FILENAME      000264W  001438
W500-INPUT-DENIED               000276W  001514
W500-KEY-EXISTS                 000260W  001422
W500-KEY-INVALID                000259W  001410
W500-KEY-NOT-EXISTS             000261W  001429 001791
W500-NOT-AVAILABLE              000286W  001547
W500-NOT-EXISTS                 000266W  001448
W500-NOT-OPEN                   000272W  001484
W500-OUT-OF-KEY-RANGE           000257W  001404
W500-OUTPUT-DENIED              000277W  001519
W500-PERMANENT-ERROR            000263W  001434
W500-PERMISSION-DENIED          000267W  001453
W500-READ-ERROR                 000275W  001506
W500-READ-NOT-DONE              000273W  001488
W500-RECORD-LOCKED              000280W  001531
W500-RECORD-OVERFLOW            000274W  001498
W500-SUCCESS                    000249W  001366 001567 001583 001603 001617 001631 001645 001659
                                         001676 001697 001712 001727 001742 001757 001774 001788
                                         001809 001830 001845 001860 001877 001898
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:5  Page   38
Symbols of Module: COBOLMAC (COBOLMAC)
--------------------------------------

Data Section (WORKING-STORAGE)   Defn    Locations
--------------------------------+---------------------------------------------------------------


W500-SUCCESS-DUPLICATE          000250W  001370
W500-SUCCESS-INCOMPLETE         000251W  001376
W500-SUCCESS-NO-UNIT            000253W  001389
W500-SUCCESS-OPTIONAL           000252W  001382
W501-INCFILE-FILENAME           000293W  000718 001863 001886 001901
W501-MACROLIB-FILENAME          000292W  000616 000619 001760 001777 001797 001818 001833 001848
                                         001913
W501-WORKIN-FILENAME            000290W  000692 000773 000997 001303 001662 001685 001700 001911
W501-WORKOUT-FILENAME           000291W  000650 000696 000777 001001 001715 001730 001745 001912
W502-WORK-FILE-ONE              000296W  000604 000607 000650 000692 000773 000997 001303 001920
                                         001921
W502-WORK-FILE-SWAP             000298W  001920 001922 001923
W502-WORK-FILE-TWO              000297W  000610 000613 000696 000777 001001 001921 001922
W502-WORK-FILES                 000295W
W600-ERROR-HANDLING             000304W
W600-FILE-STATUS                000309W  000479 000564 000645 000870 001107 001348 001349 001367
                                         001371 001377 001383 001390 001396 001400 001405 001411
                                         001423 001430 001435 001439 001443 001449 001454 001466
                                         001471 001481 001485 001489 001499 001507 001515 001520
                                         001527 001532 001536 001540 001544 001548 001552 001555
W600-LOCATION                   000305W  000477 000558 000636 000641 000651 000672 000676 000681
                                         000684 000693 000697 000719 000740 000744 000753 000757
                                         000762 000765 000774 000778 000783 000786 000806 000814
                                         000819 000822 000825 000849 000873 000880 000889 000913
                                         000920 000940 000944 000955 000960 000973 000982 000990
                                         000998 001002 001017 001021 001026 001029 001038 001070
                                         001105 001147 001165 001169 001191 001193 001208 001223
                                         001230 001234 001246 001248 001263 001284 001304 001306
                                         001313 001315 001320 001322 001339
W600-MESSAGE                    000307W  000478 000485 000559 000562 000644 000864 000867 000877
                                         000885 001106 001342 001569 001591 001605 001619 001633
                                         001647 001661 001684 001699 001714 001729 001744 001759
                                         001776 001796 001817 001832 001847 001862 001885 001900
W600-MESSAGE-2                  000308W  001344 001345 001662 001685 001700 001715 001730 001745
                                         001760 001777 001797 001818 001833 001848 001863 001886
                                         001901
W600-SUB-LOCATION               000306W  001339 001568 001590 001604 001618 001632 001646 001660
                                         001683 001698 001713 001728 001743 001758 001775 001795
                                         001816 001831 001846 001861 001884 001899
W601-ARGV-OPTION                000311W  000522 000523 000525 000561
W601-DEBUG                      000316W  000551
W601-HARD-WARNINGS              000314W  000545
W601-HELP                       000312W  000529
W601-LIST-MACROLIB              000317W  000554
W601-VERBOSE                    000315W  000548
W601-VERSION                    000313W  000534
W602-OS-IS-OTHER                000321W
W602-OS-IS-WINDOWS              000320W
W602-OS-TYPE                    000319W  000507
W603-RANDOM-NUMBER              000323W  000600 000606 000612 000618
W605-DEFINE-CODE                000329W  000842 000905 000907 000912 000929 000939
W605-DEFINE-DELIMITER           000331W  000907 000916 000929 000932
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:5  Page   39
Symbols of Module: COBOLMAC (COBOLMAC)
--------------------------------------

Data Section (WORKING-STORAGE)   Defn    Locations
--------------------------------+---------------------------------------------------------------


W605-DEFINE-LINE-NUMBER         000330W  000904 000911 000936 000937
W605-DEFINE-NAME                000328W  000841 000845 000847 000866 000899 000910 000938
W605-MACRO-DEFINE-WORKAREA      000327W
W605-NOT-USED                   000332W  000840
W606-CALL-COUNT                 000346W  000996 001032 001074
W606-CALL-END                   000336W  001274 001275 001279
W606-CALL-NAME                  000337W  001060 001064 001068 001120 001144 001274
W606-CALL-NAME-DELIMITER        000339W  001060 001064 001087 001120
W606-CALL-NAME-START            000338W  001061 001065
W606-CALL-PARAMETER             000344W
W606-CALL-PARAMETERS            000341W  001124
W606-CALL-PARM                  000345W  001127 001128 001129 001130 001131 001132 001133 001134
                                         001135 001158 001184
W606-CALL-PARM-NUMBER           000343W  001154 001155 001157 001158 001158 001180 001181 001183
                                         001184 001184
W606-CALL-PARMS-COUNT           000342W  001136 001139
W606-CALL-PARMS-LIST            000340W  001121 001125 001144
W606-CALL-START                 000335W  001049 001050 001052 001055 001061 001145 001164 001190
                                         001206 001221 001229 001245 001261 001272 001273 001275
                                         001279
W606-MACRO-CALL-WORKAREA        000334W
W606-NOT-USED                   000351W  001119
W606-POST-CALL                  000349W
W606-POST-CALL-DELIMITER        000350W
W606-PRE-CALL                   000347W
W606-PRE-CALL-DELIMITER         000348W
W607-COMMENT-START              000353W  001047 001048 001055 001055
W608-DELIMITER                  000358W  000629 000905 000916 000927 000932 001963 001966 001969
                                         001973
W608-KEYCHAR                    000356W  000627 000838 001945 001948 001951 001973
W608-PARMCHAR                   000357W  000628 001954 001957 001960 001973
W608-PREPROCESSOR               000355W
W609-INCLUDE-FILE               000362W  000713 000716 000718
W609-INCLUDE-FILE-UNSTRING      000360W
W609-NOT-USED                   000361W  000712
W610-MACROLIB-NAME              000364W  001073 001172 001196 001205 001237 001251 001260
W611-NEW-PREPROCESSOR-PARMS     000366W  001932
W611-NOT-USED-1                 000367W  001935
W611-NOT-USED-2                 000374W  001939
W611-PARAMETER-1                000368W  001936 001944 001953 001962
W611-PARAMETER-2                000370W  001937 001947 001956 001965
W611-PARAMETER-3                000372W  001938 001950 001959 001968
W611-SUBPARAMETER-1             000369W  001936 001945 001954 001963
W611-SUBPARAMETER-2             000371W  001937 001948 001957 001966
W611-SUBPARAMETER-3             000373W  001938 001951 001960 001969
W900-END-OF-INCFILE             000404W  000723 001881
W900-END-OF-MACROLIB            000400W  000964 001173 001177 001197 001238 001242 001252 001813
W900-END-OF-STDIN               000392W  000639 000655 001587
W900-END-OF-WORKIN              000396W  000705 000790 001008 001310 001680
W900-MORE-INCFILE               000403W  001878
W900-MORE-MACROLIB              000399W  001810
W900-MORE-STDIN                 000391W  001584
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:5  Page   40
Symbols of Module: COBOLMAC (COBOLMAC)
--------------------------------------

Data Section (WORKING-STORAGE)   Defn    Locations
--------------------------------+---------------------------------------------------------------


W900-MORE-WORKIN                000395W  001677
W901-OS-IS-LINUX                000408W  000509
W901-OS-IS-UNKNOWN              000407W
W901-OS-IS-WINDOWS              000409W  000511
W902-LAST-COMMAND               000413W  000520 000570
W902-MORE-COMMANDS              000412W
W904-HARD-WARNINGS              000419W  000481 000546 000872
W904-SOFT-WARNINGS              000418W
W905-DEFINE-DELIMITER-FOUND     000422W  000917 000925 000933
W905-DEFINE-DELIMITER-NOT-FOUND 000423W  000902 000943
W906-MACROLIB-KEY-FOUND         000426W  000852 001072 001789
W906-MACROLIB-KEY-NOT-FOUND     000427W  001792
W907-EXCLUDE-MACRO-BEGIN-END    000430W
W907-INCLUDE-MACRO-BEGIN-END    000431W  000549 001141 001202 001217 001257
W908-MORE-MACRO-CALLS           000434W  000473
W908-NO-MORE-MACRO-CALLS        000435W  000994 001033
W909-INTERNAL-DEBUG-OFF         000438W
W909-INTERNAL-DEBUG-ON          000439W  000552 001338
W910-HIDE-MACROLIB              000442W
W910-LIST-MACROLIB              000443W  000555 000828
W911-DEFINED-MACROS             000447W  000472 000828 000901
W911-NO-DEFINED-MACROS          000446W
W912-MORE-INCLUDE-FILES         000451W  000658 000726
W912-NO-INCLUDE-FILES           000450W  000468 000702
W913-MACRO-CALL-FOUND           000455W  001012 001075
W913-MACRO-CALL-NOT-FOUND       000454W  001053 001056 001078
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:5  Page   41
Variable Tested [S]            Symbol (88-Conditions)
--------------------------------------------------------------


05                              W900-MORE-STDIN
05                              W900-END-OF-STDIN
FILLER                          W900-MORE-WORKIN
FILLER                          W900-END-OF-WORKIN
FILLER                          W900-MORE-MACROLIB
FILLER                          W900-END-OF-MACROLIB
FILLER                          W900-MORE-INCFILE
FILLER                          W900-END-OF-INCFILE
FILLER                          W901-OS-IS-WINDOWS
FILLER                          W905-DEFINE-DELIMITER-FOUND
FILLER                          W905-DEFINE-DELIMITER-NOT-FOUND
FILLER                          W906-MACROLIB-KEY-FOUND
FILLER                          W906-MACROLIB-KEY-NOT-FOUND
FILLER                          W908-MORE-MACRO-CALLS
FILLER                          W908-NO-MORE-MACRO-CALLS
W500-FILE-STATUS                W500-SUCCESS
W500-FILE-STATUS                W500-SUCCESS-DUPLICATE
W500-FILE-STATUS                W500-SUCCESS-INCOMPLETE
W500-FILE-STATUS                W500-SUCCESS-OPTIONAL
W500-FILE-STATUS                W500-SUCCESS-NO-UNIT
W500-FILE-STATUS                W500-DIRECTORY-FULL-MISSING
W500-FILE-STATUS                W500-END-OF-FILE
W500-FILE-STATUS                W500-OUT-OF-KEY-RANGE
W500-FILE-STATUS                W500-KEY-INVALID
W500-FILE-STATUS                W500-KEY-EXISTS
W500-FILE-STATUS                W500-KEY-NOT-EXISTS
W500-FILE-STATUS                W500-PERMANENT-ERROR
W500-FILE-STATUS                W500-INCONSISTENT-FILENAME
W500-FILE-STATUS                W500-BOUNDARY-VIOLATION
W500-FILE-STATUS                W500-NOT-EXISTS
W500-FILE-STATUS                W500-PERMISSION-DENIED
W500-FILE-STATUS                W500-CLOSED-WITH-LOCK
W500-FILE-STATUS                W500-CONFLICT-ATTRIBUTE
W500-FILE-STATUS                W500-ALREADY-OPEN
W500-FILE-STATUS                W500-NOT-OPEN
W500-FILE-STATUS                W500-READ-NOT-DONE
W500-FILE-STATUS                W500-RECORD-OVERFLOW
W500-FILE-STATUS                W500-READ-ERROR
W500-FILE-STATUS                W500-INPUT-DENIED
W500-FILE-STATUS                W500-OUTPUT-DENIED
W500-FILE-STATUS                W500-I-O-DENIED
W500-FILE-STATUS                W500-RECORD-LOCKED
W500-FILE-STATUS                W500-END-OF-PAGE
W500-FILE-STATUS                W500-I-O-LINAGE
W500-FILE-STATUS                W500-FILE-SHARING
W500-FILE-STATUS                W500-NOT-AVAILABLE
W601-ARGV-OPTION                W601-HELP
W601-ARGV-OPTION                W601-VERSION
W601-ARGV-OPTION                W601-HARD-WARNINGS
W601-ARGV-OPTION                W601-VERBOSE
W601-ARGV-OPTION                W601-DEBUG
W601-ARGV-OPTION                W601-LIST-MACROLIB
W602-OS-TYPE                    W602-OS-IS-WINDOWS
W602-OS-TYPE                    W602-OS-IS-OTHER
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:5  Page   42
Variable Tested                Symbol (88-Conditions) [S]
--------------------------------------------------------------


W500-FILE-STATUS                W500-ALREADY-OPEN
W500-FILE-STATUS                W500-BOUNDARY-VIOLATION
W500-FILE-STATUS                W500-CLOSED-WITH-LOCK
W500-FILE-STATUS                W500-CONFLICT-ATTRIBUTE
W500-FILE-STATUS                W500-DIRECTORY-FULL-MISSING
W500-FILE-STATUS                W500-END-OF-FILE
W500-FILE-STATUS                W500-END-OF-PAGE
W500-FILE-STATUS                W500-FILE-SHARING
W500-FILE-STATUS                W500-I-O-DENIED
W500-FILE-STATUS                W500-I-O-LINAGE
W500-FILE-STATUS                W500-INCONSISTENT-FILENAME
W500-FILE-STATUS                W500-INPUT-DENIED
W500-FILE-STATUS                W500-KEY-EXISTS
W500-FILE-STATUS                W500-KEY-INVALID
W500-FILE-STATUS                W500-KEY-NOT-EXISTS
W500-FILE-STATUS                W500-NOT-AVAILABLE
W500-FILE-STATUS                W500-NOT-EXISTS
W500-FILE-STATUS                W500-NOT-OPEN
W500-FILE-STATUS                W500-OUT-OF-KEY-RANGE
W500-FILE-STATUS                W500-OUTPUT-DENIED
W500-FILE-STATUS                W500-PERMANENT-ERROR
W500-FILE-STATUS                W500-PERMISSION-DENIED
W500-FILE-STATUS                W500-READ-ERROR
W500-FILE-STATUS                W500-READ-NOT-DONE
W500-FILE-STATUS                W500-RECORD-LOCKED
W500-FILE-STATUS                W500-RECORD-OVERFLOW
W500-FILE-STATUS                W500-SUCCESS
W500-FILE-STATUS                W500-SUCCESS-DUPLICATE
W500-FILE-STATUS                W500-SUCCESS-INCOMPLETE
W500-FILE-STATUS                W500-SUCCESS-NO-UNIT
W500-FILE-STATUS                W500-SUCCESS-OPTIONAL
W601-ARGV-OPTION                W601-DEBUG
W601-ARGV-OPTION                W601-HARD-WARNINGS
W601-ARGV-OPTION                W601-HELP
W601-ARGV-OPTION                W601-LIST-MACROLIB
W601-ARGV-OPTION                W601-VERBOSE
W601-ARGV-OPTION                W601-VERSION
W602-OS-TYPE                    W602-OS-IS-OTHER
W602-OS-TYPE                    W602-OS-IS-WINDOWS
FILLER                          W900-END-OF-INCFILE
FILLER                          W900-END-OF-MACROLIB
05                              W900-END-OF-STDIN
FILLER                          W900-END-OF-WORKIN
FILLER                          W900-MORE-INCFILE
FILLER                          W900-MORE-MACROLIB
05                              W900-MORE-STDIN
FILLER                          W900-MORE-WORKIN
FILLER                          W901-OS-IS-WINDOWS
FILLER                          W905-DEFINE-DELIMITER-FOUND
FILLER                          W905-DEFINE-DELIMITER-NOT-FOUND
FILLER                          W906-MACROLIB-KEY-FOUND
FILLER                          W906-MACROLIB-KEY-NOT-FOUND
FILLER                          W908-MORE-MACRO-CALLS
FILLER                          W908-NO-MORE-MACRO-CALLS
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:5  Page   43
Functions                        Defn    Locations
--------------------------------+---------------------------------------------------------------


CURRENT-DATE                    000601I
LOWER-CASE                      001944I  001947 001950 001953 001956 001959 001962 001965 001968
MODULE-FORMATTED-DATE           000540I
SUBSTITUTE                      001158I  001184
TRIM                            000709I  000716 000718 000845 000847 000866 000877 000885 000899
                                         000910 000938 000968 000971 001068 001144 001144 001158
                                         001184 001205 001220 001260 001274 001279 001339 001339
                                         001342 001344 001345 001348 001349 001662 001685 001700
                                         001715 001730 001745 001760 001777 001797 001818 001833
                                         001848 001863 001886 001901 001930 001944 001945 001947
                                         001948 001950 001951 001953 001954 001956 001957 001959
                                         001960 001962 001963 001965 001966 001968 001969
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:5  Page   44
Procedure                        Defn    Locations
--------------------------------+---------------------------------------------------------------


A000-INITIALISE                 000492P  000464
A100-GET-OPERATING-SYSTEM-TYPE  000502P  000497
A200-GET-COMMAND-LINE-OPTIONS   000514P  000498
A210-DISPLAY-PROGRAM-USAGE      000575P  000530
A400-GENERATE-WORK-FILENAMES    000595P  000499
A500-INITIALISE-DEFAULTS        000622P  000500
B000-COPY-STDIN-TO-WORKOUT      000631P  000465
C000-LOAD-INCLUDE-FILES         000687P  000467
COBOLMAC                        001978P
COBOLMAC-MAINLINE               000459P
D000-LOAD-DEFINE-COMMANDS       000768P  000470
D100-PROCESS-DEFINE-COMMAND     000832P  000810
D110-FOUND-DUPLICATE-MACRO      000859P  000853
D120-ADD-MACRO-TO-LIBRARY       000894P  000856
D200-LIST-MACROLIB              000950P  000829
E000-EXPAND-MACRO-CALLS         000985P  000474
E100-FIND-MACRO-CALL            001041P  001010
E200-CONVERT-CALL-TO-CODE       001082P  001013
E210-MACRO-WITH-PARAMETERS      001112P  001090
E220-MACRO-WITHOUT-PARAMETERS   001212P  001093
E230-MACRO-AS-A-CONSTANT        001267P  001096 001099 001102
INSTR                           000657P  000661 000662 000663 000664 000665 000666 000667 000707
                                         000725 000729 000730 000731 000732 000733 000734 000735
                                         000792 000793 000794 000795 000796 000797 000798 000801
                                         000804 001048 001050 001157 001183 001273
S000-SET-FILE-ERROR-STATUS      001359P  001570 001592 001606 001620 001634 001648 001663 001686
                                         001701 001716 001731 001746 001798 001819 001834 001849
                                         001864 001887 001902
S001-OPEN-READ-STDIN            001560P  000637
S002-READ-STDIN                 001576P  000677 001574
S003-CLOSE-STDIN                001596P  000642 000685
S004-OPEN-STDOUT                001610P  001307
S005-WRITE-STDOUT               001624P  001314
S006-CLOSE-STDOUT               001638P  001321
S007-OPEN-READ-WORKIN           001652P  000694 000775 000999 001305
S008-READ-WORKIN                001669P  000758 000815 000921 000945 001022 001316 001667
S009-CLOSE-WORKIN               001690P  000763 000826 001030 001323
S010-OPEN-WORKOUT               001705P  000652 000698 000779 001003
S011-WRITE-WORKOUT              001720P  000673 000741 000754 000807 000881 000890 001018 001148
                                         001166 001192 001209 001224 001231 001247 001264 001285
S012-CLOSE-WORKOUT              001735P  000682 000766 000820 001027
S013-CREATE-MACROLIB            001750P  000784
S014-OPEN-MACROLIB              001767P  000787 000956 000991
S015-READ-KEY-MACROLIB          001781P  000850 001071
S016-READ-NEXT-MACROLIB         001802P  000961 000974 001170 001194 001235 001249
S017-WRITE-MACROLIB             001823P  000914 000941
S018-CLOSE-MACROLIB             001838P  000823 000983 001039 001765
S019-OPEN-READ-INCFILE          001853P  000720
S020-READ-INCFILE               001870P  000745 001868
S021-CLOSE-INCFILE              001891P  000749
S022-DELETE-WORKFILES           001906P  001293 001330
S023-SWOP-WORK-FILE-ASSIGNMENTS 001915P  000700 000781 001005
S024-PREPROCESSOR-COMMAND       001925P  000802
STDERR                          000485P  000535 000536 000537 000538 000539 000540 000541 000580
                                         000581 000582 000583 000584 000585 000591 000716 000845
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:5  Page   45
Procedure                        Defn    Locations
--------------------------------+---------------------------------------------------------------


                                         000877 000899 000958 000959 000967 000968 000971 000978
                                         000979 000980 001331 001332 001333 001334 001335 001336
                                         001339 001342 001345 001349 001352 001973
Z000-FINALISE                   001287P  000490
Z100-COPY-WORKIN-TO-STDOUT      001298P  001292
Z999-ABORT                      001325P  000482 000565 000646 000874 001108 001571 001593 001607
                                         001621 001635 001649 001664 001687 001702 001717 001732
                                         001747 001761 001778 001799 001820 001835 001850 001865
                                         001888 001903
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:5  Page   46
Unreferenced Working Storage Symbols


05                              000390W
W100-COPYRIGHT                  000163W
W100-PROGRAM-IDENTITY           000157W
W100-PROGRAM-V-UU-FF            000160W
W101-PROGRAM-USAGE              000167W
W101-USAGE-LINES                000200W
W300-PREPROCESSOR-DEFAULTS      000212W
W302-ID-MARKERS                 000225W
W302-ID-MARKERS-REDEF           000236W
W502-WORK-FILES                 000295W
W600-ERROR-HANDLING             000304W
W602-OS-IS-OTHER                000321W
W602-OS-IS-WINDOWS              000320W
W605-MACRO-DEFINE-WORKAREA      000327W
W606-CALL-PARAMETER             000344W
W606-MACRO-CALL-WORKAREA        000334W
W606-POST-CALL                  000349W
W606-POST-CALL-DELIMITER        000350W
W606-PRE-CALL                   000347W
W606-PRE-CALL-DELIMITER         000348W
W608-PREPROCESSOR               000355W
W609-INCLUDE-FILE-UNSTRING      000360W
W901-OS-IS-UNKNOWN              000407W
W902-MORE-COMMANDS              000412W
W904-SOFT-WARNINGS              000418W
W907-EXCLUDE-MACRO-BEGIN-END    000430W
W909-INTERNAL-DEBUG-OFF         000438W
W910-HIDE-MACROLIB              000442W
W911-NO-DEFINED-MACROS          000446W
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:5  Page   47
Unreferenced Procedures


COBOLMAC                        001978P
COBOLMAC-MAINLINE               000459P



ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:5  Page   48

  1983  identification division.
  1984
  1985    function-id.                         instr.
  1986
  1987  *> -----------------------------------------------------------------------------
  1988  *> Purpose:          An InStr function in COBOL for COBOL.
  1989  *>
  1990  *> Usage:            found-pos = instr(source-str, search-str)
  1991  *>
  1992  *> Parameters:
  1993  *>   source-str      The string to be searched starting at character 1.
  1994  *>   search-str      The string to search for.
  1995  *>
  1996  *> Returns:
  1997  *>   found-pos       The char position in source-str where search-str starts.
  1998  *>                   Returns zero if search-str is not found.
  1999  *>
  2000  *> Notes:            Before the search is started the following is done:
  2001  *>                   1) Trailing spaces removed from source string.
  2002  *>                   2) Leading and trailing spaces removed from search string.
  2003  *>                   3) Source and search strings are case downshifted.
  2004  *> -----------------------------------------------------------------------------
  2005
  2006  environment division.
  2007
  2008    configuration section.
  2009
  2010      repository.
  2011        function all intrinsic.
  2012
  2013  data division.
  2014
  2015    working-storage section.
  2016      01  source-lstr                    pic x(256).
  2017      01  source-length                  pic s9(04) comp.
  2018      01  search-lstr                    pic x(256).
  2019      01  search-length                  pic s9(04) comp.
  2020      01  start-index                    pic s9(04) comp value zero.
  2021      01  stop-index                     pic s9(04) comp value zero.
  2022
  2023    linkage section.
  2024      01  source-str                     pic x(001) any length.
  2025      01  search-str                     pic x(001) any length.
  2026      01  found-pos                      pic s9(04) comp.
  2027
  2028  procedure division using source-str, search-str returning found-pos.
  2029
  2030    instr-mainline.
  2031
  2032      *> Downshift the source and search strings and get their lengths.
  2033      move lower-case(source-str) to source-lstr
  2034      move length(trim(source-lstr, trailing)) to source-length
  2035      move lower-case(search-str) to search-lstr
  2036      move length(trim(search-lstr)) to search-length
  2037
  2038      *> Return zero if search string longer than source string.
  2039      if search-length > source-length then
  2040        move zero to found-pos
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:5  Page   49

  2041        goback
  2042      end-if
  2043
  2044      *> Return one if the search and source strings are the same.
  2045      if trim(search-lstr) = trim(source-lstr) then
  2046        move 1 to found-pos
  2047        goback
  2048      end-if
  2049
  2050      *> Calculate where the stop index is (stops us getting a bounds violation).
  2051      compute stop-index
  2052        = (source-length - search-length) + 1
  2053      end-compute
  2054
  2055      *> Loop until we find the search string or we hit the stop index.
  2056      perform
  2057        varying start-index from 1 by 1
  2058        until (source-lstr(start-index:search-length) = search-lstr(1:search-length))
  2059           or (start-index = stop-index)
  2060
  2061        *> Nothing to do here as it's all done in the perform statement.
  2062
  2063      end-perform
  2064
  2065      *> If we've found the search string then return where.
  2066      if start-index < stop-index then
  2067        move start-index to found-pos
  2068        goback
  2069      end-if
  2070
  2071      *> If we get here then the search string was not found.
  2072      move zero to found-pos
  2073      goback
  2074
  2075  .end function instr.
  2076
  2077  *> End of source code.
  2078  *> *****************************************************************************
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:5  Page   50
Symbols of Module: COBOLMAC (COBOLMAC)
--------------------------------------

Data Section (WORKING-STORAGE)   Defn    Locations
--------------------------------+---------------------------------------------------------------


SEARCH-LENGTH                   002019W  002036 002039 002052 002058 002058
SEARCH-LSTR                     002018W  002035 002036 002045 002058
SOURCE-LENGTH                   002017W  002034 002039 002052
SOURCE-LSTR                     002016W  002033 002034 002045 002058
START-INDEX                     002020W  002057 002058 002059 002066 002067
STOP-INDEX                      002021W  002051 002059 002066
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:5  Page   51
Symbols of Module: COBOLMAC (COBOLMAC)
--------------------------------------

Data Section (LINKAGE)           Defn    Locations
--------------------------------+---------------------------------------------------------------


FOUND-POS                       002026K  002028 002040 002046 002067 002072
SEARCH-STR                      002025K  002028 002035
SOURCE-STR                      002024K  002028 002033
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:5  Page   52
Functions                        Defn    Locations
--------------------------------+---------------------------------------------------------------


LOWER-CASE                      002033I  002035
TRIM                            002034I  002036 002045 002045
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:5  Page   53
Procedure                        Defn    Locations
--------------------------------+---------------------------------------------------------------


INSTR                           002075P
INSTR-MAINLINE                  002030P
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:5  Page   54
Unreferenced Working Storage Symbols


None
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    27/05/15  22:19:56:5  Page   55
Unreferenced Procedures


INSTR                           002075P
INSTR-MAINLINE                  002030P

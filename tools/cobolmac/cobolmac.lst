
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:0  Page    1

     1  *> **  >>SOURCE FORMAT IS FREE
     2
     3  identification division.
     4
     5    program-id.                          cobolmac.
     6
     7  *> -----------------------------------------------------------------------------
     8  *>  CobolMac: a COBOL Macro Preprocessor.
     9  *> -----------------------------------------------------------------------------
    10  *>
    11  *>  This program is free software: you can redistribute it and/or modify it
    12  *>  under the terms of the GNU General Public License as published by the Free
    13  *>  Software Foundation, either version 3 of the License, or (at your option)
    14  *>  any later version.
    15  *>
    16  *>  This program is distributed in the hope that it will be useful, but WITHOUT
    17  *>  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
    18  *>  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
    19  *>  more details.
    20  *>
    21  *>  You should have received a copy of the GNU General Public License along with
    22  *>  this program. If not, see <http://www.gnu.org/licenses/>.
    23  *>
    24  *> -----------------------------------------------------------------------------
    25  *>
    26  *>  Description:
    27  *>
    28  *>    CobolMac is a COBOL Macro Preprocessor tool that reads a COBOL source file
    29  *>    prior to processing by GnuCOBOL's cobc.
    30  *>
    31  *>    It associates a macro name with a string of text. Macros can have up to
    32  *>    nine formal parameters. In the definition actual parameters are supplied
    33  *>    to replace the formal parameters when the macro is called in the source
    34  *>    program.
    35  *>
    36  *>    CobolMac is implemented as a command-line filter that emulates the macro
    37  *>    capability that is available with the Hewlett-Packard HPe3000 COBOL II/iX
    38  *>    Compiler.
    39  *>
    40  *>    Note: CobolMac assumes that it is preprocessing FREE FORMAT files. If used
    41  *>          to preprocess a FIXED FORMAT file then extra care must be taken when
    42  *>          defining the macros to ensure that all added code resides in the
    43  *>          correct areas - Area A (cols 7 to 11) and Area B (cols 12 to 72).
    44  *>
    45  *>  Usage:
    46  *>
    47  *>    w101-usage-text in Working-Storage contains the program usage text which
    48  *>    is displayed by using the --help option.
    49  *>
    50  *>  Compilation Instructions:
    51  *>
    52  *>    Production:
    53  *>
    54  *>      cobc -x cobolmac.cob
    55  *>
    56  *>    Development (enable ALL warnings and debugging lines):
    57  *>
    58  *>      cobc -x -W -fdebugging-line cobolmac.cob
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:0  Page    2

    59  *>
    60  *>  Modification History:
    61  *>
    62  *>    See the ChangeLog file.
    63  *>
    64  *>  Developer Notes:
    65  *>
    66  *>    See the DevNotes file.
    67  *>
    68  *> -----------------------------------------------------------------------------
    69
    70  environment division.
    71
    72    configuration section.
    73
    74      source-computer.                   Linux Mint Rebecca; Cinnamon Edition.
    75      object-computer.                   Linux Mint Rebecca; Cinnamon Edition.
    76
    77      repository.
    78
    79        function instr
    80        function all intrinsic.
    81
    82    input-output section.
    83
    84      file-control.
    85
    86        select stdin                     assign to keyboard
    87                                         access is sequential
    88                                         organization is line sequential
    89                                         file status is w500-file-status
    90                                         .
    91        select stdout                    assign to display
    92                                         access is sequential
    93                                         organization is line sequential
    94                                         file status is w500-file-status
    95                                         .
    96        select workin                    assign to w501-workin-filename
    97                                         access is sequential
    98                                         organization is line sequential
    99                                         file status is w500-file-status
   100                                         .
   101        select workout                   assign to w501-workout-filename
   102                                         access is sequential
   103                                         organization is line sequential
   104                                         file status is w500-file-status
   105                                         .
   106        select macrolib                  assign to w501-macrolib-filename
   107                                         access is dynamic
   108                                         organization is indexed
   109                                         record key is macrolib-key
   110                                         file status is w500-file-status
   111                                         .
   112        select incfile                   assign to w501-incfile-filename
   113                                         access is sequential
   114                                         organization is line sequential
   115                                         file status is w500-file-status
   116                                         .
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:0  Page    3

   117
   118  data division.
   119
   120    file section.
   121
   122      fd  stdin.
   123
   124      01  stdin-record                   pic x(256).
   125
   126      fd  stdout.
   127
   128      01  stdout-record                  pic x(256).
   129
   130      fd  workin.
   131
   132      01  workin-record                  pic x(256).
   133
   134      fd  workout.
   135
   136      01  workout-record                 pic x(256).
   137
   138      fd  macrolib.
   139
   140      01  macrolib-record.
   141        05  macrolib-key.
   142          10  macrolib-name              pic x(030).
   143          10  macrolib-line-number       pic 9(004).
   144        05  macrolib-data.
   145          10  macrolib-code-line         pic x(256).
   146
   147      fd  incfile.
   148
   149      01  incfile-record                 pic x(256).
   150
   151    working-storage section.
   152
   153      *> -------------------------------------------------------------------------
   154      *>  w1nn - Program Identification and Usage.
   155      *> -------------------------------------------------------------------------
   156
   157      01  w100-program-identity.
   158        05  w100-program-id-line-01.
   159          10                             pic x(009) value "cobolmac/".
   160          10  w100-program-v-uu-ff       pic x(007) value "B.00.00".
   161          10                             pic x(063) value " - COBOL Macro Preprocessor.".
   162        05  w100-program-id-line-02.
   163          10  w100-copyright             pic x(079) value "Copyright (c) Robert W. Mills (robertw-mills@users.sf.net), 2014-2015.".
   164        05  w100-program-id-line-03      pic x(079) value "This is free software; see the source for copying conditions. There is NO".
   165        05  w100-program-id-line-04      pic x(079) value "WARRANTY; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.".
   166
   167      01  w101-program-usage.
   168        05  w101-usage-index             pic s9(04) comp.
   169        05  w101-usage-text.
   170                             *>"         1         2         3         4         5         6         7         "
   171                             *>"1234567890123456789012345678901234567890123456789012345678901234567890123456789"
   172          10  pic x(079) value "  Usage:".
   173          10  pic x(079) value "    $ cobolmac [options] <input >output [2>messages]".
   174          10  pic x(079) value "    $ cat input | cobolmac [options] [2>messages] | cat - >output".
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:0  Page    4

   175          10  pic x(079) value " ".
   176          10  pic x(079) value "  Parameters:".
   177          10  pic x(079) value "    options        The available values are:".
   178          10  pic x(079) value "      --help       Display this text and exit.".
   179          10  pic x(079) value "      --version    Display the preprocessor version and exit.".
   180          10  pic x(079) value "      --hardwarn   Treat all warnings like an error.".
   181          10  pic x(079) value "      --verbose    Include Macro Begin/End comment lines.".
   182          10  pic x(079) value "      --debug      Display additional error information.".
   183          10  pic x(079) value "      --maclib     List the contents of the Macro Library.".
   184          10  pic x(079) value "                   Only active if Standard Error has been redirected.".
   185          10  pic x(079) value "    input          [path/]name of file Standard Input redirected to.".
   186          10  pic x(079) value "    output         [path/]name of file Standard Output redirected to.".
   187          10  pic x(079) value "    messages       optional [path/]name of file Standard Error redirected to.".
   188          10  pic x(079) value " ".
   189          10  pic x(079) value "  Return Codes:".
   190          10  pic x(079) value "    0 (zero)       Program completed without any errors.".
   191          10  pic x(079) value "    1 (one)        Program terminated in an error state.".
   192          10  pic x(079) value "                   Details written to Standard Error prior to termination.".
   193          10  pic x(079) value "                   The output file, if created, is incomplete/corrupt.".
   194          10  pic x(079) value " ".
   195          10  pic x(079) value "***". *> end of program usage text marker.
   196                             *>"         1         2         3         4         5         6         7         "
   197                             *>"1234567890123456789012345678901234567890123456789012345678901234567890123456789"
   198        05  w101-usage-lines             redefines w101-usage-text.
   199          10  w101-usage-line            pic x(079) occurs 24.
   200              *> Update occurs count if number of fillers below w101-usage-text changes.
   201
   202      *> -------------------------------------------------------------------------
   203      *>  w2nn - SQL Host Variables.
   204      *> -------------------------------------------------------------------------
   205
   206      *> -------------------------------------------------------------------------
   207      *>  w3nn - Program Constants.
   208      *> -------------------------------------------------------------------------
   209
   210      01  w300-preprocessor-defaults.
   211        05  w300-keychar                 pic x(001) value "%".
   212              *> This specifies the initial character of the macro name in both
   213              *> the macro definition and macro call.
   214        05  w300-parmchar                pic x(001) value "!".
   215              *> This specifies the initial character of the formal parameters in
   216              *> the macro definition.
   217        05  w300-delimiter               pic x(001) value "#".
   218              *> This specifies the character to be used to terminate the macro
   219              *> definition and the actual parameters in a macro call.
   220
   221      01  w301-max-call-parms            pic s9(04) comp value 9.
   222
   223      01  w302-id-markers.
   224        05  w302-id-marker-values.
   225          10  pic x(002) value "!1".
   226          10  pic x(002) value "!2".
   227          10  pic x(002) value "!3".
   228          10  pic x(002) value "!4".
   229          10  pic x(002) value "!5".
   230          10  pic x(002) value "!6".
   231          10  pic x(002) value "!7".
   232          10  pic x(002) value "!8".
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:0  Page    5

   233          10  pic x(002) value "!9".
   234        05  w302-id-markers-redef        redefines w302-id-marker-values.
   235          10  w302-id-marker             pic x(002) occurs 9.
   236
   237      *> -------------------------------------------------------------------------
   238      *>  w4nn - System Intrinsic Parameters.
   239      *> -------------------------------------------------------------------------
   240
   241      *> -------------------------------------------------------------------------
   242      *>  w5nn - File Status, Handles and Buffers.
   243      *> -------------------------------------------------------------------------
   244
   245      01  w500-file-status               pic x(002).
   246
   247        88  w500-success                            value "00".
   248        88  w500-success-duplicate                  value "02".
   249        88  w500-success-incomplete                 value "04".
   250        88  w500-success-optional                   value "05".
   251        88  w500-success-no-unit                    value "07".
   252        88  w500-directory-full-missing             value "09".
   253
   254        88  w500-end-of-file                        value "10".
   255        88  w500-out-of-key-range                   value "14".
   256
   257        88  w500-key-invalid                        value "21".
   258        88  w500-key-exists                         value "22".
   259        88  w500-key-not-exists                     value "23".
   260
   261        88  w500-permanent-error                    value "30".
   262        88  w500-inconsistent-filename              value "31".
   263        88  w500-boundary-violation                 value "34".
   264        88  w500-not-exists                         value "35".
   265        88  w500-permission-denied                  value "37".
   266        88  w500-closed-with-lock                   value "38".
   267        88  w500-conflict-attribute                 value "39".
   268
   269        88  w500-already-open                       value "41".
   270        88  w500-not-open                           value "42".
   271        88  w500-read-not-done                      value "43".
   272        88  w500-record-overflow                    value "44".
   273        88  w500-read-error                         value "46".
   274        88  w500-input-denied                       value "47".
   275        88  w500-output-denied                      value "48".
   276        88  w500-i-o-denied                         value "49".
   277
   278        88  w500-record-locked                      value "51".
   279        88  w500-end-of-page                        value "52".
   280        88  w500-i-o-linage                         value "57".
   281
   282        88  w500-file-sharing                       value "61".
   283
   284        88  w500-not-available                      value "91".
   285
   286      *> The following 4 variables have to be at the 01 level.
   287
   288      01  w501-workin-filename           pic x(256).
   289      01  w501-workout-filename          pic x(256).
   290      01  w501-macrolib-filename         pic x(256).
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:1  Page    6

   291      01  w501-incfile-filename          pic x(256).
   292
   293      01  w502-work-files.
   294        05  w502-work-file-one           pic x(256).
   295        05  w502-work-file-two           pic x(256).
   296        05  w502-work-file-swap          pic x(256).
   297
   298      *> -------------------------------------------------------------------------
   299      *>  w6nn - General Work Variables.
   300      *> -------------------------------------------------------------------------
   301
   302      01  w600-error-handling.
   303        05  w600-location                pic x(080) value spaces.
   304        05  w600-sub-location            pic x(080) value spaces.
   305        05  w600-message                 pic x(240) value spaces.
   306        05  w600-message-2               pic x(240) value spaces.
   307        05  w600-file-status             pic x(080) value spaces.
   308
   309      01  w601-argv-option               pic x(256) value spaces.
   310        88  w601-help                               value "--help".
   311        88  w601-version                            value "--version".
   312        88  w601-hard-warnings                      value "--hardwarn".
   313        88  w601-verbose                            value "--verbose".
   314        88  w601-debug                              value "--debug".
   315        88  w601-list-macrolib                      value "--maclib".
   316
   317      01  w602-os-type                   pic x(030) value "Other".
   318        88  w602-os-is-windows                      value "Windows_NT".
   319        88  w602-os-is-other                        value "Other".
   320
   321      01  w603-random-number             pic 9(009) value zero.
   322
   323      *> w604- is available for use.
   324
   325      01  w605-macro-define-workarea.
   326        05  w605-define-name             pic x(080).
   327        05  w605-define-code             pic x(256).
   328        05  w605-define-line-number      pic 9(004).
   329        05  w605-define-delimiter        pic x(001).
   330        05  w605-not-used                pic x(256).
   331
   332      01  w606-macro-call-workarea.
   333        05  w606-call-start              pic s9(04) comp.
   334        05  w606-call-end                pic s9(04) comp.
   335        05  w606-call-name               pic x(256) value spaces.
   336        05  w606-call-name-start         pic s9(04) comp.
   337        05  w606-call-name-delimiter     pic x(001) value spaces.
   338        05  w606-call-parms-list         pic x(256).
   339        05  w606-call-parameters.
   340          10  w606-call-parms-count      pic s9(04) comp value zero.
   341          10  w606-call-parm-number      pic s9(04) comp.
   342          10  w606-call-parameter        occurs 9.
   343            15  w606-call-parm           pic x(080).
   344        05  w606-call-count              pic s9(04) comp.
   345        05  w606-pre-call                pic x(256) value spaces.
   346        05  w606-pre-call-delimiter      pic x(001) value spaces.
   347        05  w606-post-call               pic x(256) value spaces.
   348        05  w606-post-call-delimiter     pic x(001) value spaces.
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:1  Page    7

   349        05  w606-not-used                pic x(256).
   350
   351      01  w607-comment-start             pic s9(04) comp.
   352
   353      01  w608-preprocessor.
   354        05  w608-keychar                 pic x(001).
   355        05  w608-parmchar                pic x(001).
   356        05  w608-delimiter               pic x(001).
   357
   358      01  w609-include-file-unstring.
   359        05  w609-not-used                pic x(256).
   360        05  w609-include-file            pic x(256).
   361
   362      01  w610-macrolib-name             pic x(030).
   363
   364      01  w611-new-preprocessor-parms.
   365        05  w611-not-used-1              pic x(080).
   366        05  w611-parameter-1             pic x(010).
   367        05  w611-subparameter-1          pic x(010).
   368        05  w611-parameter-2             pic x(010).
   369        05  w611-subparameter-2          pic x(010).
   370        05  w611-parameter-3             pic x(010).
   371        05  w611-subparameter-3          pic x(010).
   372        05  w611-not-used-2              pic x(256).
   373
   374      *> -------------------------------------------------------------------------
   375      *>  w7nn - Hard Coded Messages.
   376      *> -------------------------------------------------------------------------
   377
   378      *> -------------------------------------------------------------------------
   379      *>  w8nn - Printer Output Lines.
   380      *> -------------------------------------------------------------------------
   381
   382      *> -------------------------------------------------------------------------
   383      *>  w9nn - Process Control Switches.
   384      *> -------------------------------------------------------------------------
   385
   386      01  . *> End-of-file flags.
   387
   388        05  pic x(001). *> Standard Input end-of-file?
   389          88  w900-more-stdin                       value "M".
   390          88  w900-end-of-stdin                     value "E".
   391
   392        05  pic x(001). *> Work Input end-of-file?
   393          88  w900-more-workin                      value "M".
   394          88  w900-end-of-workin                    value "E".
   395
   396        05  pic x(001). *> Macro Library end-of-file?
   397          88  w900-more-macrolib                    value "M".
   398          88  w900-end-of-macrolib                  value "E".
   399
   400        05  pic x(001). *> $INCLUDE end-of-file?
   401          88  w900-more-incfile                     value "M".
   402          88  w900-end-of-incfile                   value "E".
   403
   404      01  pic x(001) value "U". *> What is the Operating System Type?
   405        88  w901-os-is-unknown                      value "U". *> Default setting.
   406        88  w901-os-is-linux                        value "L".
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:1  Page    8

   407        88  w901-os-is-windows                      value "W".
   408
   409      01  pic x(001) value "M". *> Are there any more Command Line options?
   410        88  w902-more-commands                      value "M". *> Default setting.
   411        88  w902-last-command                       value "L".
   412
   413      01  . *> File redirection flags
   414
   415        05  pic x(001) value "N". *> Is Standard Input redirected?
   416          88  w903-stdin-not-redirected             value "N". *> Default setting.
   417          88  w903-stdin-redirected                 value "R".
   418
   419        05  pic x(001) value "N". *> Is Standard Output redirected?
   420          88  w903-stdout-not-redirected            value "N". *> Default setting.
   421          88  w903-stdout-redirected                value "R".
   422
   423        05  pic x(001) value "N". *> Is Standard Error redirected?
   424          88  w903-stderr-not-redirected            value "N". *> Default setting.
   425          88  w903-stderr-redirected                value "R".
   426
   427      01  pic x(001) value "S". *> Are Warnings Hard or Soft?
   428        88  w904-soft-warnings                      value "S". *> Default setting.
   429        88  w904-hard-warnings                      value "H".
   430
   431      01  pic x(001). *> Have we found a $DEFINE Delimiter?
   432        88  w905-define-delimiter-found             value "F".
   433        88  w905-define-delimiter-not-found         value "N".
   434
   435      01  pic x(001). *> Have we found an entry in the Macro Library?
   436        88  w906-macrolib-key-found                 value "F".
   437        88  w906-macrolib-key-not-found             value "N".
   438
   439      01  pic x(001) value "E". *> Do we output a Macro Begin/End Marker?
   440        88  w907-exclude-macro-begin-end            value "E". *> Default setting.
   441        88  w907-include-macro-begin-end            value "I".
   442
   443      01  pic x(001). *> Are there any more Macro Calls?
   444        88  w908-more-macro-calls                   value "M".
   445        88  w908-no-more-macro-calls                value "N".
   446
   447      01  pic x(001) value "F". *> Is the internal debug flag set?
   448        88  w909-internal-debug-off                 value "F". *> Default setting.
   449        88  w909-internal-debug-on                  value "N".
   450
   451      01  pic x(001) value "H". *> Do we display the contents of the Macro Library?
   452        88  w910-hide-macrolib                      value "H". *> Default setting.
   453        88  w910-list-macrolib                      value "D".
   454
   455      01  pic x(001) value "N". *> Do we have any $DEFINEd Macros?
   456        88  w911-no-defined-macros                  value "N". *> Default setting.
   457        88  w911-defined-macros                     value "D".
   458
   459      01  pic x(001) value "N". *> Are there any more $INCLUDE files to be loaded?
   460        88  w912-no-include-files                   value "N". *> Default setting.
   461        88  w912-more-include-files                 value "M".
   462
   463      01  pic x(001) value "N". *> Have we found a Macro Call?
   464        88  w913-macro-call-not-found               value "N". *> Default setting.
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:1  Page    9

   465        88  w913-macro-call-found                   value "F".
   466
   467  procedure division.
   468
   469    cobolmac-mainline.
   470      *> -------------------------------------------------------------------------
   471      *>  Program Control Block.
   472      *> -------------------------------------------------------------------------
   473
   474      perform a000-initialise
   475      perform b000-copy-stdin-to-workout
   476
   477      perform c000-load-include-files
   478        until w912-no-include-files
   479
   480      perform d000-load-define-commands
   481
   482      if w911-defined-macros then *> We have some preprocessing to do.
   483        set w908-more-macro-calls to true
   484        perform e000-expand-macro-calls
   485
   486      else *> No macro definitions were found.
   487        move "cobolmac-mainline" to w600-location
   488        move "No macro definitions have been found." to w600-message
   489        move "N/A" to w600-file-status
   490
   491        if w904-hard-warnings then *> Terminate the program.
   492          perform z999-abort
   493
   494        else *> Display message and exit.
   495          display w600-message upon stderr end-display
   496        end-if
   497
   498      end-if
   499
   500      perform z000-finalise
   501
   502    .a000-initialise.
   503      *> --------------------------------------------------------------------------
   504      *>  Start of Program Processing.
   505      *> --------------------------------------------------------------------------
   506
   507      perform a100-get-operating-system-type
   508      perform a200-get-command-line-options
   509      perform a300-check-stdxxx-redirect
   510
   511      if w903-stdin-not-redirected then
   512        move "a000-initialise (1)" to w600-location
   513        move "An input file has not been specified." to w600-message
   514        move "Run with --help option for usage details." to w600-message-2
   515        move "N/A" to w600-file-status
   516        perform z999-abort
   517      end-if
   518
   519      if w903-stdout-not-redirected then
   520        move "a000-initialise (2)" to w600-location
   521        move "An output file has not been specified." to w600-message
   522        move "Run with --help option for usage details." to w600-message-2
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:1  Page   10

   523        move "N/A" to w600-file-status
   524        perform z999-abort
   525      end-if
   526
   527      perform a400-generate-work-filenames
   528      perform a500-initialise-defaults
   529
   530    .a100-get-operating-system-type.
   531      *> -------------------------------------------------------------------------
   532      *>  Which operating system are we running on?
   533      *> -------------------------------------------------------------------------
   534
   535      accept w602-os-type from environment "OP"
   536        on exception
   537          set w901-os-is-linux to true *> Assume Linux until we find another way.
   538        not on exception
   539          set w901-os-is-windows to true
   540          move "a100-get-operating-system-type" to w600-location
   541          move "CobolMac has detected that it is running on a Windows OS." to w600-message
   542          move "This OS in NOT currently supported." to w600-message-2
   543          move "N/A" to w600-file-status
   544          perform z999-abort
   545      end-accept
   546
   547    .a200-get-command-line-options.
   548      *> -------------------------------------------------------------------------
   549      *>  Get the command-line options and validate them.
   550      *> -------------------------------------------------------------------------
   551
   552      perform
   553        until w902-last-command
   554
   555        move low-values to w601-argv-option
   556        accept w601-argv-option from argument-value end-accept
   557
   558        if w601-argv-option > low-values then *> Found argument.
   559
   560          evaluate true
   561
   562            when w601-help *> --help
   563              perform a210-display-program-usage
   564              move zero to return-code
   565              goback
   566
   567            when w601-version *> --version
   568              display space upon stderr end-display
   569              display w100-program-id-line-01 upon stderr end-display
   570              display w100-program-id-line-02 upon stderr end-display
   571              display w100-program-id-line-03 upon stderr end-display
   572              display w100-program-id-line-04 upon stderr end-display
   573              display "Built " module-formatted-date upon stderr end-display
   574              display space upon stderr end-display
   575              move zero to return-code
   576              goback
   577
   578            when w601-hard-warnings *> --hardwarn
   579              set w904-hard-warnings to true
   580
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:1  Page   11

   581            when w601-verbose *> --verbose
   582              set w907-include-macro-begin-end to true
   583
   584            when w601-debug *> --debug
   585              set w909-internal-debug-on to true
   586
   587            when w601-list-macrolib *> --maclib
   588              set w910-list-macrolib to true
   589
   590            when other *> Invalid option.
   591              move "a200-get-command-line-options" to w600-location
   592              move spaces to w600-message
   593              string
   594                "Invalid command-line option: ", w601-argv-option delimited by size
   595                into w600-message
   596              end-string
   597              move "N/A" to w600-file-status
   598              perform z999-abort
   599
   600          end-evaluate
   601
   602        else *> No more options were found.
   603          set w902-last-command to true
   604        end-if
   605
   606      end-perform
   607
   608    .a210-display-program-usage.
   609      *> -------------------------------------------------------------------------
   610      *>  Display the program usage on Standard Error.
   611      *> -------------------------------------------------------------------------
   612
   613      display space upon stderr end-display
   614      display w100-program-id-line-01 upon stderr end-display
   615      display w100-program-id-line-02 upon stderr end-display
   616      display w100-program-id-line-03 upon stderr end-display
   617      display w100-program-id-line-04 upon stderr end-display
   618      display space upon stderr end-display
   619
   620      perform
   621        varying w101-usage-index from 1 by 1
   622        until w101-usage-line(w101-usage-index) = "***"
   623
   624        display w101-usage-line(w101-usage-index) upon stderr end-display
   625
   626      end-perform
   627
   628    .a300-check-stdxxx-redirect.
   629      *> -------------------------------------------------------------------------
   630      *>  Check if Standard Input, Output and Error have been redirected.
   631      *> -------------------------------------------------------------------------
   632
   633      evaluate true
   634
   635        when w901-os-is-linux
   636
   637          call "isatty" using by value 0 end-call *> Check Standard Input.
   638          if return-code equal zero then
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:1  Page   12

   639            set w903-stdin-redirected to true
   640          end-if
   641
   642          call "isatty" using by value 1 end-call *> Check Standard Output.
   643          if return-code equal zero then
   644            set w903-stdout-redirected to true
   645          end-if
   646
   647          call "isatty" using by value 2 end-call *> Check Standard Error.
   648          if return-code equal zero then
   649            set w903-stderr-redirected to true
   650          end-if
   651
   652        when w901-os-is-windows
   653
   654          call "_isatty" using by value 0 end-call *> Check Standard Input.
   655          if return-code equal zero then
   656            set w903-stdin-redirected to true
   657          end-if
   658
   659          call "_isatty" using by value 1 end-call *> Check Standard Output.
   660          if return-code equal zero then
   661            set w903-stdout-redirected to true
   662          end-if
   663
   664          call "_isatty" using by value 2 end-call *> Check Standard Error.
   665          if return-code equal zero then
   666            set w903-stderr-redirected to true
   667          end-if
   668
   669        when other *> Not Linux or Windows.
   670          move "a300-check-if-stdxxx-redirected" to w600-location
   671          move "Unable to determine status of Standard Input, Output and Error." to w600-message
   672          move "N/A" to w600-file-status
   673          perform z999-abort
   674
   675      end-evaluate
   676
   677    .a400-generate-work-filenames.
   678      *> -------------------------------------------------------------------------
   679      *>  Generate Macro Library, Work Input and Work Output filenames.
   680      *> -------------------------------------------------------------------------
   681
   682      compute w603-random-number
   683        = random(current-date(1:16)) * 1000000000
   684      end-compute
   685
   686      move spaces to w502-work-file-one
   687      string
   688        "/tmp/cobolmac-", w603-random-number, "-1" delimited by size
   689        into w502-work-file-one
   690      end-string
   691
   692      move spaces to w502-work-file-two
   693      string
   694        "/tmp/cobolmac-", w603-random-number, "-2" delimited by size
   695        into w502-work-file-two
   696      end-string
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:1  Page   13

   697
   698      move spaces to w501-macrolib-filename
   699      string
   700        "/tmp/cobolmac-", w603-random-number, "-0" delimited by size
   701        into w501-macrolib-filename
   702      end-string
   703
   704    .a500-initialise-defaults.
   705      *> -------------------------------------------------------------------------
   706      *>  Initialise default variable values.
   707      *> -------------------------------------------------------------------------
   708
   709      move w300-keychar to w608-keychar
   710      move w300-parmchar to w608-parmchar.
   711      move w300-delimiter to w608-delimiter.
   712
   713    .b000-copy-stdin-to-workout.
   714      *> -------------------------------------------------------------------------
   715      *>  Copy Standard Input to Work Output.
   716      *> -------------------------------------------------------------------------
   717
   718      move "b000-copy-stdin-to-workout (1)" to w600-location
   719      perform s001-open-read-stdin
   720
   721      if w900-end-of-stdin then
   722
   723        move "b000-copy-stdin-to-workout (2)" to w600-location
   724        perform s003-close-stdin
   725
   726        move "The specified input file was empty." to w600-message
   727        move "N/A" to w600-file-status
   728        perform z999-abort
   729
   730      end-if
   731
   732      move w502-work-file-one to w501-workout-filename
   733      move "b000-copy-stdin-to-workout (3)" to w600-location
   734      perform s010-open-workout
   735
   736      perform
   737        until w900-end-of-stdin
   738
   739        if instr(stdin-record, "$include") > zero then *> $INCLUDE file found.
   740          set w912-more-include-files to true
   741        end-if
   742
   743        if instr(stdin-record, "$if") > zero
   744        or instr(stdin-record, "$set") > zero
   745        or instr(stdin-record, "$page") > zero
   746        or instr(stdin-record, "$title") > zero
   747        or instr(stdin-record, "$control") > zero
   748        or instr(stdin-record, "$version") > zero
   749        or instr(stdin-record, "$copyright") > zero then
   750          move "This record type is not supported." to workout-record
   751
   752        else
   753          move stdin-record to workout-record
   754          move "b000-copy-stdin-to-workout (4)" to w600-location
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:1  Page   14

   755          perform s011-write-workout
   756        end-if
   757
   758        move "b000-copy-stdin-to-workout (5)" to w600-location
   759        perform s002-read-stdin
   760
   761      end-perform
   762
   763      move "b000-copy-stdin-to-workout (6)" to w600-location
   764      perform s012-close-workout
   765
   766      move "b000-copy-stdin-to-workout (7)" to w600-location
   767      perform s003-close-stdin
   768
   769    .c000-load-include-files.
   770      *> -------------------------------------------------------------------------
   771      *>  Load $INCLUDE file into Work Output.
   772      *> -------------------------------------------------------------------------
   773
   774      move w502-work-file-one to w501-workin-filename
   775      move "c000-load-include-files (1)" to w600-location
   776      perform s007-open-read-workin
   777
   778      move w502-work-file-two to w501-workout-filename
   779      move "c000-load-include-files (2)" to w600-location
   780      perform s010-open-workout
   781
   782      perform s023-swop-work-file-assignments
   783
   784      set w912-no-include-files to true
   785
   786      perform
   787        until w900-end-of-workin
   788
   789        if instr(workin-record, "$include") > zero then *> $INCLUDE file found.
   790
   791          move trim(workin-record) to workin-record
   792          unstring workin-record delimited by space
   793            into
   794              w609-not-used
   795              w609-include-file
   796          end-unstring
   797
   798  >>D     display "-- debug:   Loading file " trim(w609-include-file) upon stderr end-display
   799
   800          move trim(w609-include-file) to w501-incfile-filename
   801          move "c000-load-include-files (3)" to w600-location
   802          perform s019-open-read-incfile
   803
   804          perform
   805            until w900-end-of-incfile
   806
   807            if instr(incfile-record, "$include") > zero then *> Nested $INCLUDE file found.
   808              set w912-more-include-files to true
   809            end-if
   810
   811            if instr(incfile-record, "$if") > zero
   812            or instr(incfile-record, "$set") > zero
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:1  Page   15

   813            or instr(incfile-record, "$page") > zero
   814            or instr(incfile-record, "$title") > zero
   815            or instr(incfile-record, "$control") > zero
   816            or instr(incfile-record, "$version") > zero
   817            or instr(incfile-record, "$copyright") > zero then
   818              move "This record type is not supported." to workout-record
   819
   820            else
   821              move incfile-record to workout-record
   822              move "c000-load-include-files (4)" to w600-location
   823              perform s011-write-workout
   824            end-if
   825
   826            move "c000-load-include-files (5)" to w600-location
   827            perform s020-read-incfile
   828
   829          end-perform
   830
   831          perform s021-close-incfile
   832
   833        else *> Normal record found.
   834          move workin-record to workout-record
   835          move "c000-load-include-files (6)" to w600-location
   836          perform s011-write-workout
   837        end-if
   838
   839        move "c000-load-include-files (7)" to w600-location
   840        perform s008-read-workin
   841
   842      end-perform
   843
   844      move "c000-load-include-files (8)" to w600-location
   845      perform s009-close-workin
   846
   847      move "c000-load-include-files (9)" to w600-location
   848      perform s012-close-workout
   849
   850    .d000-load-define-commands.
   851      *> -------------------------------------------------------------------------
   852      *>  Extract $DEFINEd macros and load into Macro Library.
   853      *> -------------------------------------------------------------------------
   854
   855      move w502-work-file-one to w501-workin-filename
   856      move "d000-load-define-commands (1)" to w600-location
   857      perform s007-open-read-workin
   858
   859      move w502-work-file-two to w501-workout-filename
   860      move "d000-load-define-commands (2)" to w600-location
   861      perform s010-open-workout
   862
   863      perform s023-swop-work-file-assignments
   864
   865      move "d000-load-define-commands (3)" to w600-location
   866      perform s013-create-macrolib
   867
   868      move "d000-load-define-commands (4)" to w600-location
   869      perform s014-open-macrolib
   870
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:1  Page   16

   871      perform
   872        until w900-end-of-workin
   873
   874        if instr(workin-record, "$if") > zero
   875        or instr(workin-record, "$set") > zero
   876        or instr(workin-record, "$page") > zero
   877        or instr(workin-record, "$title") > zero
   878        or instr(workin-record, "$control") > zero
   879        or instr(workin-record, "$version") > zero
   880        or instr(workin-record, "$copyright") > zero then
   881          move "This record type is not supported." to workout-record
   882
   883        else if instr(workin-record, "$preprocessor") > zero then *> $PREPROCESSOR command found.
   884          perform s024-preprocessor-command
   885
   886        else if instr(workin-record, "$define") = zero then *> $DEFINE command not found.
   887          move workin-record to workout-record
   888          move "d000-load-define-commands (5)" to w600-location
   889          perform s011-write-workout
   890
   891        else
   892          perform d100-process-define-command
   893
   894        end-if end-if end-if
   895
   896        move "d000-load-define-commands (6)" to w600-location
   897        perform s008-read-workin
   898
   899      end-perform
   900
   901      move "d000-load-define-commands (7)" to w600-location
   902      perform s012-close-workout
   903
   904      move "d000-load-define-commands (8)" to w600-location
   905      perform s018-close-macrolib
   906
   907      move "d000-load-define-commands (9)" to w600-location
   908      perform s009-close-workin
   909
   910      if w910-list-macrolib and w911-defined-macros then
   911        perform d200-list-macrolib
   912      end-if
   913
   914    .d100-process-define-command.
   915      *> -------------------------------------------------------------------------
   916      *>  Process the $DEFINE command.
   917      *> -------------------------------------------------------------------------
   918
   919      unstring workin-record
   920        delimited by w608-keychar or "="
   921        into
   922          w605-not-used
   923          w605-define-name
   924          w605-define-code
   925      end-unstring
   926
   927  >>D display "-- debug:   Looking in Macro Library for %", trim(w605-define-name), "." upon stderr end-display
   928
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:1  Page   17

   929      move trim(w605-define-name) to macrolib-name
   930      move zeros to macrolib-line-number
   931      move "d100-process-define-command" to w600-location
   932      perform s015-read-key-macrolib
   933
   934      if w906-macrolib-key-found then *> We have a duplicate macro name.
   935        perform d110-found-duplicate-macro
   936
   937      else *> We have a new macro. Add it to Macro Library.
   938        perform d120-add-macro-to-library
   939      end-if
   940
   941    .d110-found-duplicate-macro.
   942      *> -------------------------------------------------------------------------
   943      *> Found a duplicate macro name. Generate an error or a warning?
   944      *> -------------------------------------------------------------------------
   945
   946      move spaces to w600-message
   947      string
   948        "The ", trim(w605-define-name), " macro has already been $DEFINEd." delimited by size
   949        into w600-message
   950      end-string
   951
   952      move "N/A" to w600-file-status
   953
   954      if w904-hard-warnings then *> Terminate the program.
   955        move "d110-found-duplicate-macro (1)" to w600-location
   956        perform z999-abort
   957
   958      else *> Write warning messages and continue.
   959        display "  WARNING: ", trim(w600-message) upon stderr end-display
   960
   961        move workin-record to workout-record
   962        move "d110-found-duplicate-macro (2)" to w600-location
   963        perform s011-write-workout
   964
   965        move spaces to workout-record
   966        string
   967          "*> WARNING: ", trim(w600-message) delimited by size
   968          into workout-record
   969        end-string
   970
   971        move "d110-found-duplicate-macro (3)" to w600-location
   972        perform s011-write-workout
   973
   974      end-if
   975
   976    .d120-add-macro-to-library.
   977      *> -------------------------------------------------------------------------
   978      *> Add the macro definition to the Macro Library.
   979      *> -------------------------------------------------------------------------
   980
   981  >>D display "-- debug:     Adding %", trim(w605-define-name), " to Macro Library." upon stderr end-display
   982
   983      set w911-defined-macros to true
   984      set w905-define-delimiter-not-found to true
   985
   986      move zeros to w605-define-line-number
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:1  Page   18

   987      unstring w605-define-code delimited by w608-delimiter
   988        into
   989          w605-define-code delimiter in w605-define-delimiter
   990      end-unstring
   991
   992      move trim(w605-define-name) to macrolib-name
   993      move w605-define-line-number to macrolib-line-number
   994      move w605-define-code to macrolib-code-line
   995      move "d120-add-macro-to-library (1)" to w600-location
   996      perform s017-write-macrolib
   997
   998      if w605-define-delimiter = w608-delimiter then *> $DEFINE delimiter was found.
   999        set w905-define-delimiter-found to true
  1000
  1001      else *> $DEFINE delimiter was not found.
  1002        move "d120-add-macro-to-library (2)" to w600-location
  1003        perform s008-read-workin
  1004      end-if
  1005
  1006      perform
  1007        until w905-define-delimiter-found
  1008
  1009        unstring workin-record delimited by w608-delimiter
  1010          into
  1011            w605-define-code delimiter in w605-define-delimiter
  1012        end-unstring
  1013
  1014        if w605-define-delimiter = w608-delimiter then *> $DEFINE delimiter found.
  1015          set w905-define-delimiter-found to true
  1016        end-if
  1017
  1018        add 1 to w605-define-line-number end-add
  1019        move w605-define-line-number to macrolib-line-number
  1020        move trim(w605-define-name) to macrolib-name
  1021        move w605-define-code to macrolib-code-line
  1022        move "d120-add-macro-to-library (3)" to w600-location
  1023        perform s017-write-macrolib
  1024
  1025        if w905-define-delimiter-not-found then
  1026          move "d120-add-macro-to-library (4)" to w600-location
  1027          perform s008-read-workin
  1028        end-if
  1029
  1030      end-perform
  1031
  1032    .d200-list-macrolib.
  1033      *> -------------------------------------------------------------------------
  1034      *>  List the contents of Macro Library on Standard Error (if redirected).
  1035      *> -------------------------------------------------------------------------
  1036
  1037      if w903-stderr-redirected then
  1038
  1039        move "d200-list-macrolib (1)" to w600-location
  1040        perform s014-open-macrolib
  1041
  1042        display space upon stderr end-display
  1043        display "---------- Start of Macros Library." upon stderr end-display
  1044        move "d200-list-macrolib (2)" to w600-location
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:1  Page   19

  1045        perform s016-read-next-macrolib
  1046
  1047        perform
  1048          until w900-end-of-macrolib
  1049
  1050          if macrolib-line-number = zeros then *> 1st line for macro. Output macro name.
  1051            display space upon stderr end-display
  1052            display "Macro %", trim(macrolib-name) upon stderr end-display
  1053          end-if
  1054
  1055          display "[" macrolib-line-number "] ", trim(macrolib-data, trailing) upon stderr end-display
  1056
  1057          move "d200-list-macrolib (3)" to w600-location
  1058          perform s016-read-next-macrolib
  1059
  1060        end-perform
  1061
  1062        display space upon stderr end-display
  1063        display "---------- End of Macro Library." upon stderr end-display
  1064        display space upon stderr end-display
  1065
  1066        move "d200-list-macrolib (4)" to w600-location
  1067        perform s018-close-macrolib
  1068
  1069      end-if
  1070
  1071    .e000-expand-macro-calls.
  1072      *> -------------------------------------------------------------------------
  1073      *>  Replace the Macro Calls with code held in the Macro Library.
  1074      *> -------------------------------------------------------------------------
  1075
  1076      move "e000-expand-macro-calls (1)" to w600-location
  1077      perform s014-open-macrolib
  1078
  1079      perform
  1080        until w908-no-more-macro-calls
  1081
  1082        move zero to w606-call-count
  1083        move w502-work-file-one to w501-workin-filename
  1084        move "e000-expand-macro-calls (2)" to w600-location
  1085        perform s007-open-read-workin
  1086
  1087        move w502-work-file-two to w501-workout-filename
  1088        move "e000-expand-macro-calls (3)" to w600-location
  1089        perform s010-open-workout
  1090
  1091        perform s023-swop-work-file-assignments
  1092
  1093        perform
  1094          until w900-end-of-workin
  1095
  1096          perform e100-find-macro-call
  1097
  1098          if w913-macro-call-found then
  1099            perform e200-convert-call-to-code
  1100
  1101          else *> Write record to workout.
  1102            move workin-record to workout-record
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:1  Page   20

  1103            move "e000-expand-macro-calls (4)" to w600-location
  1104            perform s011-write-workout
  1105          end-if
  1106
  1107          move "e000-expand-macro-calls (5)" to w600-location
  1108          perform s008-read-workin
  1109
  1110        end-perform
  1111
  1112        move "e000-expand-macro-calls (6)" to w600-location
  1113        perform s012-close-workout
  1114
  1115        move "e000-expand-macro-calls (7)" to w600-location
  1116        perform s009-close-workin
  1117
  1118        if w606-call-count = 0 then
  1119          set w908-no-more-macro-calls to true
  1120        end-if
  1121
  1122      end-perform
  1123
  1124      move "e000-expand-macro-calls (7)" to w600-location
  1125      perform s018-close-macrolib
  1126
  1127    .e100-find-macro-call.
  1128      *> -------------------------------------------------------------------------
  1129      *>  Search the current workin record for a macro call.
  1130      *> -------------------------------------------------------------------------
  1131
  1132      *> Search for a comment marker and macro keychar.
  1133      move zero to w607-comment-start
  1134      move instr(workin-record, "*>") to w607-comment-start
  1135      move zero to w606-call-start
  1136      move instr(workin-record, w300-keychar) to w606-call-start
  1137
  1138      if w606-call-start = zero then *> Macro keychar not found.
  1139        set w913-macro-call-not-found to true
  1140
  1141      else if (w607-comment-start > 0) and (w606-call-start > w607-comment-start) then *> Macro keychar found in a comment.
  1142        set w913-macro-call-not-found to true
  1143
  1144      else
  1145        *> Extract the 'word' following the macro keychar.
  1146        move spaces to w606-call-name, w606-call-name-delimiter
  1147        add 1 to w606-call-start giving w606-call-name-start end-add
  1148        unstring workin-record delimited by "(" or ")" or "." or space or '"' or ","
  1149          into
  1150            w606-call-name delimiter in w606-call-name-delimiter
  1151          with pointer w606-call-name-start
  1152        end-unstring
  1153        *> Look in the Macro Library to see if this 'word' is a valid macro name.
  1154        move trim(w606-call-name) to macrolib-name
  1155        move zeros to macrolib-line-number
  1156        move "e100-find-macro-call" to w600-location
  1157        perform s015-read-key-macrolib
  1158        if w906-macrolib-key-found then *> We've found a macro call.
  1159          move macrolib-name to w610-macrolib-name
  1160          add 1 to w606-call-count end-add
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:1  Page   21

  1161          set w913-macro-call-found to true
  1162
  1163        else *> It is not a macro call.
  1164          set w913-macro-call-not-found to true
  1165        end-if
  1166      end-if end-if
  1167
  1168    .e200-convert-call-to-code.
  1169      *> -------------------------------------------------------------------------
  1170      *>  Replace the macro call with its code.
  1171      *> -------------------------------------------------------------------------
  1172
  1173      evaluate w606-call-name-delimiter
  1174
  1175        when "("
  1176          perform e210-macro-with-parameters
  1177
  1178        when " "
  1179          perform e220-macro-without-parameters
  1180
  1181        when "."
  1182          perform e230-macro-as-a-constant
  1183
  1184        when ")"
  1185          perform e230-macro-as-a-constant
  1186
  1187        when ","
  1188          perform e230-macro-as-a-constant
  1189
  1190        when other
  1191          move "e200-convert-call-to-code" to w600-location
  1192          move "Unable to determine the macro call type." to w600-message
  1193          move "N/A" to w600-file-status
  1194          perform z999-abort
  1195
  1196      end-evaluate
  1197
  1198    .e210-macro-with-parameters.
  1199      *> -------------------------------------------------------------------------
  1200      *>  Insert the macro code and replace parameter markers with actual values.
  1201      *> -------------------------------------------------------------------------
  1202
  1203      unstring workin-record delimited by w300-keychar or "("
  1204        into
  1205          w606-not-used *> line # (if present), leading spaces and marker.
  1206          w606-call-name delimiter in w606-call-name-delimiter
  1207          w606-call-parms-list
  1208      end-unstring
  1209
  1210      initialize w606-call-parameters
  1211      unstring w606-call-parms-list delimited by "#," or "#)"
  1212        into
  1213          w606-call-parm(1)
  1214          w606-call-parm(2)
  1215          w606-call-parm(3)
  1216          w606-call-parm(4)
  1217          w606-call-parm(5)
  1218          w606-call-parm(6)
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:1  Page   22

  1219          w606-call-parm(7)
  1220          w606-call-parm(8)
  1221          w606-call-parm(9)
  1222        tallying in w606-call-parms-count
  1223      end-unstring
  1224
  1225      subtract 1 from w606-call-parms-count end-subtract
  1226
  1227      if w907-include-macro-begin-end then
  1228        move spaces to workout-record
  1229        string
  1230          "*> **** Begin Macro ", trim(w606-call-name), "(", trim(w606-call-parms-list) delimited by size
  1231          into workout-record(w606-call-start:)
  1232        end-string
  1233        move "e210-macro-with-parameters (1)" to w600-location
  1234        perform s011-write-workout
  1235      end-if
  1236
  1237      if macrolib-code-line <> space then *> Filter out an initial blank line in the macro definition.
  1238
  1239        perform with test after
  1240          varying w606-call-parm-number from 1 by 1
  1241            until w606-call-parm-number = w301-max-call-parms
  1242
  1243          if instr(macrolib-code-line, w302-id-marker(w606-call-parm-number)) > zero then *> Found parameter.
  1244            move SUBSTITUTE(macrolib-code-line, w302-id-marker(w606-call-parm-number), trim(w606-call-parm(w606-call-parm-number))) to macrolib-code-line
  1245          end-if
  1246
  1247        end-perform
  1248
  1249        move spaces to workout-record
  1250        move macrolib-code-line to workout-record(w606-call-start:)
  1251        move "e210-macro-with-parameters (2)" to w600-location
  1252        perform s011-write-workout
  1253      end-if
  1254
  1255      move "e210-macro-with-parameters (3)" to w600-location
  1256      perform s016-read-next-macrolib
  1257
  1258      if macrolib-name <> w610-macrolib-name then
  1259        set w900-end-of-macrolib to true
  1260      end-if
  1261
  1262      perform
  1263        until w900-end-of-macrolib
  1264
  1265        perform with test after
  1266          varying w606-call-parm-number from 1 by 1
  1267            until w606-call-parm-number = w301-max-call-parms
  1268
  1269          if instr(macrolib-code-line, w302-id-marker(w606-call-parm-number)) > zero then *> Found parameter.
  1270            move SUBSTITUTE(macrolib-code-line, w302-id-marker(w606-call-parm-number), trim(w606-call-parm(w606-call-parm-number))) to macrolib-code-line
  1271          end-if
  1272
  1273        end-perform
  1274
  1275        move spaces to workout-record
  1276        move macrolib-code-line to workout-record(w606-call-start:)
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:1  Page   23

  1277        move "e210-macro-with-parameters (4)" to w600-location
  1278        perform s011-write-workout
  1279        move "e210-macro-with-parameters (5)" to w600-location
  1280        perform s016-read-next-macrolib
  1281
  1282        if macrolib-name <> w610-macrolib-name then
  1283          set w900-end-of-macrolib to true
  1284        end-if
  1285
  1286      end-perform
  1287
  1288      if w907-include-macro-begin-end then
  1289        move spaces to workout-record
  1290        string
  1291          "*> **** End Macro ", trim(w610-macrolib-name) delimited by size
  1292          into workout-record(w606-call-start:)
  1293        end-string
  1294        move "e210-macro-with-parameters (6)" to w600-location
  1295        perform s011-write-workout
  1296      end-if
  1297
  1298    .e220-macro-without-parameters.
  1299      *> -------------------------------------------------------------------------
  1300      *>  Insert the macro code.
  1301      *> -------------------------------------------------------------------------
  1302
  1303      if w907-include-macro-begin-end then
  1304        move spaces to workout-record
  1305        string
  1306          "*> **** Begin Macro ", trim(macrolib-name) delimited by size
  1307          into workout-record(w606-call-start:)
  1308        end-string
  1309        move "e220-macro-without-parameters (1)" to w600-location
  1310        perform s011-write-workout
  1311      end-if
  1312
  1313      if macrolib-code-line <> space then *> Filter out an initial blank line in the macro definition.
  1314        move spaces to workout-record
  1315        move macrolib-code-line to workout-record(w606-call-start:)
  1316        move "e220-macro-without-parameters (2)" to w600-location
  1317        perform s011-write-workout
  1318      end-if
  1319
  1320      move "e220-macro-without-parameters (3)" to w600-location
  1321      perform s016-read-next-macrolib
  1322
  1323      if macrolib-name <> w610-macrolib-name then
  1324        set w900-end-of-macrolib to true
  1325      end-if
  1326
  1327      perform
  1328        until w900-end-of-macrolib
  1329
  1330        move spaces to workout-record
  1331        move macrolib-code-line to workout-record(w606-call-start:)
  1332        move "e220-macro-without-parameters (4)" to w600-location
  1333        perform s011-write-workout
  1334        move "e220-macro-without-parameters (5)" to w600-location
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:2  Page   24

  1335        perform s016-read-next-macrolib
  1336
  1337        if macrolib-name <> w610-macrolib-name then
  1338          set w900-end-of-macrolib to true
  1339        end-if
  1340
  1341      end-perform
  1342
  1343      if w907-include-macro-begin-end then
  1344        move spaces to workout-record
  1345        string
  1346          "*> **** End Macro ", trim(w610-macrolib-name) delimited by size
  1347          into workout-record(w606-call-start:)
  1348        end-string
  1349        move "e220-macro-without-parameters (6)" to w600-location
  1350        perform s011-write-workout
  1351      end-if
  1352
  1353    .e230-macro-as-a-constant.
  1354      *> -------------------------------------------------------------------------
  1355      *>  Replace the macro name with its value and write record to workout.
  1356      *> -------------------------------------------------------------------------
  1357
  1358      move zero to w606-call-start
  1359      move instr(workin-record, w300-keychar) to w606-call-start
  1360      move length(trim(w606-call-name)) to w606-call-end
  1361      add w606-call-start to w606-call-end end-add
  1362
  1363      move spaces to workout-record
  1364      string
  1365        workin-record(1:w606-call-start - 1), trim(macrolib-code-line), workin-record(w606-call-end + 1:)
  1366        delimited by size
  1367        into workout-record
  1368      end-string
  1369
  1370      move "e230-macro-as-a-constant" to w600-location
  1371      perform s011-write-workout
  1372
  1373    .z000-finalise.
  1374      *> -------------------------------------------------------------------------
  1375      *>  End of Program Processing.
  1376      *> -------------------------------------------------------------------------
  1377
  1378      perform z100-copy-workin-to-stdout
  1379      perform s022-delete-workfiles
  1380
  1381      move zero to return-code
  1382      goback
  1383
  1384    .z100-copy-workin-to-stdout.
  1385      *> -------------------------------------------------------------------------
  1386      *>  Copy Work Input to Standard Output.
  1387      *> -------------------------------------------------------------------------
  1388
  1389      move w502-work-file-one to w501-workin-filename
  1390      move "z100-copy-workin-to-stdout (1)" to w600-location
  1391      perform s007-open-read-workin
  1392      move "z100-copy-workin-to-stdout (2)" to w600-location
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:2  Page   25

  1393      perform s004-open-stdout
  1394
  1395      perform
  1396        until w900-end-of-workin
  1397
  1398        move workin-record to stdout-record
  1399        move "z100-copy-workin-to-stdout (3)" to w600-location
  1400        perform s005-write-stdout
  1401        move "z100-copy-workin-to-stdout (4)" to w600-location
  1402        perform s008-read-workin
  1403
  1404      end-perform
  1405
  1406      move "z100-copy-workin-to-stdout (5)" to w600-location
  1407      perform s006-close-stdout
  1408      move "z100-copy-workin-to-stdout (6)" to w600-location
  1409      perform s009-close-workin
  1410
  1411    .z999-abort.
  1412      *> -------------------------------------------------------------------------
  1413      *>  Abnormal Termination Processing.
  1414      *> -------------------------------------------------------------------------
  1415
  1416      perform s022-delete-workfiles
  1417      display space upon stderr end-display
  1418      display w100-program-id-line-01 upon stderr end-display
  1419      display w100-program-id-line-02 upon stderr end-display
  1420      display w100-program-id-line-03 upon stderr end-display
  1421      display w100-program-id-line-04 upon stderr end-display
  1422      display space upon stderr end-display
  1423
  1424      if w909-internal-debug-on then
  1425        display "  Detected in ", trim(w600-location) " at ", trim(w600-sub-location) upon stderr end-display
  1426      end-if
  1427
  1428      display "  Error: ", trim(w600-message) upon stderr end-display
  1429
  1430      if trim(w600-message-2) <> spaces then
  1431        display "       : ", trim(w600-message-2) upon stderr end-display
  1432      end-if
  1433
  1434      if trim(w600-file-status) <> "N/A" then
  1435        display "  File Status: ", trim(w600-file-status) upon stderr end-display
  1436      end-if
  1437
  1438      display space upon stderr end-display
  1439      move 1 to return-code
  1440      goback
  1441
  1442  *> *****************************************************************************
  1443  *> Start of Subroutines.
  1444
  1445    .s000-set-file-error-status.
  1446      *> -------------------------------------------------------------------------
  1447      *>  Set the file error status for display by z999-abort.
  1448      *> -------------------------------------------------------------------------
  1449
  1450      evaluate true
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:2  Page   26

  1451
  1452        when w500-success
  1453          move "00: Successful completion." to w600-file-status
  1454            *> Nothing extra to say.
  1455
  1456        when w500-success-duplicate
  1457          move "02: Next record has same key (Read) or Duplicate key value (Write)." to w600-file-status
  1458          *> The READ statement was successfully executed, but a duplicate key was
  1459          *> detected. That is, the key value for the current key of reference was
  1460          *> equal to the value of the key in the next record.
  1461
  1462        when w500-success-incomplete
  1463          move "04: Record length does not match fixed file attributes." to w600-file-status
  1464          *> An attempt was made to read a record that is larger than the largest,
  1465          *> or smaller than the smallest record allowed by the RECORD IS VARYING
  1466          *> clause of the associated file-name.
  1467
  1468        when w500-success-optional
  1469          move "05: Optional file not present at the time of Open." to w600-file-status
  1470          *> An OPEN statement is successfully executed, but the referenced
  1471          *> optional file is not present at the time the OPEN statement is
  1472          *> executed. If the open mode is I-O or EXTEND, the file has been
  1473          *> created.
  1474
  1475        when w500-success-no-unit
  1476          move "07: REEL/UNIT specified but file is non-reel/unit medium." to w600-file-status
  1477          *> For a CLOSE statement with the NO REWIND, REEL/UNIT, or FOR REMOVAL
  1478          *> phrase or for an OPEN statement with the NO REWIND phrase, the
  1479          *> referenced file was on a non-reel/unit medium.
  1480
  1481        when w500-directory-full-missing
  1482          move "09: No room in directory or directory does not exist." to w600-file-status
  1483          *> Nothing extra to say.
  1484
  1485        when w500-end-of-file
  1486          move "10: No next logical record exists (end of file)." to w600-file-status
  1487          *> A sequential READ statement was attempted and no next logical record
  1488          *> existed in the file because the end of the file had been reached.
  1489
  1490        when w500-out-of-key-range
  1491          move "14: Number of significant digits in relative record number > key data item size." to w600-file-status
  1492          *> A sequential READ statement was attempted for a relative file and the
  1493          *> number of significant digits in the relative record number was larger
  1494          *> than the size of the relative key data item described for the file.
  1495
  1496        when w500-key-invalid
  1497          move "21: Key sequence error." to w600-file-status
  1498          *> A sequence error exists for a sequentially accessed indexed file. The
  1499          *> prime record key value has been changed by the program between the
  1500          *> successful execution of a READ statement and the execution of the
  1501          *> next REWRITE statement for that file, or the ascending requirements
  1502          *> for successive record key values were violated.
  1503          *>
  1504          *> Alternatively, the program has changed the record key value between a
  1505          *> successful READ and subsequent REWRITE or DELETE operation on a
  1506          *> randomly or dynamically-accessed file with duplicate keys.
  1507
  1508        when w500-key-exists
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:2  Page   27

  1509          move "22: Duplicate key and duplicates not allowed." to w600-file-status
  1510          *> An attempt was made to write a record that would create a duplicate
  1511          *> key in a relative file; or an attempt was made to write or rewrite a
  1512          *> record that would create a duplicate prime record key in an indexed
  1513          *> file.
  1514
  1515        when w500-key-not-exists
  1516          move "23: Record not found." to w600-file-status
  1517          *> An attempt was made to randomly access a record that does not exist
  1518          *> in the file.
  1519
  1520        when w500-permanent-error
  1521          move "30: No further information." to w600-file-status
  1522          *> Nothing extra to say.
  1523
  1524        when w500-inconsistent-filename
  1525          move "31: Dynamic file attribute conflict." to w600-file-status
  1526          *> Nothing extra to say.
  1527
  1528        when w500-boundary-violation
  1529          move "34: Failed because of a boundry violation." to w600-file-status
  1530          *> The I/O statement failed because of a boundary violation. This
  1531          *> condition indicates that an attempt has been made to write beyond
  1532          *> the externally defined boundaries of a sequential file.
  1533
  1534        when w500-not-exists
  1535          move "35: Missing file." to w600-file-status
  1536          *> An OPEN operation with the I-O, INPUT, or EXTEND phrases has been
  1537          *> tried on a non-OPTIONAL file that is not present.
  1538
  1539        when w500-permission-denied
  1540          move "37: Invalid device/unwritable file." to w600-file-status
  1541          *> An OPEN operation has been tried on a file which does not support
  1542          *> the open mode specified in the OPEN statement. Possible violations
  1543          *> are:
  1544          *>   1. The EXTEND or OUTPUT phrase was specified but the file would not
  1545          *>      support write operations.
  1546          *>   2. The I-O phrase was specified but the file would not support the
  1547          *>      input and output operations permitted.
  1548          *>   3. The INPUT phrase was specified but the file would not support
  1549          *>      read operations.
  1550
  1551        when w500-closed-with-lock
  1552          move "38: Open on file closed with LOCK." to w600-file-status
  1553          *> An OPEN operation has been tried on a file previously closed with a
  1554          *> lock.
  1555
  1556        when w500-conflict-attribute
  1557          move "39: Fixed file attribute conflict." to w600-file-status
  1558          *> A conflict has been detected between the fixed file attributes and
  1559          *> the attributes specified for the file in the program. This is usually
  1560          *> caused by a conflict with record-length, key-length, key-position or
  1561          *> file organization. Other possible causes are:
  1562          *>   1. Alternate indexes are incorrectly defined.
  1563          *>   2. The Recording Mode is Variable or Fixed or not defined the same
  1564          *>      as when the file was created..
  1565
  1566        when w500-already-open
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:2  Page   28

  1567          move "41: File is already open." to w600-file-status
  1568          *> An OPEN operation has been tried on file already opened.
  1569
  1570        when w500-not-open
  1571          move "42: File is already closed." to w600-file-status
  1572          *> A CLOSE operation has been tried on file already closed.
  1573
  1574        when w500-read-not-done
  1575          move "43: No read before rewrite/delete." to w600-file-status
  1576          *> For a sequential file in the sequential access mode, the last input-
  1577          *> output statement executed for the associated file prior to the
  1578          *> execution of a REWRITE statement was not a successfully executed READ
  1579          *> statement. For relative and indexed files in the sequential access
  1580          *> mode, the last input-output statement executed for the file prior to
  1581          *> the execution of a DELETE or REWRITE statement was not a successfully
  1582          *> executed READ statement.
  1583
  1584        when w500-record-overflow
  1585          move "44: Boundry violation." to w600-file-status
  1586          *> A boundary violation exists because an attempt was made to rewrite a
  1587          *> record to a file and the record was not the same size as the record
  1588          *> being replaced. An attempt was made to write or rewrite a record that
  1589          *> is larger than the largest, or smaller than the smallest record
  1590          *> allowed by the RECORD IS VARYING clause of the associated file-name.
  1591
  1592        when w500-read-error
  1593          move "46: Unsuccessful read/start." to w600-file-status
  1594          *> A sequential READ, READ NEXT or READ PRIOR statement was attempted on
  1595          *> a file open in the input or I-O mode and no valid next record had
  1596          *> been established because the preceding START statement was
  1597          *> unsuccessful, or the preceding READ statement was unsuccessful or
  1598          *> caused an at end condition.
  1599
  1600        when w500-input-denied
  1601          move "47: File not open for input." to w600-file-status
  1602          *> The execution of a READ or START statement was attempted on a file
  1603          *> not open in the input or I-O mode.
  1604
  1605        when w500-output-denied
  1606          move "48: File not open for output." to w600-file-status
  1607          *> The execution of a WRITE statement was attempted on a sequential file
  1608          *> not open in the output, or extend mode. The execution of a WRITE
  1609          *> statement was attempted on an indexed or relative file not open in
  1610          *> the I-O, output, or extend mode.
  1611
  1612        when w500-i-o-denied
  1613          move "49: File not open for I-O." to w600-file-status
  1614          *> The execution of a DELETE or REWRITE statement was attempted on a
  1615          *> file not open in the I-O mode.
  1616
  1617        when w500-record-locked
  1618          move "51: Record already locked." to w600-file-status
  1619          *> Nothing extra to say.
  1620
  1621        when w500-end-of-page
  1622          move "52: End of page." to w600-file-status
  1623          *> Nothing extra to say.
  1624
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:2  Page   29

  1625        when w500-i-o-linage
  1626          move "57: I-O Linage." to w600-file-status
  1627          *> Nothing extra to say.
  1628
  1629        when w500-file-sharing
  1630          move "61: File sharing." to w600-file-status
  1631          *> Nothing extra to say.
  1632
  1633        when w500-not-available
  1634          move "91: Notavailable." to w600-file-status
  1635          *> Nothing extra to say.
  1636
  1637        when other
  1638          move spaces to w600-file-status
  1639          string
  1640            "Unknown error code (", w500-file-status, ") detected." delimited by size
  1641            into w600-file-status
  1642          end-string
  1643
  1644      end-evaluate
  1645
  1646    .s001-open-read-stdin.
  1647      *> -------------------------------------------------------------------------
  1648      *>  Open Standard Input and read the first record.
  1649      *> -------------------------------------------------------------------------
  1650
  1651      open input stdin
  1652
  1653      if not w500-success then
  1654        move "s001-open-read-stdin" to w600-sub-location
  1655        move "Unable to open Standard Input." to w600-message
  1656        perform s000-set-file-error-status
  1657        perform z999-abort
  1658      end-if
  1659
  1660      perform s002-read-stdin
  1661
  1662    .s002-read-stdin.
  1663      *> -------------------------------------------------------------------------
  1664      *>  Read the next record from Standard Input.
  1665      *> -------------------------------------------------------------------------
  1666
  1667      read stdin end-read
  1668
  1669      if w500-success then
  1670        set w900-more-stdin to true
  1671
  1672      else if w500-end-of-file then
  1673        set w900-end-of-stdin to true
  1674
  1675      else
  1676        move "s002-read-stdin" to w600-sub-location
  1677        move "Unable to read a record from Standard Input." to w600-message
  1678        perform s000-set-file-error-status
  1679        perform z999-abort
  1680      end-if end-if
  1681
  1682    .s003-close-stdin.
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:2  Page   30

  1683      *> -------------------------------------------------------------------------
  1684      *>  Close Standard Input.
  1685      *> -------------------------------------------------------------------------
  1686
  1687      close stdin
  1688
  1689      if not w500-success then
  1690        move "s003-close-stdin" to w600-sub-location
  1691        move "Unable to close Standard Input." to w600-message
  1692        perform s000-set-file-error-status
  1693        perform z999-abort
  1694      end-if
  1695
  1696    .s004-open-stdout.
  1697      *> -------------------------------------------------------------------------
  1698      *>  Open Standard Output.
  1699      *> -------------------------------------------------------------------------
  1700
  1701      open output stdout
  1702
  1703      if not w500-success then
  1704        move "s004-open-stdout" to w600-sub-location
  1705        move "Unable to open Standard Output." to w600-message
  1706        perform s000-set-file-error-status
  1707        perform z999-abort
  1708      end-if
  1709
  1710    .s005-write-stdout.
  1711      *> -------------------------------------------------------------------------
  1712      *>  Write a record to Standard Output.
  1713      *> -------------------------------------------------------------------------
  1714
  1715      write stdout-record end-write
  1716
  1717      if not w500-success then
  1718        move "s005-write-stdout" to w600-sub-location
  1719        move "Unable to write a record to Standard Output." to w600-message
  1720        perform s000-set-file-error-status
  1721        perform z999-abort
  1722      end-if
  1723
  1724    .s006-close-stdout.
  1725      *> -------------------------------------------------------------------------
  1726      *>  Close Standard Output.
  1727      *> -------------------------------------------------------------------------
  1728
  1729      close stdout
  1730
  1731      if not w500-success then
  1732        move "s006-close-stdout" to w600-sub-location
  1733        move "Unable to close Standard Output." to w600-message
  1734        perform s000-set-file-error-status
  1735        perform z999-abort
  1736      end-if
  1737
  1738    .s007-open-read-workin.
  1739      *> -------------------------------------------------------------------------
  1740      *>  Open Work Input and read the first record.
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:2  Page   31

  1741      *> -------------------------------------------------------------------------
  1742
  1743      open input workin
  1744
  1745      if not w500-success then
  1746        move "s007-open-read-workin" to w600-sub-location
  1747        move "Unable to open Work Input." to w600-message
  1748        move trim(w501-workin-filename) to w600-message-2
  1749        perform s000-set-file-error-status
  1750        perform z999-abort
  1751      end-if
  1752
  1753      perform s008-read-workin
  1754
  1755    .s008-read-workin.
  1756      *> -------------------------------------------------------------------------
  1757      *>  Read the next record from Work Input.
  1758      *> -------------------------------------------------------------------------
  1759
  1760      read workin end-read
  1761
  1762      if w500-success then
  1763        set w900-more-workin to true
  1764
  1765      else if w500-end-of-file then
  1766        set w900-end-of-workin to true
  1767
  1768      else
  1769        move "s005-read-workin" to w600-sub-location
  1770        move "Unable to read a record from Work Input." to w600-message
  1771        move trim(w501-workin-filename) to w600-message-2
  1772        perform s000-set-file-error-status
  1773        perform z999-abort
  1774      end-if end-if
  1775
  1776    .s009-close-workin.
  1777      *> -------------------------------------------------------------------------
  1778      *>  Close Work Input.
  1779      *> -------------------------------------------------------------------------
  1780
  1781      close workin
  1782
  1783      if not w500-success then
  1784        move "s009-close-workin" to w600-sub-location
  1785        move "Unable to close Work Input." to w600-message
  1786        move trim(w501-workin-filename) to w600-message-2
  1787        perform s000-set-file-error-status
  1788        perform z999-abort
  1789      end-if
  1790
  1791    .s010-open-workout.
  1792      *> -------------------------------------------------------------------------
  1793      *>  Open Work Output.
  1794      *> -------------------------------------------------------------------------
  1795
  1796      open output workout
  1797
  1798      if not w500-success then
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:2  Page   32

  1799        move "s010-open-workout" to w600-sub-location
  1800        move "Unable to open Work Output." to w600-message
  1801        move trim(w501-workout-filename) to w600-message-2
  1802        perform s000-set-file-error-status
  1803        perform z999-abort
  1804      end-if
  1805
  1806    .s011-write-workout.
  1807      *> -------------------------------------------------------------------------
  1808      *>  Write a record to Work Output.
  1809      *> -------------------------------------------------------------------------
  1810
  1811      write workout-record end-write
  1812
  1813      if not w500-success then
  1814        move "s011-write-workout" to w600-sub-location
  1815        move "Unable to write a record to Work Output." to w600-message
  1816        move trim(w501-workout-filename) to w600-message-2
  1817        perform s000-set-file-error-status
  1818        perform z999-abort
  1819      end-if
  1820
  1821    .s012-close-workout.
  1822      *> -------------------------------------------------------------------------
  1823      *>  Close Work Output.
  1824      *> -------------------------------------------------------------------------
  1825
  1826      close workout
  1827
  1828      if not w500-success then
  1829        move "s012-close-workout" to w600-sub-location
  1830        move "Unable to close Work Output." to w600-message
  1831        move trim(w501-workout-filename) to w600-message-2
  1832        perform s000-set-file-error-status
  1833        perform z999-abort
  1834      end-if
  1835
  1836    .s013-create-macrolib.
  1837      *> -------------------------------------------------------------------------
  1838      *>  Create Macro Library.
  1839      *> -------------------------------------------------------------------------
  1840
  1841      open output macrolib
  1842
  1843      if not w500-success then
  1844        move "s013-create-macrolib" to w600-sub-location
  1845        move "Unable to create Macro Library." to w600-message
  1846        move trim(w501-macrolib-filename) to w600-message-2
  1847        perform z999-abort
  1848      end-if
  1849
  1850      *> Macro Library must be closed before it can be opened for use.
  1851      perform s018-close-macrolib
  1852
  1853    .s014-open-macrolib.
  1854      *> -------------------------------------------------------------------------
  1855      *>  Open Macro Library.
  1856      *> -------------------------------------------------------------------------
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:2  Page   33

  1857
  1858      open i-o macrolib
  1859
  1860      if not w500-success then
  1861        move "s014-open-macrolib" to w600-sub-location
  1862        move "Unable to open Macro Library." to w600-message
  1863        move trim(w501-macrolib-filename) to w600-message-2
  1864        perform z999-abort
  1865      end-if
  1866
  1867    .s015-read-key-macrolib.
  1868      *> -------------------------------------------------------------------------
  1869      *>  Read a record with the specified key from Macro Library.
  1870      *> -------------------------------------------------------------------------
  1871
  1872      read macrolib end-read
  1873
  1874      if w500-success then
  1875        set w906-macrolib-key-found to true
  1876
  1877      else if w500-key-not-exists then
  1878        set w906-macrolib-key-not-found to true
  1879
  1880      else
  1881        move "s015-read-key-macrolib" to w600-sub-location
  1882        move "Unable to read a record from Macro Library." to w600-message
  1883        move trim(w501-macrolib-filename) to w600-message-2
  1884        perform s000-set-file-error-status
  1885        perform z999-abort
  1886      end-if end-if
  1887
  1888    .s016-read-next-macrolib.
  1889      *> -------------------------------------------------------------------------
  1890      *>  Read the next record from Macro Library.
  1891      *> -------------------------------------------------------------------------
  1892
  1893      read macrolib next end-read
  1894
  1895      if w500-success then
  1896        set w900-more-macrolib to true
  1897
  1898      else if w500-end-of-file then
  1899        set w900-end-of-macrolib to true
  1900
  1901      else
  1902        move "s016-read-next-macrolib" to w600-sub-location
  1903        move "Unable to read a record from Macro Library." to w600-message
  1904        move trim(w501-macrolib-filename) to w600-message-2
  1905        perform s000-set-file-error-status
  1906        perform z999-abort
  1907      end-if end-if
  1908
  1909    .s017-write-macrolib.
  1910      *> -------------------------------------------------------------------------
  1911      *>  Write a record to Macro Library.
  1912      *> -------------------------------------------------------------------------
  1913
  1914      write macrolib-record end-write
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:2  Page   34

  1915
  1916      if not w500-success then
  1917        move "s017-write-macrolib" to w600-sub-location
  1918        move "Unable to write a record to Macro Library." to w600-message
  1919        move trim(w501-macrolib-filename) to w600-message-2
  1920        perform s000-set-file-error-status
  1921        perform z999-abort
  1922      end-if
  1923
  1924    .s018-close-macrolib.
  1925      *> -------------------------------------------------------------------------
  1926      *>  Close Macro Library.
  1927      *> -------------------------------------------------------------------------
  1928
  1929      close macrolib
  1930
  1931      if not w500-success then
  1932        move "s018-close-macrolib" to w600-sub-location
  1933        move "Unable to close MacroLibrary." to w600-message
  1934        move trim(w501-macrolib-filename) to w600-message-2
  1935        perform s000-set-file-error-status
  1936        perform z999-abort
  1937      end-if
  1938
  1939    .s019-open-read-incfile.
  1940      *> -------------------------------------------------------------------------
  1941      *>  Open $INCLUDE file and read the first record.
  1942      *> -------------------------------------------------------------------------
  1943
  1944      open input incfile
  1945
  1946      if not w500-success then
  1947        move "s019-open-read-incfile" to w600-sub-location
  1948        move "Unable to open $INCLUDE file." to w600-message
  1949        move trim(w501-incfile-filename) to w600-message-2
  1950        perform s000-set-file-error-status
  1951        perform z999-abort
  1952      end-if
  1953
  1954      perform s020-read-incfile
  1955
  1956    .s020-read-incfile.
  1957      *> -------------------------------------------------------------------------
  1958      *>  Read the next record from $INCLUDE file.
  1959      *> -------------------------------------------------------------------------
  1960
  1961      read incfile end-read
  1962
  1963      if w500-success then
  1964        set w900-more-incfile to true
  1965
  1966      else if w500-end-of-file then
  1967        set w900-end-of-incfile to true
  1968
  1969      else
  1970        move "s020-read-incfile" to w600-sub-location
  1971        move "Unable to read a record from $INCLUDE file." to w600-message
  1972        move trim(w501-incfile-filename) to w600-message-2
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:2  Page   35

  1973        perform s000-set-file-error-status
  1974        perform z999-abort
  1975      end-if end-if
  1976
  1977    .s021-close-incfile.
  1978      *> -------------------------------------------------------------------------
  1979      *>  Close $INCLUDE file.
  1980      *> -------------------------------------------------------------------------
  1981
  1982      close incfile
  1983
  1984      if not w500-success then
  1985        move "s021-close-incfile" to w600-sub-location
  1986        move "Unable to close $INCLUDE file." to w600-message
  1987        move trim(w501-incfile-filename) to w600-message-2
  1988        perform s000-set-file-error-status
  1989        perform z999-abort
  1990      end-if
  1991
  1992    .s022-delete-workfiles.
  1993      *> -------------------------------------------------------------------------
  1994      *>  Delete the work workfiles.
  1995      *> -------------------------------------------------------------------------
  1996
  1997      call "C$DELETE" using w501-workin-filename, 0 end-call
  1998      call "C$DELETE" using w501-workout-filename, 0 end-call
  1999      call "C$DELETE" using w501-macrolib-filename, 0 end-call
  2000
  2001    .s023-swop-work-file-assignments.
  2002      *> -------------------------------------------------------------------------
  2003      *>  Swop the Work Input and Work Output file assignments.
  2004      *> -------------------------------------------------------------------------
  2005
  2006      move w502-work-file-one to w502-work-file-swap
  2007      move w502-work-file-two to w502-work-file-one
  2008      move w502-work-file-swap to w502-work-file-two
  2009      move spaces to w502-work-file-swap
  2010
  2011    .s024-preprocessor-command.
  2012      *> -------------------------------------------------------------------------
  2013      *>  Change the default characters used in macro definitions and names.
  2014      *> -------------------------------------------------------------------------
  2015
  2016      move trim(workin-record) to workin-record
  2017
  2018      move spaces to w611-new-preprocessor-parms
  2019      unstring workin-record delimited by space or "=" or ","
  2020        into
  2021          w611-not-used-1
  2022          w611-parameter-1 w611-subparameter-1
  2023          w611-parameter-2 w611-subparameter-2
  2024          w611-parameter-3 w611-subparameter-3
  2025          w611-not-used-2
  2026      end-unstring
  2027
  2028      evaluate true
  2029
  2030        when trim(lower-case(w611-parameter-1)) = "keychar"
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:2  Page   36

  2031          move trim(w611-subparameter-1) to w608-keychar
  2032
  2033        when trim(lower-case(w611-parameter-2)) = "keychar"
  2034          move trim(w611-subparameter-2) to w608-keychar
  2035
  2036        when trim(lower-case(w611-parameter-3)) = "keychar"
  2037          move trim(w611-subparameter-3) to w608-keychar
  2038
  2039        when trim(lower-case(w611-parameter-1)) = "parmchar"
  2040          move trim(w611-subparameter-1) to w608-parmchar
  2041
  2042        when trim(lower-case(w611-parameter-2)) = "parmchar"
  2043          move trim(w611-subparameter-2) to w608-parmchar
  2044
  2045        when trim(lower-case(w611-parameter-3)) = "parmchar"
  2046          move trim(w611-subparameter-3) to w608-parmchar
  2047
  2048        when trim(lower-case(w611-parameter-1)) = "delimiter"
  2049          move trim(w611-subparameter-1) to w608-delimiter
  2050
  2051        when trim(lower-case(w611-parameter-2)) = "delimiter"
  2052          move trim(w611-subparameter-2) to w608-delimiter
  2053
  2054        when trim(lower-case(w611-parameter-3)) = "delimiter"
  2055          move trim(w611-subparameter-3) to w608-delimiter
  2056
  2057      end-evaluate
  2058
  2059  >>D display "-- debug:   keychar = [" w608-keychar "] parmchar = [" w608-parmchar "] delimiter = [" w608-delimiter "]" upon stderr end-display
  2060
  2061  *> End of Subroutines.
  2062  *> *****************************************************************************
  2063
  2064  .end program cobolmac.
  2065
  2066  *> *****************************************************************************
  2067  *> Start of Functions.
  2068
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:2  Page   37
Symbols of Module: COBOLMAC (COBOLMAC)
--------------------------------------

Data Section (FILE)              Defn    Locations
--------------------------------+---------------------------------------------------------------


INCFILE                         000112F  000147 001944 001961 001982
INCFILE-RECORD                  000149F  000807 000811 000812 000813 000814 000815 000816 000817
                                         000821
MACROLIB                        000106F  000138 001841 001858 001872 001893 001929
MACROLIB-CODE-LINE              000145F  000994 001021 001237 001243 001244 001244 001250 001269
                                         001270 001270 001276 001313 001315 001331 001365
MACROLIB-DATA                   000144F  001055
MACROLIB-KEY                    000109F  000141
MACROLIB-LINE-NUMBER            000143F  000930 000993 001019 001050 001055 001155
MACROLIB-NAME                   000142F  000929 000992 001020 001052 001154 001159 001258 001282
                                         001306 001323 001337
MACROLIB-RECORD                 000140F  001914
STDIN                           000086F  000122 001651 001667 001687
STDIN-RECORD                    000124F  000739 000743 000744 000745 000746 000747 000748 000749
                                         000753
STDOUT                          000091F  000126 001701 001729
STDOUT-RECORD                   000128F  001398 001715
W500-FILE-STATUS                000089F  000094 000099 000104 000110 000115 000245 001640
W501-INCFILE-FILENAME           000112F  000291 000800 001949 001972 001987
W501-MACROLIB-FILENAME          000106F  000290 000698 000701 001846 001863 001883 001904 001919
                                         001934 001999
W501-WORKIN-FILENAME            000096F  000288 000774 000855 001083 001389 001748 001771 001786
                                         001997
W501-WORKOUT-FILENAME           000101F  000289 000732 000778 000859 001087 001801 001816 001831
                                         001998
WORKIN                          000096F  000130 001743 001760 001781
WORKIN-RECORD                   000132F  000789 000791 000792 000834 000874 000875 000876 000877
                                         000878 000879 000880 000883 000886 000887 000919 000961
                                         001009 001102 001134 001136 001148 001203 001359 001365
                                         001365 001398 002016 002019
WORKOUT                         000101F  000134 001796 001826
WORKOUT-RECORD                  000136F  000750 000753 000818 000821 000834 000881 000887 000961
                                         000965 000968 001102 001228 001231 001249 001250 001275
                                         001276 001289 001292 001304 001307 001314 001315 001330
                                         001331 001344 001347 001363 001367 001811
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:2  Page   38
Symbols of Module: COBOLMAC (COBOLMAC)
--------------------------------------

Data Section (WORKING-STORAGE)   Defn    Locations
--------------------------------+---------------------------------------------------------------


05                              000388W  000415
W100-COPYRIGHT                  000163W
W100-PROGRAM-ID-LINE-01         000158W  000569 000614 001418
W100-PROGRAM-ID-LINE-02         000162W  000570 000615 001419
W100-PROGRAM-ID-LINE-03         000164W  000571 000616 001420
W100-PROGRAM-ID-LINE-04         000165W  000572 000617 001421
W100-PROGRAM-IDENTITY           000157W
W100-PROGRAM-V-UU-FF            000160W
W101-PROGRAM-USAGE              000167W
W101-USAGE-INDEX                000168W  000621 000622 000624
W101-USAGE-LINE                 000199W  000622 000624
W101-USAGE-LINES                000198W
W101-USAGE-TEXT                 000169W  000198
W300-DELIMITER                  000217W  000711
W300-KEYCHAR                    000211W  000709 001136 001203 001359
W300-PARMCHAR                   000214W  000710
W300-PREPROCESSOR-DEFAULTS      000210W
W301-MAX-CALL-PARMS             000221W  001241 001267
W302-ID-MARKER                  000235W  001243 001244 001269 001270
W302-ID-MARKER-VALUES           000224W  000234
W302-ID-MARKERS                 000223W
W302-ID-MARKERS-REDEF           000234W
W500-ALREADY-OPEN               000269W  001566
W500-BOUNDARY-VIOLATION         000263W  001528
W500-CLOSED-WITH-LOCK           000266W  001551
W500-CONFLICT-ATTRIBUTE         000267W  001556
W500-DIRECTORY-FULL-MISSING     000252W  001481
W500-END-OF-FILE                000254W  001485 001672 001765 001898 001966
W500-END-OF-PAGE                000279W  001621
W500-FILE-SHARING               000282W  001629
W500-FILE-STATUS                000245W  001640
W500-I-O-DENIED                 000276W  001612
W500-I-O-LINAGE                 000280W  001625
W500-INCONSISTENT-FILENAME      000262W  001524
W500-INPUT-DENIED               000274W  001600
W500-KEY-EXISTS                 000258W  001508
W500-KEY-INVALID                000257W  001496
W500-KEY-NOT-EXISTS             000259W  001515 001877
W500-NOT-AVAILABLE              000284W  001633
W500-NOT-EXISTS                 000264W  001534
W500-NOT-OPEN                   000270W  001570
W500-OUT-OF-KEY-RANGE           000255W  001490
W500-OUTPUT-DENIED              000275W  001605
W500-PERMANENT-ERROR            000261W  001520
W500-PERMISSION-DENIED          000265W  001539
W500-READ-ERROR                 000273W  001592
W500-READ-NOT-DONE              000271W  001574
W500-RECORD-LOCKED              000278W  001617
W500-RECORD-OVERFLOW            000272W  001584
W500-SUCCESS                    000247W  001452 001653 001669 001689 001703 001717 001731 001745
                                         001762 001783 001798 001813 001828 001843 001860 001874
                                         001895 001916 001931 001946 001963 001984
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:2  Page   39
Symbols of Module: COBOLMAC (COBOLMAC)
--------------------------------------

Data Section (WORKING-STORAGE)   Defn    Locations
--------------------------------+---------------------------------------------------------------


W500-SUCCESS-DUPLICATE          000248W  001456
W500-SUCCESS-INCOMPLETE         000249W  001462
W500-SUCCESS-NO-UNIT            000251W  001475
W500-SUCCESS-OPTIONAL           000250W  001468
W501-INCFILE-FILENAME           000291W  000800 001949 001972 001987
W501-MACROLIB-FILENAME          000290W  000698 000701 001846 001863 001883 001904 001919 001934
                                         001999
W501-WORKIN-FILENAME            000288W  000774 000855 001083 001389 001748 001771 001786 001997
W501-WORKOUT-FILENAME           000289W  000732 000778 000859 001087 001801 001816 001831 001998
W502-WORK-FILE-ONE              000294W  000686 000689 000732 000774 000855 001083 001389 002006
                                         002007
W502-WORK-FILE-SWAP             000296W  002006 002008 002009
W502-WORK-FILE-TWO              000295W  000692 000695 000778 000859 001087 002007 002008
W502-WORK-FILES                 000293W
W600-ERROR-HANDLING             000302W
W600-FILE-STATUS                000307W  000489 000515 000523 000543 000597 000672 000727 000952
                                         001193 001434 001435 001453 001457 001463 001469 001476
                                         001482 001486 001491 001497 001509 001516 001521 001525
                                         001529 001535 001540 001552 001557 001567 001571 001575
                                         001585 001593 001601 001606 001613 001618 001622 001626
                                         001630 001634 001638 001641
W600-LOCATION                   000303W  000487 000512 000520 000540 000591 000670 000718 000723
                                         000733 000754 000758 000763 000766 000775 000779 000801
                                         000822 000826 000835 000839 000844 000847 000856 000860
                                         000865 000868 000888 000896 000901 000904 000907 000931
                                         000955 000962 000971 000995 001002 001022 001026 001039
                                         001044 001057 001066 001076 001084 001088 001103 001107
                                         001112 001115 001124 001156 001191 001233 001251 001255
                                         001277 001279 001294 001309 001316 001320 001332 001334
                                         001349 001370 001390 001392 001399 001401 001406 001408
                                         001425
W600-MESSAGE                    000305W  000488 000495 000513 000521 000541 000592 000595 000671
                                         000726 000946 000949 000959 000967 001192 001428 001655
                                         001677 001691 001705 001719 001733 001747 001770 001785
                                         001800 001815 001830 001845 001862 001882 001903 001918
                                         001933 001948 001971 001986
W600-MESSAGE-2                  000306W  000514 000522 000542 001430 001431 001748 001771 001786
                                         001801 001816 001831 001846 001863 001883 001904 001919
                                         001934 001949 001972 001987
W600-SUB-LOCATION               000304W  001425 001654 001676 001690 001704 001718 001732 001746
                                         001769 001784 001799 001814 001829 001844 001861 001881
                                         001902 001917 001932 001947 001970 001985
W601-ARGV-OPTION                000309W  000555 000556 000558 000594
W601-DEBUG                      000314W  000584
W601-HARD-WARNINGS              000312W  000578
W601-HELP                       000310W  000562
W601-LIST-MACROLIB              000315W  000587
W601-VERBOSE                    000313W  000581
W601-VERSION                    000311W  000567
W602-OS-IS-OTHER                000319W
W602-OS-IS-WINDOWS              000318W
W602-OS-TYPE                    000317W  000535
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:2  Page   40
Symbols of Module: COBOLMAC (COBOLMAC)
--------------------------------------

Data Section (WORKING-STORAGE)   Defn    Locations
--------------------------------+---------------------------------------------------------------


W603-RANDOM-NUMBER              000321W  000682 000688 000694 000700
W605-DEFINE-CODE                000327W  000924 000987 000989 000994 001011 001021
W605-DEFINE-DELIMITER           000329W  000989 000998 001011 001014
W605-DEFINE-LINE-NUMBER         000328W  000986 000993 001018 001019
W605-DEFINE-NAME                000326W  000923 000927 000929 000948 000981 000992 001020
W605-MACRO-DEFINE-WORKAREA      000325W
W605-NOT-USED                   000330W  000922
W606-CALL-COUNT                 000344W  001082 001118 001160
W606-CALL-END                   000334W  001360 001361 001365
W606-CALL-NAME                  000335W  001146 001150 001154 001206 001230 001360
W606-CALL-NAME-DELIMITER        000337W  001146 001150 001173 001206
W606-CALL-NAME-START            000336W  001147 001151
W606-CALL-PARAMETER             000342W
W606-CALL-PARAMETERS            000339W  001210
W606-CALL-PARM                  000343W  001213 001214 001215 001216 001217 001218 001219 001220
                                         001221 001244 001270
W606-CALL-PARM-NUMBER           000341W  001240 001241 001243 001244 001244 001266 001267 001269
                                         001270 001270
W606-CALL-PARMS-COUNT           000340W  001222 001225
W606-CALL-PARMS-LIST            000338W  001207 001211 001230
W606-CALL-START                 000333W  001135 001136 001138 001141 001147 001231 001250 001276
                                         001292 001307 001315 001331 001347 001358 001359 001361
                                         001365
W606-MACRO-CALL-WORKAREA        000332W
W606-NOT-USED                   000349W  001205
W606-POST-CALL                  000347W
W606-POST-CALL-DELIMITER        000348W
W606-PRE-CALL                   000345W
W606-PRE-CALL-DELIMITER         000346W
W607-COMMENT-START              000351W  001133 001134 001141 001141
W608-DELIMITER                  000356W  000711 000987 000998 001009 001014 002049 002052 002055
                                         002059
W608-KEYCHAR                    000354W  000709 000920 002031 002034 002037 002059
W608-PARMCHAR                   000355W  000710 002040 002043 002046 002059
W608-PREPROCESSOR               000353W
W609-INCLUDE-FILE               000360W  000795 000798 000800
W609-INCLUDE-FILE-UNSTRING      000358W
W609-NOT-USED                   000359W  000794
W610-MACROLIB-NAME              000362W  001159 001258 001282 001291 001323 001337 001346
W611-NEW-PREPROCESSOR-PARMS     000364W  002018
W611-NOT-USED-1                 000365W  002021
W611-NOT-USED-2                 000372W  002025
W611-PARAMETER-1                000366W  002022 002030 002039 002048
W611-PARAMETER-2                000368W  002023 002033 002042 002051
W611-PARAMETER-3                000370W  002024 002036 002045 002054
W611-SUBPARAMETER-1             000367W  002022 002031 002040 002049
W611-SUBPARAMETER-2             000369W  002023 002034 002043 002052
W611-SUBPARAMETER-3             000371W  002024 002037 002046 002055
W900-END-OF-INCFILE             000402W  000805 001967
W900-END-OF-MACROLIB            000398W  001048 001259 001263 001283 001324 001328 001338 001899
W900-END-OF-STDIN               000390W  000721 000737 001673
W900-END-OF-WORKIN              000394W  000787 000872 001094 001396 001766
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:2  Page   41
Symbols of Module: COBOLMAC (COBOLMAC)
--------------------------------------

Data Section (WORKING-STORAGE)   Defn    Locations
--------------------------------+---------------------------------------------------------------


W900-MORE-INCFILE               000401W  001964
W900-MORE-MACROLIB              000397W  001896
W900-MORE-STDIN                 000389W  001670
W900-MORE-WORKIN                000393W  001763
W901-OS-IS-LINUX                000406W  000537 000635
W901-OS-IS-UNKNOWN              000405W
W901-OS-IS-WINDOWS              000407W  000539 000652
W902-LAST-COMMAND               000411W  000553 000603
W902-MORE-COMMANDS              000410W
W903-STDERR-NOT-REDIRECTED      000424W
W903-STDERR-REDIRECTED          000425W  000649 000666 001037
W903-STDIN-NOT-REDIRECTED       000416W  000511
W903-STDIN-REDIRECTED           000417W  000639 000656
W903-STDOUT-NOT-REDIRECTED      000420W  000519
W903-STDOUT-REDIRECTED          000421W  000644 000661
W904-HARD-WARNINGS              000429W  000491 000579 000954
W904-SOFT-WARNINGS              000428W
W905-DEFINE-DELIMITER-FOUND     000432W  000999 001007 001015
W905-DEFINE-DELIMITER-NOT-FOUND 000433W  000984 001025
W906-MACROLIB-KEY-FOUND         000436W  000934 001158 001875
W906-MACROLIB-KEY-NOT-FOUND     000437W  001878
W907-EXCLUDE-MACRO-BEGIN-END    000440W
W907-INCLUDE-MACRO-BEGIN-END    000441W  000582 001227 001288 001303 001343
W908-MORE-MACRO-CALLS           000444W  000483
W908-NO-MORE-MACRO-CALLS        000445W  001080 001119
W909-INTERNAL-DEBUG-OFF         000448W
W909-INTERNAL-DEBUG-ON          000449W  000585 001424
W910-HIDE-MACROLIB              000452W
W910-LIST-MACROLIB              000453W  000588 000910
W911-DEFINED-MACROS             000457W  000482 000910 000983
W911-NO-DEFINED-MACROS          000456W
W912-MORE-INCLUDE-FILES         000461W  000740 000808
W912-NO-INCLUDE-FILES           000460W  000478 000784
W913-MACRO-CALL-FOUND           000465W  001098 001161
W913-MACRO-CALL-NOT-FOUND       000464W  001139 001142 001164
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:2  Page   42
Variable Tested [S]            Symbol (88-Conditions)
--------------------------------------------------------------


05                              W900-MORE-STDIN
05                              W900-END-OF-STDIN
FILLER                          W900-MORE-WORKIN
FILLER                          W900-END-OF-WORKIN
FILLER                          W900-MORE-MACROLIB
FILLER                          W900-END-OF-MACROLIB
FILLER                          W900-MORE-INCFILE
FILLER                          W900-END-OF-INCFILE
FILLER                          W901-OS-IS-WINDOWS
FILLER                          W905-DEFINE-DELIMITER-FOUND
FILLER                          W905-DEFINE-DELIMITER-NOT-FOUND
FILLER                          W906-MACROLIB-KEY-FOUND
FILLER                          W906-MACROLIB-KEY-NOT-FOUND
FILLER                          W908-MORE-MACRO-CALLS
FILLER                          W908-NO-MORE-MACRO-CALLS
W500-FILE-STATUS                W500-SUCCESS
W500-FILE-STATUS                W500-SUCCESS-DUPLICATE
W500-FILE-STATUS                W500-SUCCESS-INCOMPLETE
W500-FILE-STATUS                W500-SUCCESS-OPTIONAL
W500-FILE-STATUS                W500-SUCCESS-NO-UNIT
W500-FILE-STATUS                W500-DIRECTORY-FULL-MISSING
W500-FILE-STATUS                W500-END-OF-FILE
W500-FILE-STATUS                W500-OUT-OF-KEY-RANGE
W500-FILE-STATUS                W500-KEY-INVALID
W500-FILE-STATUS                W500-KEY-EXISTS
W500-FILE-STATUS                W500-KEY-NOT-EXISTS
W500-FILE-STATUS                W500-PERMANENT-ERROR
W500-FILE-STATUS                W500-INCONSISTENT-FILENAME
W500-FILE-STATUS                W500-BOUNDARY-VIOLATION
W500-FILE-STATUS                W500-NOT-EXISTS
W500-FILE-STATUS                W500-PERMISSION-DENIED
W500-FILE-STATUS                W500-CLOSED-WITH-LOCK
W500-FILE-STATUS                W500-CONFLICT-ATTRIBUTE
W500-FILE-STATUS                W500-ALREADY-OPEN
W500-FILE-STATUS                W500-NOT-OPEN
W500-FILE-STATUS                W500-READ-NOT-DONE
W500-FILE-STATUS                W500-RECORD-OVERFLOW
W500-FILE-STATUS                W500-READ-ERROR
W500-FILE-STATUS                W500-INPUT-DENIED
W500-FILE-STATUS                W500-OUTPUT-DENIED
W500-FILE-STATUS                W500-I-O-DENIED
W500-FILE-STATUS                W500-RECORD-LOCKED
W500-FILE-STATUS                W500-END-OF-PAGE
W500-FILE-STATUS                W500-I-O-LINAGE
W500-FILE-STATUS                W500-FILE-SHARING
W500-FILE-STATUS                W500-NOT-AVAILABLE
W601-ARGV-OPTION                W601-HELP
W601-ARGV-OPTION                W601-VERSION
W601-ARGV-OPTION                W601-HARD-WARNINGS
W601-ARGV-OPTION                W601-VERBOSE
W601-ARGV-OPTION                W601-DEBUG
W601-ARGV-OPTION                W601-LIST-MACROLIB
W602-OS-TYPE                    W602-OS-IS-WINDOWS
W602-OS-TYPE                    W602-OS-IS-OTHER
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:2  Page   43
Variable Tested                Symbol (88-Conditions) [S]
--------------------------------------------------------------


W500-FILE-STATUS                W500-ALREADY-OPEN
W500-FILE-STATUS                W500-BOUNDARY-VIOLATION
W500-FILE-STATUS                W500-CLOSED-WITH-LOCK
W500-FILE-STATUS                W500-CONFLICT-ATTRIBUTE
W500-FILE-STATUS                W500-DIRECTORY-FULL-MISSING
W500-FILE-STATUS                W500-END-OF-FILE
W500-FILE-STATUS                W500-END-OF-PAGE
W500-FILE-STATUS                W500-FILE-SHARING
W500-FILE-STATUS                W500-I-O-DENIED
W500-FILE-STATUS                W500-I-O-LINAGE
W500-FILE-STATUS                W500-INCONSISTENT-FILENAME
W500-FILE-STATUS                W500-INPUT-DENIED
W500-FILE-STATUS                W500-KEY-EXISTS
W500-FILE-STATUS                W500-KEY-INVALID
W500-FILE-STATUS                W500-KEY-NOT-EXISTS
W500-FILE-STATUS                W500-NOT-AVAILABLE
W500-FILE-STATUS                W500-NOT-EXISTS
W500-FILE-STATUS                W500-NOT-OPEN
W500-FILE-STATUS                W500-OUT-OF-KEY-RANGE
W500-FILE-STATUS                W500-OUTPUT-DENIED
W500-FILE-STATUS                W500-PERMANENT-ERROR
W500-FILE-STATUS                W500-PERMISSION-DENIED
W500-FILE-STATUS                W500-READ-ERROR
W500-FILE-STATUS                W500-READ-NOT-DONE
W500-FILE-STATUS                W500-RECORD-LOCKED
W500-FILE-STATUS                W500-RECORD-OVERFLOW
W500-FILE-STATUS                W500-SUCCESS
W500-FILE-STATUS                W500-SUCCESS-DUPLICATE
W500-FILE-STATUS                W500-SUCCESS-INCOMPLETE
W500-FILE-STATUS                W500-SUCCESS-NO-UNIT
W500-FILE-STATUS                W500-SUCCESS-OPTIONAL
W601-ARGV-OPTION                W601-DEBUG
W601-ARGV-OPTION                W601-HARD-WARNINGS
W601-ARGV-OPTION                W601-HELP
W601-ARGV-OPTION                W601-LIST-MACROLIB
W601-ARGV-OPTION                W601-VERBOSE
W601-ARGV-OPTION                W601-VERSION
W602-OS-TYPE                    W602-OS-IS-OTHER
W602-OS-TYPE                    W602-OS-IS-WINDOWS
FILLER                          W900-END-OF-INCFILE
FILLER                          W900-END-OF-MACROLIB
05                              W900-END-OF-STDIN
FILLER                          W900-END-OF-WORKIN
FILLER                          W900-MORE-INCFILE
FILLER                          W900-MORE-MACROLIB
05                              W900-MORE-STDIN
FILLER                          W900-MORE-WORKIN
FILLER                          W901-OS-IS-WINDOWS
FILLER                          W905-DEFINE-DELIMITER-FOUND
FILLER                          W905-DEFINE-DELIMITER-NOT-FOUND
FILLER                          W906-MACROLIB-KEY-FOUND
FILLER                          W906-MACROLIB-KEY-NOT-FOUND
FILLER                          W908-MORE-MACRO-CALLS
FILLER                          W908-NO-MORE-MACRO-CALLS
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:2  Page   44
Functions                        Defn    Locations
--------------------------------+---------------------------------------------------------------


CURRENT-DATE                    000683I
LOWER-CASE                      002030I  002033 002036 002039 002042 002045 002048 002051 002054
MODULE-FORMATTED-DATE           000573I
SUBSTITUTE                      001244I  001270
TRIM                            000791I  000798 000800 000927 000929 000948 000959 000967 000981
                                         000992 001020 001052 001055 001154 001230 001230 001244
                                         001270 001291 001306 001346 001360 001365 001425 001425
                                         001428 001430 001431 001434 001435 001748 001771 001786
                                         001801 001816 001831 001846 001863 001883 001904 001919
                                         001934 001949 001972 001987 002016 002030 002031 002033
                                         002034 002036 002037 002039 002040 002042 002043 002045
                                         002046 002048 002049 002051 002052 002054 002055
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:2  Page   45
Procedure                        Defn    Locations
--------------------------------+---------------------------------------------------------------


A000-INITIALISE                 000502P  000474
A100-GET-OPERATING-SYSTEM-TYPE  000530P  000507
A200-GET-COMMAND-LINE-OPTIONS   000547P  000508
A210-DISPLAY-PROGRAM-USAGE      000608P  000563
A300-CHECK-STDXXX-REDIRECT      000628P  000509
A400-GENERATE-WORK-FILENAMES    000677P  000527
A500-INITIALISE-DEFAULTS        000704P  000528
B000-COPY-STDIN-TO-WORKOUT      000713P  000475
C000-LOAD-INCLUDE-FILES         000769P  000477
COBOLMAC                        002064P
COBOLMAC-MAINLINE               000469P
D000-LOAD-DEFINE-COMMANDS       000850P  000480
D100-PROCESS-DEFINE-COMMAND     000914P  000892
D110-FOUND-DUPLICATE-MACRO      000941P  000935
D120-ADD-MACRO-TO-LIBRARY       000976P  000938
D200-LIST-MACROLIB              001032P  000911
E000-EXPAND-MACRO-CALLS         001071P  000484
E100-FIND-MACRO-CALL            001127P  001096
E200-CONVERT-CALL-TO-CODE       001168P  001099
E210-MACRO-WITH-PARAMETERS      001198P  001176
E220-MACRO-WITHOUT-PARAMETERS   001298P  001179
E230-MACRO-AS-A-CONSTANT        001353P  001182 001185 001188
INSTR                           000739P  000743 000744 000745 000746 000747 000748 000749 000789
                                         000807 000811 000812 000813 000814 000815 000816 000817
                                         000874 000875 000876 000877 000878 000879 000880 000883
                                         000886 001134 001136 001243 001269 001359
S000-SET-FILE-ERROR-STATUS      001445P  001656 001678 001692 001706 001720 001734 001749 001772
                                         001787 001802 001817 001832 001884 001905 001920 001935
                                         001950 001973 001988
S001-OPEN-READ-STDIN            001646P  000719
S002-READ-STDIN                 001662P  000759 001660
S003-CLOSE-STDIN                001682P  000724 000767
S004-OPEN-STDOUT                001696P  001393
S005-WRITE-STDOUT               001710P  001400
S006-CLOSE-STDOUT               001724P  001407
S007-OPEN-READ-WORKIN           001738P  000776 000857 001085 001391
S008-READ-WORKIN                001755P  000840 000897 001003 001027 001108 001402 001753
S009-CLOSE-WORKIN               001776P  000845 000908 001116 001409
S010-OPEN-WORKOUT               001791P  000734 000780 000861 001089
S011-WRITE-WORKOUT              001806P  000755 000823 000836 000889 000963 000972 001104 001234
                                         001252 001278 001295 001310 001317 001333 001350 001371
S012-CLOSE-WORKOUT              001821P  000764 000848 000902 001113
S013-CREATE-MACROLIB            001836P  000866
S014-OPEN-MACROLIB              001853P  000869 001040 001077
S015-READ-KEY-MACROLIB          001867P  000932 001157
S016-READ-NEXT-MACROLIB         001888P  001045 001058 001256 001280 001321 001335
S017-WRITE-MACROLIB             001909P  000996 001023
S018-CLOSE-MACROLIB             001924P  000905 001067 001125 001851
S019-OPEN-READ-INCFILE          001939P  000802
S020-READ-INCFILE               001956P  000827 001954
S021-CLOSE-INCFILE              001977P  000831
S022-DELETE-WORKFILES           001992P  001379 001416
S023-SWOP-WORK-FILE-ASSIGNMENTS 002001P  000782 000863 001091
S024-PREPROCESSOR-COMMAND       002011P  000884
STDERR                          000495P  000568 000569 000570 000571 000572 000573 000574 000613
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:2  Page   46
Procedure                        Defn    Locations
--------------------------------+---------------------------------------------------------------


                                         000614 000615 000616 000617 000618 000624 000798 000927
                                         000959 000981 001042 001043 001051 001052 001055 001062
                                         001063 001064 001417 001418 001419 001420 001421 001422
                                         001425 001428 001431 001435 001438 002059
Z000-FINALISE                   001373P  000500
Z100-COPY-WORKIN-TO-STDOUT      001384P  001378
Z999-ABORT                      001411P  000492 000516 000524 000544 000598 000673 000728 000956
                                         001194 001657 001679 001693 001707 001721 001735 001750
                                         001773 001788 001803 001818 001833 001847 001864 001885
                                         001906 001921 001936 001951 001974 001989
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:2  Page   47
Unreferenced Working Storage Symbols


W100-COPYRIGHT                  000163W
W100-PROGRAM-IDENTITY           000157W
W100-PROGRAM-V-UU-FF            000160W
W101-PROGRAM-USAGE              000167W
W101-USAGE-LINES                000198W
W300-PREPROCESSOR-DEFAULTS      000210W
W302-ID-MARKERS                 000223W
W302-ID-MARKERS-REDEF           000234W
W502-WORK-FILES                 000293W
W600-ERROR-HANDLING             000302W
W602-OS-IS-OTHER                000319W
W602-OS-IS-WINDOWS              000318W
W605-MACRO-DEFINE-WORKAREA      000325W
W606-CALL-PARAMETER             000342W
W606-MACRO-CALL-WORKAREA        000332W
W606-POST-CALL                  000347W
W606-POST-CALL-DELIMITER        000348W
W606-PRE-CALL                   000345W
W606-PRE-CALL-DELIMITER         000346W
W608-PREPROCESSOR               000353W
W609-INCLUDE-FILE-UNSTRING      000358W
W901-OS-IS-UNKNOWN              000405W
W902-MORE-COMMANDS              000410W
W903-STDERR-NOT-REDIRECTED      000424W
W904-SOFT-WARNINGS              000428W
W907-EXCLUDE-MACRO-BEGIN-END    000440W
W909-INTERNAL-DEBUG-OFF         000448W
W910-HIDE-MACROLIB              000452W
W911-NO-DEFINED-MACROS          000456W
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:2  Page   48
Unreferenced Procedures


COBOLMAC                        002064P
COBOLMAC-MAINLINE               000469P



ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:2  Page   49

  2069  identification division.
  2070
  2071    function-id.                         instr.
  2072
  2073  *> -----------------------------------------------------------------------------
  2074  *> Purpose:          An InStr function in COBOL for COBOL.
  2075  *>
  2076  *> Usage:            found-pos = instr(source-str, search-str)
  2077  *>
  2078  *> Parameters:
  2079  *>   source-str      The string to be searched starting at character 1.
  2080  *>   search-str      The string to search for.
  2081  *>
  2082  *> Returns:
  2083  *>   found-pos       The char position in source-str where search-str starts.
  2084  *>                   Returns zero if search-str is not found.
  2085  *>
  2086  *> Notes:            Before the search is started the following is done:
  2087  *>                   1) Trailing spaces removed from source string.
  2088  *>                   2) Leading and trailing spaces removed from search string.
  2089  *>                   3) Source and search strings are case downshifted.
  2090  *> -----------------------------------------------------------------------------
  2091
  2092  environment division.
  2093
  2094    configuration section.
  2095
  2096      repository.
  2097        function all intrinsic.
  2098
  2099  data division.
  2100
  2101    working-storage section.
  2102      01  source-lstr                    pic x(256).
  2103      01  source-length                  pic s9(04) comp.
  2104      01  search-lstr                    pic x(256).
  2105      01  search-length                  pic s9(04) comp.
  2106      01  start-index                    pic s9(04) comp value zero.
  2107      01  stop-index                     pic s9(04) comp value zero.
  2108
  2109    linkage section.
  2110      01  source-str                     pic x(001) any length.
  2111      01  search-str                     pic x(001) any length.
  2112      01  found-pos                      pic s9(04) comp.
  2113
  2114  procedure division using source-str, search-str returning found-pos.
  2115
  2116    instr-mainline.
  2117
  2118      *> Downshift the source and search strings and get their lengths.
  2119      move lower-case(source-str) to source-lstr
  2120      move length(trim(source-lstr, trailing)) to source-length
  2121      move lower-case(search-str) to search-lstr
  2122      move length(trim(search-lstr)) to search-length
  2123
  2124      *> Return zero if search string longer than source string.
  2125      if search-length > source-length then
  2126        move zero to found-pos
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:2  Page   50

  2127        goback
  2128      end-if
  2129
  2130      *> Return one if the search and source strings are the same.
  2131      if trim(search-lstr) = trim(source-lstr) then
  2132        move 1 to found-pos
  2133        goback
  2134      end-if
  2135
  2136      *> Calculate where the stop index is (stops us getting a bounds violation).
  2137      compute stop-index
  2138        = (source-length - search-length) + 1
  2139      end-compute
  2140
  2141      *> Loop until we find the search string or we hit the stop index.
  2142      perform
  2143        varying start-index from 1 by 1
  2144        until (source-lstr(start-index:search-length) = search-lstr(1:search-length))
  2145           or (start-index = stop-index)
  2146
  2147        *> Nothing to do here as it's all done in the perform statement.
  2148
  2149      end-perform
  2150
  2151      *> If we've found the search string then return where.
  2152      if start-index < stop-index then
  2153        move start-index to found-pos
  2154        goback
  2155      end-if
  2156
  2157      *> If we get here then the search string was not found.
  2158      move zero to found-pos
  2159      goback
  2160
  2161  .end function instr.
  2162
  2163  *> End of source code.
  2164  *> *****************************************************************************
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:2  Page   51
Symbols of Module: COBOLMAC (COBOLMAC)
--------------------------------------

Data Section (WORKING-STORAGE)   Defn    Locations
--------------------------------+---------------------------------------------------------------


SEARCH-LENGTH                   002105W  002122 002125 002138 002144 002144
SEARCH-LSTR                     002104W  002121 002122 002131 002144
SOURCE-LENGTH                   002103W  002120 002125 002138
SOURCE-LSTR                     002102W  002119 002120 002131 002144
START-INDEX                     002106W  002143 002144 002145 002152 002153
STOP-INDEX                      002107W  002137 002145 002152
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:2  Page   52
Symbols of Module: COBOLMAC (COBOLMAC)
--------------------------------------

Data Section (LINKAGE)           Defn    Locations
--------------------------------+---------------------------------------------------------------


FOUND-POS                       002112K  002114 002126 002132 002153 002158
SEARCH-STR                      002111K  002114 002121
SOURCE-STR                      002110K  002114 002119
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:2  Page   53
Functions                        Defn    Locations
--------------------------------+---------------------------------------------------------------


LOWER-CASE                      002119I  002121
TRIM                            002120I  002122 002131 002131
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:2  Page   54
Procedure                        Defn    Locations
--------------------------------+---------------------------------------------------------------


INSTR                           002161P
INSTR-MAINLINE                  002116P
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:2  Page   55
Unreferenced Working Storage Symbols


None
ACS Cobol Xref v1.01.15          Dictionary File for COBOLMAC    21/05/15  15:34:09:2  Page   56
Unreferenced Procedures


INSTR                           002161P
INSTR-MAINLINE                  002116P

GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0001

LINE    PG/LN  A...B............................................................SEQUENCE

000001         >>source free
000002   Identification division.
000003   program-id.            cobxref.
000004  *>author.               Vincent Bryan Coen, Applewood Computers,
000005  *>                      17 Stag Green Avenue, Hatfield, Herts, AL9 5EB, UK.
000006  *>Date-Written.         28 July 1983 with code going back to 1967.
000007  *>Date-Rewriten.        10 March 2007 with code going back to 1983.
000008  *>Date-Compiled.        Today & Dont forget to update prog-name for builds.
000009  *>Security.             Copyright (C) 1967-2017, Vincent Bryan Coen.
000010  *>                      Distributed under the GNU General Public License
000011  *>                      v2.0. Only. See the file COPYING for details but
000012  *>                      for use within GNUCobol ONLY.
000013  *>
000014  *> Usage.               Cobol Cross Referencer for GNU Cobol from v1.1
000015  *>                      but code reflects for v2.n.
000016  *>                      This version (v1.01.nn) if for auto execution via
000017  *>                      cobc when using the -X parameter and can be used
000018  *>                      as a stand alone tool see the readme and manual
000019  *>                      for more parameter details but can be run as
000020  *>                      cobxref sourcefilename.i
000021  *>                      ===================== WARNING =====================
000022  *>                      Must only be used after running the source file
000023  *>                      that is to be cross referenced, through the compiler
000024  *>                      that results in an warning and error free run.
000025  *>                      ^^^^^^^^^^^^^^^^^^^^^ WARNING ^^^^^^^^^^^^^^^^^^^^^
000026  *>**
000027  *> Calls.               get-reserved-lists which is at end of source file.
000028  *>                      compile with:
000029  *>                       cobc -x cobxref.cbl
000030  *>                       ===================
000031  *>**
000032  *> Changes.             See Changelog & Prog-Name.
000033  *>
000034  *> Copyright Notice.
000035  *>*****************
000036  *>
000037  *> This file/program is part of Cobxref AND GNU Cobol and is copyright
000038  *> (c) Vincent B Coen 1967-2017. This version bears no resemblance to the
000039  *> original versions running on ICL 1501/1901 and IBM 1401 & 360/30 in the
000040  *> 1960's and 70's.
000041  *>
000042  *> A version for running with MVS 3.8J and ANSI Cobol is available for those
000043  *> users running IBM emulation with Hercules.
000044  *>  This uses the original code from the 60s and will ONLY run with ANSI Cobol.
000045  *>
000046  *> This program is free software; you can redistribute it and/or modify it
000047  *> under the terms of the GNU General Public License as published by the
000048  *> Free Software Foundation; version 3 (and later) ONLY within GNUCobol,
000049  *> providing the package continues to be issued or marketed as GNUCobol and
000050  *> is available FREE OF CHARGE AND WITH FULL SOURCE CODE.
000051  *>
000052  *> It cannot be included or used with any other Compiler without the
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0002

LINE    PG/LN  A...B............................................................SEQUENCE

000053  *> written Authority by the copyright holder, Vincent B Coen. See the
000054  *> manual for contact details.
000055  *>
000056  *> Cobxref is distributed in the hope that it will be useful, but WITHOUT
000057  *> ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
000058  *> FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
000059  *> for more details. If it breaks, you own both pieces but I will endevor
000060  *> to fix it, providing you tell me about the problem.
000061  *>
000062  *> You should have received a copy of the GNU General Public License along
000063  *> with Cobxref; see the file COPYING.  If not, write to the Free Software
000064  *> Foundation, 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.
000065  *>*************************************************************************
000066  *>
000067   environment division.
000068   configuration section.
000069   source-computer.      linux.
000070   object-computer.      linux.
000071   special-names.                                   *> only here to help test cobxref
000072       switch-1 is sn-Test-1 on snt1-on off snt1-off
000073       currency sign is "£".
000074   input-Output section.
000075   file-control.
000076  *>
000077  *>  These 2 are needed as OC (& many others) does NOT support real
000078  *>    variable length tables and they can get very large
000079  *>            They are also very handy for debugging also during test
000080  *>            these two files are not deleted at EOJ but code is present
000081  *>            currently remarked out to do so.
000082  *>            These files may well be created at /tmp or /home/username/tmp
000083  *>            depending on your system settings.
000084  *>
000085       select   Supplemental-Part2-In assign Supp-File-2
000086                organization line sequential.
000087  *>
000088       select   Supplemental-Part1-Out assign Supp-File-1
000089                organization line sequential.
000090  *>
000091       select   Source-Listing assign Print-FileName
000092                organization   line sequential
000093                file status    FS-Reply.
000094  *>
000095       select   SourceInput  assign SourceFileName
000096                organization line sequential
000097                file status  FS-Reply.
000098  *>
000099       select   SortFile assign Sort1tmp.
000100  *>
000101   i-o-control.
000102  *>
000103       same record area for Supplemental-Part1-Out
000104                            Supplemental-Part2-In.
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0003

LINE    PG/LN  A...B............................................................SEQUENCE

000105  *>
000106   data division.
000107   file section.
000108   fd  Source-Listing.
000109   01  Source-List.
000110       03  sl-Gen-RefNo1     pic z(5)9bb.
000111       03  SourceOutput      pic x(1024).
000112  *>
000113   01  PrintLine.
000114       02  XrDataName        pic x(32).
000115       02  XrDefn            pic 9(6).
000116       02  XrType            pic x.
000117       02  XrCond            pic x.
000118       02  filler            pic x.
000119       02  filler     occurs 8.
000120         03  XrReference     pic 9(6).
000121         03  filler          pic x.
000122       02  filler            pic x(62).
000123  *>
000124   01  filler.
000125       03  filler            pic x(42).
000126       03  PL-Prog-Name      pic x(32).
000127  *>
000128   01  PrintLine2.
000129       03  P-Conditions      pic x(32).
000130       03  P-Variables       pic x(32).
000131  *>
000132   fd  SourceInput.
000133   01  SourceRecIn           pic x(1024).
000134  *>
000135   fd  Supplemental-Part1-Out.
000136   01  SortRecord.
000137       03  SkaDataName       pic x(32).
000138       03  SkaWSorPD         pic 9.
000139       03  SkaWSorPD2        pic 9.
000140       03  SkaRefNo          pic 9(6).
000141  *>
000142   fd  Supplemental-Part2-In.
000143   01  filler                pic x(40).
000144  *>
000145   sd  SortFile.
000146   01  filler.
000147       03  SdSortKey         pic x(40).
000148  *>
000149   working-storage section.
000150   77  Prog-Name             pic x(13) value "Xref v1.01.21".
000151   77  String-Pointer        Binary-long  value 1.
000152   77  String-Pointer2       Binary-long  value 1.
000153   77  S-Pointer             Binary-long  value zero.
000154   77  S-Pointer2            Binary-long  value zero.
000155   77  Line-Count            Binary-char  value 70.
000156   77  Compiler-Line-Cnt     Binary-char  value 55.
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0004

LINE    PG/LN  A...B............................................................SEQUENCE

000157   77  Page-No               Binary-char  value zero.
000158   77  ws-Return-Code        binary-char  value zero.
000159   77  Word-Length           Binary-long  value zero.
000160   77  Line-End              Binary-long  value zero.
000161   77  Source-Line-End       Binary-long  value zero.
000162   77  Source-Words          Binary-long  value zero.
000163   77  F-Pointer             Binary-long  value zero.
000164   77  HoldFoundWord2-Size   binary-long  value zero.
000165   77  HoldFoundWord2-Type   binary-long  value zero.
000166   77  a                     Binary-Long  value zero.
000167   77  a1                    Binary-Long  value zero.
000168   77  a2                    Binary-char  value zero.
000169   77  b                     Binary-Long  value zero.
000170   77  c                     Binary-Long  value zero.
000171   77  d                     Binary-Long  value zero.
000172   77  e                     Binary-Long  value zero.
000173   77  s                     Binary-Long  value zero.
000174   77  s2                    Binary-Long  value zero.
000175   77  t                     Binary-Long  value zero.
000176   77  y                     Binary-Long  value zero.
000177   77  z                     Binary-Long  value zero.
000178   77  z2                    Binary-Long  value zero.
000179   77  z3                    Binary-Long  value zero.
000180   77  q                     Binary-Long  value zero.
000181   77  q2                    Binary-Long  value zero.
000182  *>
000183  *> System parameters control how xref works or reports
000184  *>  May be add extra func for default.conf ?
000185  *>
000186   77  sw-1                  pic x           value "N".
000187  *>  command line input -G
000188    88 All-Reports                           value "A".
000189   77  sw-2                  pic x           value "Y".
000190    88 List-Source                           value "Y".
000191   77  sw-4                  pic 9           value zero.
000192    88  Dump-Reserved-Words                  value 1.
000193   77  sw-5                  pic x           value "N".
000194    88 We-Are-Testing                        value "Y".
000195   77  sw-6                  pic 9           value zero.
000196    88  Reports-In-Lower                     value 1.
000197   77  sw-7                  pic 9           value zero.
000198    88  Append-Reports                       value 1.
000199  *>
000200  *> Switches used during processing
000201  *>
000202  *> And these two are the size of any Cobol word currently set
000203  *> to value specified in PL22.4 20xx
000204  *>
000205   78  Cobol-Word-Size                       value 31.
000206   78  CWS                                   value 31.
000207  *>
000208   77  sw-Source-Eof         pic 9           value 0.
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0005

LINE    PG/LN  A...B............................................................SEQUENCE

000209    88 Source-Eof                            value 1.
000210  *> got end of program
000211   77  sw-End-Prog           pic 9           value zero.
000212    88 End-Prog                              value 1.
000213  *> Had end of program (nested) - Confused yet? you will be!
000214   77  sw-Had-End-Prog       pic 9           value zero.
000215    88 Had-End-Prog                          value 1.
000216  *> We have found a Global verb
000217   77  sw-Git                pic 9           value zero.
000218    88 Global-Active                         value 1.
000219  *>  Multi modules in one source file flag
000220   77  sw-Nested             pic 9           value zero.
000221    88 Have-Nested                           value 1.
000222  *>
000223   77  Arg-Number            pic 99          value zero.
000224   77  Gen-RefNo1            pic 9(6)        value zero.
000225   77  Build-Number          pic 99          value zero.
000226   77  GotEndProgram         pic 9           value zero.
000227   77  GotPicture            pic 9           value zero.
000228   77  WasPicture            pic 9           value zero.
000229   77  Currency-Sign         pic X           value "£".
000230   77  HoldWSorPD            pic 9           value 0.
000231   77  HoldWSorPD2           pic 9           value 0.
000232   77  Word-Delimit          pic x           value space.
000233   77  Word-Delimit2         pic x           value space.
000234   77  OS-Delimiter          pic x           value space.
000235   77  GotASection           pic x           value space.
000236  *> section name + 8 chars
000237   77  HoldFoundWord         pic x(40)       value spaces.
000238   77  HoldFoundWord2        pic x(40)       value spaces.
000239   77  SaveSkaDataName       pic x(32)       value spaces.
000240   77  Saved-Variable        pic x(32)       value spaces.
000241   77  SaveSkaWSorPD         pic 9           value zero.
000242   77  SaveSkaWSorPD2        pic 9           value zero.
000243   77  WS-Anal1              pic 9           value zero.
000244   77  FS-Reply              pic 99          value zeros.
000245   77  SourceFileName        pic x(1024)     value spaces.
000246   77  Print-FileName        pic x(1024)     value spaces.
000247   77  Print-FileName-2      pic x(1024)     value spaces.
000248   77  Prog-BaseName         pic x(1024)     value spaces.
000249  *>
000250  *> In theory Linux can go to 4096 and Windoz 32,767 chars
000251  *>
000252   77  Temp-Pathname         pic x(1024)     value spaces.
000253   77  Supp-File-1           pic x(1036)     value spaces.
000254   77  Supp-File-2           pic x(1036)     value spaces.
000255   77  Sort1tmp              pic x(1036)     value spaces.
000256   77  Global-Current-Word   pic x(32)       value spaces.
000257   77  Global-Current-Refno  pic 9(6)        value zero.
000258   77  Global-Current-Level  pic 99          value zero.
000259   77  FoundFunction         pic 9           value zero.
000260  *>
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0006

LINE    PG/LN  A...B............................................................SEQUENCE

000261   01  HoldID                pic x(32)       value spaces.
000262   01  HoldID-Module         pic x(32)       value spaces.
000263  *>
000264  *>  Used to calculate listing file time
000265  *>
000266   01  WS-Date2              pic 9(8)        value zero.  *> YYYYMMDD
000267   01  WS-Time2              pic 9(8)        value zero.  *> HHMMSSNN
000268   01  filler redefines WS-Time2.
000269       03  filler            pic 9(6).
000270       03  WS-MS             pic 99.                      *> to clear to 00
000271   01  WS-Temp-Time          pic 9(8)   comp value zero.
000272   01  WS-FileInfo                           value zero.
000273       03  WS-FileSize       pic 9(18)  comp.
000274       03  WS-Mod-YYYYMMDD   pic 9(8)   comp.
000275       03  WS-Mod-HHMMSS00   pic 9(8)   comp.
000276  *>
000277   01  SourceInWS.
000278       03  Sv1what           pic x(16).
000279       03  filler            pic x(1008).
000280  *>
000281   01  wsFoundWord.
000282       03  wsf1-3.
000283        04  wsf1-2.
000284         05  wsf1-1          pic x.
000285             88  wsf1-1-Number    values 0 1 2 3 4 5 6 7 8 9.
000286         05  filler          pic x.
000287        04  filler           pic x.
000288       03  filler            pic x(1021).
000289  *>
000290   01  wsFoundWord2 redefines wsFoundWord.
000291       03  wsf3-1            pic 9.                      *> only used for Build-Number
000292           88 wsf3-1-Numeric           values 0 thru 9.
000293       03  wsf3-2            pic 9.                      *>   processing
000294       03  filler            pic x(1022).
000295  *>
000296   01  wsFoundNewWord        pic x(32).
000297   01  wsFoundNewWord2       pic x(32).
000298   01  wsFoundNewWord3       pic x(1024).  *> max size quot lit 1 lin
000299   01  wsFoundNewWord4       pic x(32).
000300   01  wsFoundNewWord5       pic x(1024). *> space removal source i/p
000301  *>
000302   01  HDR1.
000303       03  filler            pic X(10) value "ACS Cobol ".
000304       03  H1Prog-Name       pic x(23) value spaces.
000305  *>     03  H1Prog-Name       pic x(4)  value spaces.
000306  *>     03  filler            pic x     value "(".
000307  *>     03  H1-dd             pic 99.
000308  *>     03  filler            pic x     value "/".
000309  *>     03  H1-MM             pic 99.
000310  *>     03  filler            pic x     value "/".
000311  *>     03  H1-YY             pic 9(4).
000312  *>     03  filler            pic x     value "@".
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0007

LINE    PG/LN  A...B............................................................SEQUENCE

000313  *>     03  H1-HH             pic 99.
000314  *>     03  filler            pic x     value ":".
000315  *>     03  H1-Min            pic 99.
000316  *>     03  filler            pic xx    value ") ".
000317       03  filler            pic x(20) value "Dictionary File for ".
000318       03  h1programid       pic x(64) value spaces.
000319       03  filler            pic x(7)  value "  Page ".
000320       03  H1-Page           pic zzz9.
000321  *>
000322   01  HDR2.
000323       03  filler            pic X(33) value "All Data/Proc Names".
000324       03  filler            pic X(19) value "Defn     Reference".
000325  *>
000326   01  hdr3.
000327       03  filler            pic x(32) value all "-".
000328       03  filler            pic x     value "+".
000329       03  filler            pic x(63) value all "-".
000330  *>
000331   01  hdr5-symbols.
000332       03  filler            pic x(19) value "Symbols of Module: ".
000333       03  hdr5-Prog-Name    pic x(67) value spaces.
000334  *>
000335   01  hdr6-symbols.
000336       03  filler            pic x(19) value all "-".
000337  *>
000338  *> below is replaced with hyphens to size of Prog-Name
000339  *>
000340       03  hdr6-hyphens      pic x(67) value spaces.
000341  *>
000342   01  hdr7-ws.
000343       03  filler            pic x(14) value "Data Section (".
000344       03  hdr7-variable     pic x(19) value spaces.
000345       03  filler            pic x(8)  value "Defn".
000346       03  filler            pic x(9)  value "Locations".
000347  *>
000348   01  hdr8-ws.
000349       03  hdr8-hd           pic x(9)  value "Procedure".
000350       03  filler            pic x(24) value spaces.
000351       03  filler            pic x(8)  value "Defn".
000352       03  filler            pic x(9)  value "Locations".
000353  *>
000354   01  hdr9.
000355       03  filler            pic x(36) value "Unreferenced Working Storage Symbols".
000356  *>
000357   01  hdr9B.
000358       03  filler            pic x(38) value "Unreferenced Globals throughout Source".
000359  *>
000360   01  hdr10.
000361       03  filler            pic x(23) value "Unreferenced Procedures".
000362  *>
000363   01  hdr11.
000364       03  filler            pic x(16) value "Variable Tested".
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0008

LINE    PG/LN  A...B............................................................SEQUENCE

000365       03  hdr11a-sorted     pic xxx   value spaces.
000366       03  filler            pic x(12) value spaces.
000367       03  filler            pic x(8)  value "Symbol (".
000368       03  filler            pic x(15) value "88-Conditions)".
000369       03  hdr11b-sorted     pic xxx   value spaces.
000370       03  filler            pic x(5)  value spaces.
000371  *>
000372   01  hdr12-hyphens.
000373       03  filler            pic x(62) value all "-".
000374  *>
000375   01  hdtime                          value spaces.
000376       03  hd-hh             pic xx.
000377       03  hd-mm             pic xx.
000378       03  hd-ss             pic xx.
000379       03  hd-uu             pic xx.
000380   01  hddate                          value spaces.
000381       03  HD-C              pic xx.
000382       03  hd-y              pic xx.
000383       03  hd-m              pic xx.
000384       03  hd-d              pic xx.
000385  *>
000386   01  hd-date-time.
000387       03  HD2-Date.
000388           05  hd2-d         pic xx.
000389           05  filler        pic x     value "/".
000390           05  hd2-m         pic xx.
000391           05  filler        pic x     value "/".
000392           05  HD2-C         pic xx.
000393           05  hd2-y         pic xx.
000394       03  HD2-Time.
000395           05  filler        pic xx    value spaces.
000396           05  hd2-hh        pic xx.
000397           05  filler        pic x     value ":".
000398           05  hd2-mm        pic xx.
000399           05  filler        pic x     value ":".
000400           05  hd2-ss        pic xx.
000401           05  filler        pic x     value ":".
000402           05  hd2-uu        pic xx.
000403  *>
000404   01  WS-When-Compiled.
000405       03  WS-WC-YY          pic 9(4).
000406       03  WS-WC-MM          pic 99.
000407       03  WS-WC-DD          pic 99.
000408       03  WS-WC-HH          pic 99.
000409       03  WS-WC-Min         pic 99.
000410       03  filler            pic x(9).
000411  *>
000412   01  WS-Locale              pic x(16)     value spaces.     *> Holds o/p from env var. LC_TIME but only uses 1st
000412+  5 chars
000413   01  WS-Local-Time-Zone     pic 9         value 3.          *> Defaults to International, See comments below !
000414  *>
000415  *> Sets WS-Local-Time-Zone ^~^ to one of these 88 values according to
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0009

LINE    PG/LN  A...B............................................................SEQUENCE

000416  *>    your local requirements
000417  *> NOTE Environment var. LC_TIME is checked for "en_GB" for UK (1)
000418  *>                                          and "en_US" for USA (2)  OTHERWISE its 3 for *nix format
000419  *>   at start of program.
000420  *>   For any other, you can add yours if different but let the Lead Programmer
000421  *>     know, so it can be added to the master sources otherwise default will
000422  *>      be Unix format
000423  *>
000424  *>    Note that 'implies' does NOT mean the program does anything e.g.,
000425  *>        changes page sizing in the report.
000426  *>
000427       88  LTZ-UK                           value 1. *> dd/mm/ccyy  [en_GB] Also implies A4 Paper for prints
000428       88  LTZ-USA                          value 2. *> mm/dd/ccyy  [en_US] Also implies US Letter Paper for print
000428+ s
000429       88  LTZ-Unix                         value 3. *> ccyy/mm/dd  Also implies A4 Paper for prints
000430  *>
000431   01  Error-messages.                      *> Sorry, English msgs Only
000432       03 Msg1      pic x(31) value "Msg1  Aborting: No input stream".
000433       03 Msg2      pic x(35) value "Msg2  Aborting: Early eof on source".
000434       03 Msg4      pic x(48) value "Msg4  Logic Error:Lost1 wsFoundWord2 numeric? = ".
000435       03 Msg5      pic x(38) value "Msg5  Logic Error:Lost2 wsFoundWord2 =".
000436       03 Msg6      pic x(40) value "Msg6  Error: Con table size needs > 5000".
000437       03 Msg7      pic x(30) value "Msg7  bb050 Error: Logic error".
000438       03 Msg8      pic x(32) value "Msg8  Error: Eof on source again".
000439       03 Msg9      pic x(40) value "Msg9  Error: File not present Try Again!".
000440       03 Msg10     pic x(42) value "Msg10 Error: Git Table size exceeds 10,000".
000441  *> Msg11 - 14 in get-reserved-lists with Msg15 spare
000442       03 Msg16     pic x(71) value "Msg16 Error: Eof on source possible logic error at aa047 ASSUMING again".
000443       03 Msg17     pic x(79) value "Msg17 Possible prob. with cobc and therefore with no reserved word list updat
000443+ es".
000444  *>
000445   01  SectTable.
000446       03  filler            pic x(9) value "FWLKCRSPI".
000447   01  filler  redefines SectTable.
000448       03  LSect             pic x  occurs 9.
000449  *> Keep track of sections used in analysed module
000450   01  Section-Used-Table  value zeros.
000451       03  USect             pic 9  occurs 9.
000452  *> holds program parameter values from command line
000453   01  Arg-Vals                       value spaces.
000454       03  Arg-Value         pic x(128)  occurs 6.
000455  *>
000456   01  Section-Names-Table.
000457       03  filler pic x(24) value "FILE SECTION.           ".
000458       03  filler pic x(24) value "WORKING-STORAGE SECTION.".
000459       03  filler pic x(24) value "LOCAL-STORAGE SECTION.  ".
000460       03  filler pic x(24) value "LINKAGE SECTION.        ".
000461       03  filler pic x(24) value "COMMUNICATION SECTION.  ".
000462       03  filler pic x(24) value "REPORT SECTION.         ".
000463       03  filler pic x(24) value "SCREEN SECTION.         ".
000464       03  filler pic x(24) value "PROCEDURE DIVISION.     ".
000465   01  filler   redefines Section-Names-Table.
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0010

LINE    PG/LN  A...B............................................................SEQUENCE

000466       03  Full-Section-Name          occurs 8.
000467  *>                  ascending key Section-Name indexed by Full-Section-Name-Idx. *> cant use as its NOT sorted
000468           05  Section-Name  pic x(16).
000469           05  filler        pic x(08).
000470  *>
000471   01  Section-Short-Names-Table.
000472       03  filler pic x(16) value "FILE            ".
000473       03  filler pic x(16) value "WORKING-STORAGE ".
000474       03  filler pic x(16) value "LOCAL-STORAGE   ".
000475       03  filler pic x(16) value "LINKAGE         ".
000476       03  filler pic x(16) value "COMMUNICATION   ".
000477       03  filler pic x(16) value "REPORT          ".
000478       03  filler pic x(16) value "SCREEN          ".
000479       03  filler pic x(16) value "PROCEDURE       ".
000480   01  filler   redefines Section-Short-Names-Table.
000481       03  Short-Section-Name          occurs 8.
000482           05  Sht-Section-Name  pic x(16).
000483  *>
000484  *> Here for cb_intrinsic_table in GOC see :
000485  *>   cobc/reserved.c in the G/open-cobol source directory but Totally ingoring the system_table as not needed/us
000485+ ed by xref
000486  *>
000487  *> Also note that the number 0 or 1 indicates if the function/reserved word is implemented in G/Open Cobol
000488  *>   but xref treats all as being reserved as they are still so, in someones compiler
000489  *>
000490   01  Function-Table.                                                 *> updated by Get-Reserved-Lists.cbl
000491       03  filler pic x(31) value "1ABS                        ".
000492       03  filler pic x(31) value "1ACOS                       ".
000493       03  filler pic x(31) value "1ANNUITY                    ".
000494       03  filler pic x(31) value "1ASIN                       ".
000495       03  filler pic x(31) value "1ATAN                       ".
000496       03  filler pic x(31) value "0BOOLEAN-OF-INTEGER         ".
000497       03  filler pic x(31) value "1BYTE-LENGTH                ".
000498       03  filler pic x(31) value "1CHAR                       ".
000499       03  filler pic x(31) value "0CHAR-NATIONAL              ".
000500       03  filler pic x(31) value "1COMBINED-DATETIME          ".
000501       03  filler pic x(31) value "1CONCATENATE                ".
000502       03  filler pic x(31) value "1COS                        ".
000503       03  filler pic x(31) value "1CURRENT-DATE               ".
000504       03  filler pic x(31) value "1DATE-OF-INTEGER            ".
000505       03  filler pic x(31) value "1DATE-TO-YYYYMMDD           ".
000506       03  filler pic x(31) value "1DAY-OF-INTEGER             ".
000507       03  filler pic x(31) value "1DAY-TO-YYYYDDD             ".
000508       03  filler pic x(31) value "0DISPLAY-OF                 ".
000509  *>
000510  *> ignore this one, gets confused with username and this
000511  *>     03  filler pic x(31) value "0E                          ".
000512  *>
000513  *> so does OC
000514  *>
000515       03  filler pic x(31) value "1EXCEPTION-FILE             ".
000516       03  filler pic x(31) value "0EXCEPTION-FILE-N           ".
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0011

LINE    PG/LN  A...B............................................................SEQUENCE

000517       03  filler pic x(31) value "1EXCEPTION-LOCATION         ".
000518       03  filler pic x(31) value "0EXCEPTION-LOCATION-N       ".
000519       03  filler pic x(31) value "1EXCEPTION-STATEMENT        ".
000520       03  filler pic x(31) value "1EXCEPTION-STATUS           ".
000521       03  filler pic x(31) value "1EXP                        ".
000522       03  filler pic x(31) value "1EXP10                      ".
000523       03  filler pic x(31) value "1FACTORIAL                  ".
000524       03  filler pic x(31) value "1FRACTION-PART              ".
000525       03  filler pic x(31) value "0HIGHEST-ALGEBRAIC          ".
000526       03  filler pic x(31) value "1INTEGER                    ".
000527       03  filler pic x(31) value "0INTEGER-OF-BOOLEAN         ".
000528       03  filler pic x(31) value "1INTEGER-OF-DATE            ".
000529       03  filler pic x(31) value "1INTEGER-OF-DAY             ".
000530       03  filler pic x(31) value "1INTEGER-PART               ".
000531       03  filler pic x(31) value "1LENGTH                     ".
000532       03  filler pic x(31) value "0LOCALE-COMPARE             ".
000533       03  filler pic x(31) value "1LOCALE-DATE                ".
000534       03  filler pic x(31) value "1LOCALE-TIME                ".
000535       03  filler pic x(31) value "1LOCALE-TIME-FROM-SECONDS   ".
000536       03  filler pic x(31) value "1LOG                        ".
000537       03  filler pic x(31) value "1LOG10                      ".
000538       03  filler pic x(31) value "1LOWER-CASE                 ".
000539       03  filler pic x(31) value "0LOWEST-ALGEBRAIC           ".
000540       03  filler pic x(31) value "1MAX                        ".
000541       03  filler pic x(31) value "1MEAN                       ".
000542       03  filler pic x(31) value "1MEDIAN                     ".
000543       03  filler pic x(31) value "1MIDRANGE                   ".
000544       03  filler pic x(31) value "1MIN                        ".
000545       03  filler pic x(31) value "1MOD                        ".
000546       03  filler pic x(31) value "1MODULE-CALLER-ID           ".
000547       03  filler pic x(31) value "1MODULE-DATE                ".
000548       03  filler pic x(31) value "1MODULE-FORMATTED-DATE      ".
000549       03  filler pic x(31) value "1MODULE-ID                  ".
000550       03  filler pic x(31) value "1MODULE-PATH                ".
000551       03  filler pic x(31) value "1MODULE-SOURCE              ".
000552       03  filler pic x(31) value "1MODULE-TIME                ".
000553       03  filler pic x(31) value "0NATIONAL-OF                ".
000554       03  filler pic x(31) value "1NUMVAL                     ".
000555       03  filler pic x(31) value "1NUMVAL-C                   ".
000556       03  filler pic x(31) value "0NUMVAL-F                   ".
000557       03  filler pic x(31) value "1ORD                        ".
000558       03  filler pic x(31) value "1ORD-MAX                    ".
000559       03  filler pic x(31) value "1ORD-MIN                    ".
000560       03  filler pic x(31) value "0PI                         ".
000561       03  filler pic x(31) value "1PRESENT-VALUE              ".
000562       03  filler pic x(31) value "1RANDOM                     ".
000563       03  filler pic x(31) value "1RANGE                      ".
000564       03  filler pic x(31) value "1REM                        ".
000565       03  filler pic x(31) value "1REVERSE                    ".
000566       03  filler pic x(31) value "1SECONDS-FROM-FORMATTED-TIME".
000567       03  filler pic x(31) value "1SECONDS-PAST-MIDNIGHT      ".
000568       03  filler pic x(31) value "1SIGN                       ".
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0012

LINE    PG/LN  A...B............................................................SEQUENCE

000569       03  filler pic x(31) value "1SIN                        ".
000570       03  filler pic x(31) value "1SQRT                       ".
000571       03  filler pic x(31) value "0STANDARD-COMPARE           ".
000572       03  filler pic x(31) value "1STANDARD-DEVIATION         ".
000573       03  filler pic x(31) value "1STORED-CHAR-LENGTH         ".
000574       03  filler pic x(31) value "1SUBSTITUTE                 ".
000575       03  filler pic x(31) value "1SUBSTITUTE-CASE            ".
000576       03  filler pic x(31) value "1SUM                        ".
000577       03  filler pic x(31) value "1TAN                        ".
000578       03  filler pic x(31) value "1TEST-DATE-YYYYMMDD         ".
000579       03  filler pic x(31) value "1TEST-DAY-YYYYDDD           ".
000580       03  filler pic x(31) value "0TEST-NUMVAL                ".
000581       03  filler pic x(31) value "0TEST-NUMVAL-C              ".
000582       03  filler pic x(31) value "0TEST-NUMVAL-F              ".
000583       03  filler pic x(31) value "1TRIM                       ".
000584       03  filler pic x(31) value "1UPPER-CASE                 ".
000585       03  filler pic x(31) value "1VARIANCE                   ".
000586       03  filler pic x(31) value "1WHEN-COMPILED              ".
000587       03  filler pic x(31) value "1YEAR-TO-YYYY               ".  *>  91
000588       03  filler    values high-values.
000589           05  filler pic x(31) occurs 165.                        *> pad to 256 entries
000590  *>
000591   01  Function-Table-R redefines Function-Table.                  *> updated by Get-Reserved-Lists.cbl
000592       03  All-Functions       occurs 256 ascending key P-Function indexed by All-Fun-Idx.
000593           05  P-oc-implemented pic x.
000594           05  P-Function       pic x(30).
000595   01  Function-Table-Size      pic s9(5)  comp  value 91.          *> updatable by Get-Reserved-Lists.cbl
000596  *>
000597  *> Note that system names are omitted so that they turn up in the cross refs
000598  *>
000599  *> Here for all reserved words in OC see: struct reserved reserved_words in cobc/reserved.c in the open-cobol so
000599+ urce directory
000600  *>
000601   01  Additional-Reserved-Words.                                   *> updatable by Get-Reserved-Lists.cbl
000602       03  filler pic x(31) value "1ACCEPT             ".
000603       03  filler pic x(31) value "1ACCESS             ".
000604       03  filler pic x(31) value "0ACTIVE-CLASS       ".
000605       03  filler pic x(31) value "1ADD                ".
000606       03  filler pic x(31) value "1ADDRESS            ".
000607       03  filler pic x(31) value "1ADVANCING          ".
000608       03  filler pic x(31) value "1AFTER              ".
000609       03  filler pic x(31) value "0ALIGNED            ".
000610       03  filler pic x(31) value "1ALL                ".
000611       03  filler pic x(31) value "1ALLOCATE           ".
000612       03  filler pic x(31) value "1ALPHABET           ".
000613       03  filler pic x(31) value "1ALPHABETIC         ".
000614       03  filler pic x(31) value "1ALPHABETIC-LOWER   ".
000615       03  filler pic x(31) value "1ALPHABETIC-UPPER   ".
000616       03  filler pic x(31) value "1ALPHANUMERIC       ".
000617       03  filler pic x(31) value "1ALPHANUMERIC-EDITED".
000618       03  filler pic x(31) value "1ALSO".
000619       03  filler pic x(31) value "1ALTER".
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0013

LINE    PG/LN  A...B............................................................SEQUENCE

000620       03  filler pic x(31) value "1ALTERNATE".
000621       03  filler pic x(31) value "1AND".
000622       03  filler pic x(31) value "1ANY".
000623       03  filler pic x(31) value "0ANYCASE".
000624       03  filler pic x(31) value "1ARE".
000625       03  filler pic x(31) value "1AREA".
000626       03  filler pic x(31) value "1AREAS".
000627       03  filler pic x(31) value "1ARGUMENT-NUMBER".
000628       03  filler pic x(31) value "1ARGUMENT-VALUE".
000629       03  filler pic x(31) value "0ARITHMETIC".
000630       03  filler pic x(31) value "1AS".
000631       03  filler pic x(31) value "1ASCENDING".
000632       03  filler pic x(31) value "1ASCII".
000633       03  filler pic x(31) value "1ASSIGN".
000634       03  filler pic x(31) value "1AT".
000635       03  filler pic x(31) value "0ATTRIBUTE".
000636       03  filler pic x(31) value "1AUTO".
000637       03  filler pic x(31) value "1AUTO-SKIP".
000638       03  filler pic x(31) value "1AUTOMATIC".
000639       03  filler pic x(31) value "1AUTOTERMINATE".
000640       03  filler pic x(31) value "1AWAY-FROM-ZERO".
000641       03  filler pic x(31) value "0B-AND".
000642       03  filler pic x(31) value "0B-NOT".
000643       03  filler pic x(31) value "0B-OR".
000644       03  filler pic x(31) value "0B-XOR".
000645       03  filler pic x(31) value "1BACKGROUND-COLOR".
000646       03  filler pic x(31) value "1BACKGROUND-COLOUR".
000647       03  filler pic x(31) value "1BASED".
000648       03  filler pic x(31) value "1BEEP".
000649       03  filler pic x(31) value "1BEFORE".
000650       03  filler pic x(31) value "1BELL".
000651       03  filler pic x(31) value "1BINARY".
000652       03  filler pic x(31) value "1BINARY-C-LONG".
000653       03  filler pic x(31) value "1BINARY-CHAR".
000654       03  filler pic x(31) value "1BINARY-DOUBLE".
000655       03  filler pic x(31) value "1BINARY-INT".
000656       03  filler pic x(31) value "1BINARY-LONG".
000657       03  filler pic x(31) value "1BINARY-LONG-LONG".
000658       03  filler pic x(31) value "1BINARY-SHORT".
000659       03  filler pic x(31) value "0BIT".
000660       03  filler pic x(31) value "1BLANK".
000661       03  filler pic x(31) value "1BLINK".
000662       03  filler pic x(31) value "1BLOCK".
000663       03  filler pic x(31) value "0BOOLEAN".
000664       03  filler pic x(31) value "1BOTTOM".
000665       03  filler pic x(31) value "1BY".
000666       03  filler pic x(31) value "0BYTE-LENGTH".
000667       03  filler pic x(31) value "1CALL".
000668       03  filler pic x(31) value "1CANCEL".
000669       03  filler pic x(31) value "0CAPACITY".
000670       03  filler pic x(31) value "0CD".
000671       03  filler pic x(31) value "0CENTER".
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0014

LINE    PG/LN  A...B............................................................SEQUENCE

000672       03  filler pic x(31) value "1CF".
000673       03  filler pic x(31) value "1CH".
000674       03  filler pic x(31) value "0CHAIN".
000675       03  filler pic x(31) value "1CHAINING".
000676       03  filler pic x(31) value "1CHARACTER".
000677       03  filler pic x(31) value "1CHARACTERS".
000678       03  filler pic x(31) value "1CLASS".
000679       03  filler pic x(31) value "0CLASS-ID".
000680       03  filler pic x(31) value "0CLASSIFICATION".
000681       03  filler pic x(31) value "1CLOSE".
000682       03  filler pic x(31) value "1COB-CRT-STATUS".
000683       03  filler pic x(31) value "1CODE".
000684       03  filler pic x(31) value "1CODE-SET".
000685       03  filler pic x(31) value "1COL".
000686       03  filler pic x(31) value "1COLLATING".
000687       03  filler pic x(31) value "1COLS".
000688       03  filler pic x(31) value "1COLUMN".
000689       03  filler pic x(31) value "1COLUMNS".
000690       03  filler pic x(31) value "1COMMA".
000691       03  filler pic x(31) value "1COMMAND-LINE".
000692       03  filler pic x(31) value "1COMMIT".
000693       03  filler pic x(31) value "1COMMON".
000694       03  filler pic x(31) value "0COMMUNICATION".
000695       03  filler pic x(31) value "1COMP".
000696       03  filler pic x(31) value "1COMP-1".
000697       03  filler pic x(31) value "1COMP-2".
000698       03  filler pic x(31) value "1COMP-3".
000699       03  filler pic x(31) value "1COMP-4".
000700       03  filler pic x(31) value "1COMP-5".
000701       03  filler pic x(31) value "1COMP-X".
000702       03  filler pic x(31) value "1COMPUTATIONAL".
000703       03  filler pic x(31) value "1COMPUTATIONAL-1".
000704       03  filler pic x(31) value "1COMPUTATIONAL-2".
000705       03  filler pic x(31) value "1COMPUTATIONAL-3".
000706       03  filler pic x(31) value "1COMPUTATIONAL-4".
000707       03  filler pic x(31) value "1COMPUTATIONAL-5".
000708       03  filler pic x(31) value "1COMPUTATIONAL-X".
000709       03  filler pic x(31) value "1COMPUTE".
000710       03  filler pic x(31) value "0CONDITION".
000711       03  filler pic x(31) value "1CONFIGURATION".
000712       03  filler pic x(31) value "1CONSTANT".
000713       03  filler pic x(31) value "1CONTAINS".
000714       03  filler pic x(31) value "1CONTENT".
000715       03  filler pic x(31) value "1CONTINUE".
000716       03  filler pic x(31) value "1CONTROL".
000717       03  filler pic x(31) value "1CONTROLS".
000718       03  filler pic x(31) value "1CONVERTING".
000719       03  filler pic x(31) value "1COPY".
000720       03  filler pic x(31) value "1CORR".
000721       03  filler pic x(31) value "1CORRESPONDING".
000722       03  filler pic x(31) value "1COUNT".
000723       03  filler pic x(31) value "1CRT".
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0015

LINE    PG/LN  A...B............................................................SEQUENCE

000724       03  filler pic x(31) value "1CRT-UNDER".
000725       03  filler pic x(31) value "1CURRENCY".
000726       03  filler pic x(31) value "1CURSOR".
000727       03  filler pic x(31) value "1CYCLE".
000728       03  filler pic x(31) value "1DATA".
000729       03  filler pic x(31) value "0DATA-POINTER".
000730       03  filler pic x(31) value "1DATE".
000731       03  filler pic x(31) value "1DAY".
000732       03  filler pic x(31) value "1DAY-OF-WEEK".
000733       03  filler pic x(31) value "1DE".
000734       03  filler pic x(31) value "1DEBUGGING".
000735       03  filler pic x(31) value "1DECIMAL-POINT".
000736       03  filler pic x(31) value "1DECLARATIVES".
000737       03  filler pic x(31) value "1DEFAULT".
000738       03  filler pic x(31) value "1DELETE".
000739       03  filler pic x(31) value "1DELIMITED".
000740       03  filler pic x(31) value "1DELIMITER".
000741       03  filler pic x(31) value "1DEPENDING".
000742       03  filler pic x(31) value "1DESCENDING".
000743       03  filler pic x(31) value "0DESTINATION".
000744       03  filler pic x(31) value "1DETAIL".
000745       03  filler pic x(31) value "0DISABLE".
000746       03  filler pic x(31) value "1DISK".
000747       03  filler pic x(31) value "1DISPLAY".
000748       03  filler pic x(31) value "1DIVIDE".
000749       03  filler pic x(31) value "1DIVISION".
000750       03  filler pic x(31) value "1DOWN".
000751       03  filler pic x(31) value "1DUPLICATES".
000752       03  filler pic x(31) value "1DYNAMIC".
000753       03  filler pic x(31) value "1EBCDIC".
000754       03  filler pic x(31) value "0EC".
000755       03  filler pic x(31) value "0EGI".
000756       03  filler pic x(31) value "1ELSE".
000757       03  filler pic x(31) value "0EMI".
000758       03  filler pic x(31) value "1EMPTY-CHECK".
000759       03  filler pic x(31) value "0ENABLE".
000760       03  filler pic x(31) value "1END".
000761       03  filler pic x(31) value "1END-ACCEPT".
000762       03  filler pic x(31) value "1END-ADD".
000763       03  filler pic x(31) value "1END-CALL".
000764       03  filler pic x(31) value "1END-COMPUTE".
000765       03  filler pic x(31) value "1END-DELETE".
000766       03  filler pic x(31) value "1END-DISPLAY".
000767       03  filler pic x(31) value "1END-DIVIDE".
000768       03  filler pic x(31) value "1END-EVALUATE".
000769       03  filler pic x(31) value "1END-IF".
000770       03  filler pic x(31) value "1END-MULTIPLY".
000771       03  filler pic x(31) value "1END-OF-PAGE".
000772       03  filler pic x(31) value "1END-PERFORM".
000773       03  filler pic x(31) value "1END-READ".
000774       03  filler pic x(31) value "0END-RECEIVE".
000775       03  filler pic x(31) value "1END-RETURN".
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0016

LINE    PG/LN  A...B............................................................SEQUENCE

000776       03  filler pic x(31) value "1END-REWRITE".
000777       03  filler pic x(31) value "1END-SEARCH".
000778       03  filler pic x(31) value "1END-START".
000779       03  filler pic x(31) value "1END-STRING".
000780       03  filler pic x(31) value "1END-SUBTRACT".
000781       03  filler pic x(31) value "1END-UNSTRING".
000782       03  filler pic x(31) value "1END-WRITE".
000783       03  filler pic x(31) value "1ENTRY".
000784       03  filler pic x(31) value "0ENTRY-CONVENTION".
000785       03  filler pic x(31) value "1ENVIRONMENT".
000786       03  filler pic x(31) value "1ENVIRONMENT-NAME".
000787       03  filler pic x(31) value "1ENVIRONMENT-VALUE".
000788       03  filler pic x(31) value "0EO".
000789       03  filler pic x(31) value "1EOL".
000790       03  filler pic x(31) value "1EOP".
000791       03  filler pic x(31) value "1EOS".
000792       03  filler pic x(31) value "1EQUAL".
000793       03  filler pic x(31) value "1EQUALS".
000794       03  filler pic x(31) value "1ERASE".
000795       03  filler pic x(31) value "1ERROR".
000796       03  filler pic x(31) value "1ESCAPE".
000797       03  filler pic x(31) value "0ESI".
000798       03  filler pic x(31) value "1EVALUATE".
000799       03  filler pic x(31) value "1EXCEPTION".
000800       03  filler pic x(31) value "0EXCEPTION-OBJECT".
000801       03  filler pic x(31) value "1EXCLUSIVE".
000802       03  filler pic x(31) value "1EXIT".
000803       03  filler pic x(31) value "0EXPANDS".
000804       03  filler pic x(31) value "1EXTEND".
000805       03  filler pic x(31) value "1EXTERNAL".
000806       03  filler pic x(31) value "0FACTORY".
000807       03  filler pic x(31) value "1FALSE".
000808       03  filler pic x(31) value "1FD".
000809       03  filler pic x(31) value "1FILE".
000810       03  filler pic x(31) value "1FILE-CONTROL".
000811       03  filler pic x(31) value "1FILE-ID".
000812       03  filler pic x(31) value "1FILLER".
000813       03  filler pic x(31) value "1FINAL".
000814       03  filler pic x(31) value "1FIRST".
000815       03  filler pic x(31) value "0FLOAT-BINARY-16".
000816       03  filler pic x(31) value "0FLOAT-BINARY-34".
000817       03  filler pic x(31) value "0FLOAT-BINARY-7".
000818       03  filler pic x(31) value "0FLOAT-DECIMAL-16".
000819       03  filler pic x(31) value "0FLOAT-DECIMAL-34".
000820       03  filler pic x(31) value "0FLOAT-EXTENDED".
000821       03  filler pic x(31) value "1FLOAT-LONG".
000822       03  filler pic x(31) value "1FLOAT-SHORT".
000823       03  filler pic x(31) value "1FOOTING".
000824       03  filler pic x(31) value "1FOR".
000825       03  filler pic x(31) value "1FOREGROUND-COLOR".
000826       03  filler pic x(31) value "1FOREGROUND-COLOUR".
000827       03  filler pic x(31) value "1FOREVER".
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0017

LINE    PG/LN  A...B............................................................SEQUENCE

000828       03  filler pic x(31) value "0FORMAT".
000829       03  filler pic x(31) value "1FREE".
000830       03  filler pic x(31) value "1FROM".
000831       03  filler pic x(31) value "1FULL".
000832       03  filler pic x(31) value "1FUNCTION".
000833       03  filler pic x(31) value "1FUNCTION-ID".
000834       03  filler pic x(31) value "0FUNCTION-POINTER".
000835       03  filler pic x(31) value "1GENERATE".
000836       03  filler pic x(31) value "0GET".
000837       03  filler pic x(31) value "1GIVING".
000838       03  filler pic x(31) value "1GLOBAL".
000839       03  filler pic x(31) value "1GO".
000840       03  filler pic x(31) value "1GOBACK".
000841       03  filler pic x(31) value "1GREATER".
000842       03  filler pic x(31) value "1GROUP".
000843       03  filler pic x(31) value "0GROUP-USAGE".
000844       03  filler pic x(31) value "1HEADING".
000845       03  filler pic x(31) value "1HIGH-VALUE".
000846       03  filler pic x(31) value "1HIGH-VALUES".
000847       03  filler pic x(31) value "1HIGHLIGHT".
000848       03  filler pic x(31) value "1I-O".
000849       03  filler pic x(31) value "1I-O-CONTROL".
000850       03  filler pic x(31) value "1ID".
000851       03  filler pic x(31) value "1IDENTIFICATION".
000852       03  filler pic x(31) value "1IF".
000853       03  filler pic x(31) value "1IGNORE".
000854       03  filler pic x(31) value "1IGNORING".
000855       03  filler pic x(31) value "0IMPLEMENTS".
000856       03  filler pic x(31) value "1IN".
000857       03  filler pic x(31) value "1INDEX".
000858       03  filler pic x(31) value "1INDEXED".
000859       03  filler pic x(31) value "1INDICATE".
000860       03  filler pic x(31) value "0INDIRECT".
000861       03  filler pic x(31) value "0INFINITY".
000862       03  filler pic x(31) value "0INHERITS".
000863       03  filler pic x(31) value "1INITIAL".
000864       03  filler pic x(31) value "1INITIALISE".
000865       03  filler pic x(31) value "1INITIALISED".
000866       03  filler pic x(31) value "1INITIALIZE".
000867       03  filler pic x(31) value "1INITIALIZED".
000868       03  filler pic x(31) value "0INITIATE".
000869       03  filler pic x(31) value "1INPUT".
000870       03  filler pic x(31) value "1INPUT-OUTPUT".
000871       03  filler pic x(31) value "1INSPECT".
000872       03  filler pic x(31) value "0INTERFACE".
000873       03  filler pic x(31) value "0INTERFACE-ID".
000874       03  filler pic x(31) value "1INTO".
000875       03  filler pic x(31) value "0INTRINSIC".
000876       03  filler pic x(31) value "1INVALID".
000877       03  filler pic x(31) value "0INVOKE".
000878       03  filler pic x(31) value "1IS".
000879       03  filler pic x(31) value "1JUST".
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0018

LINE    PG/LN  A...B............................................................SEQUENCE

000880       03  filler pic x(31) value "1JUSTIFIED".
000881       03  filler pic x(31) value "1KEPT".
000882       03  filler pic x(31) value "1KEY".
000883       03  filler pic x(31) value "1KEYBOARD".
000884       03  filler pic x(31) value "1LABEL".
000885       03  filler pic x(31) value "1LAST".
000886       03  filler pic x(31) value "0LC_ALL".
000887       03  filler pic x(31) value "0LC_COLLATE".
000888       03  filler pic x(31) value "0LC_CTYPE".
000889       03  filler pic x(31) value "0LC_MESSAGES".
000890       03  filler pic x(31) value "0LC_MONETARY".
000891       03  filler pic x(31) value "0LC_NUMERIC".
000892       03  filler pic x(31) value "0LC_TIME".
000893       03  filler pic x(31) value "1LEADING".
000894       03  filler pic x(31) value "1LEFT".
000895       03  filler pic x(31) value "0LEFT-JUSTIFY".
000896       03  filler pic x(31) value "1LEFTLINE".
000897       03  filler pic x(31) value "1LENGTH".
000898       03  filler pic x(31) value "1LENGTH-CHECK".
000899       03  filler pic x(31) value "1LESS".
000900       03  filler pic x(31) value "1LIMIT".
000901       03  filler pic x(31) value "1LIMITS".
000902       03  filler pic x(31) value "1LINAGE".
000903       03  filler pic x(31) value "1LINAGE-COUNTER".
000904       03  filler pic x(31) value "1LINE".
000905       03  filler pic x(31) value "1LINE-COUNTER".
000906       03  filler pic x(31) value "1LINES".
000907       03  filler pic x(31) value "1LINKAGE".
000908       03  filler pic x(31) value "1LOCAL-STORAGE".
000909       03  filler pic x(31) value "1LOCALE".
000910       03  filler pic x(31) value "1LOCK".
000911       03  filler pic x(31) value "1LOW-VALUE".
000912       03  filler pic x(31) value "1LOW-VALUES".
000913       03  filler pic x(31) value "0LOWER".
000914       03  filler pic x(31) value "1LOWLIGHT".
000915       03  filler pic x(31) value "1MANUAL".
000916       03  filler pic x(31) value "1MEMORY".
000917       03  filler pic x(31) value "1MERGE".
000918       03  filler pic x(31) value "0MESSAGE".
000919       03  filler pic x(31) value "0METHOD".
000920       03  filler pic x(31) value "0METHOD-ID".
000921       03  filler pic x(31) value "1MINUS".
000922       03  filler pic x(31) value "1MODE".
000923       03  filler pic x(31) value "1MOVE".
000924       03  filler pic x(31) value "1MULTIPLE".
000925       03  filler pic x(31) value "1MULTIPLY".
000926       03  filler pic x(31) value "1NATIONAL".
000927       03  filler pic x(31) value "1NATIONAL-EDITED".
000928       03  filler pic x(31) value "1NATIVE".
000929       03  filler pic x(31) value "1NEAREST-AWAY-FROM-ZERO".
000930       03  filler pic x(31) value "1NEAREST-EVEN".
000931       03  filler pic x(31) value "1NEAREST-TOWARD-ZERO".
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0019

LINE    PG/LN  A...B............................................................SEQUENCE

000932       03  filler pic x(31) value "1NEGATIVE".
000933       03  filler pic x(31) value "0NEGATIVE-INFINITY".
000934       03  filler pic x(31) value "0NESTED".
000935       03  filler pic x(31) value "1NEXT".
000936       03  filler pic x(31) value "1NO".
000937       03  filler pic x(31) value "1NO-ECHO".
000938       03  filler pic x(31) value "0NONE".
000939       03  filler pic x(31) value "1NORMAL".
000940       03  filler pic x(31) value "1NOT".
000941       03  filler pic x(31) value "0NOT-A-NUMBER".
000942       03  filler pic x(31) value "1NULL".
000943       03  filler pic x(31) value "1NULLS".
000944       03  filler pic x(31) value "1NUMBER".
000945       03  filler pic x(31) value "1NUMBER-OF-CALL-PARAMETERS".
000946       03  filler pic x(31) value "1NUMBERS".
000947       03  filler pic x(31) value "1NUMERIC".
000948       03  filler pic x(31) value "1NUMERIC-EDITED".
000949       03  filler pic x(31) value "0OBJECT".
000950       03  filler pic x(31) value "1OBJECT-COMPUTER".
000951       03  filler pic x(31) value "0OBJECT-REFERENCE".
000952       03  filler pic x(31) value "1OCCURS".
000953       03  filler pic x(31) value "1OF".
000954       03  filler pic x(31) value "1OFF".
000955       03  filler pic x(31) value "1OMITTED".
000956       03  filler pic x(31) value "1ON".
000957       03  filler pic x(31) value "1ONLY".
000958       03  filler pic x(31) value "1OPEN".
000959       03  filler pic x(31) value "1OPTIONAL".
000960       03  filler pic x(31) value "0OPTIONS".
000961       03  filler pic x(31) value "1OR".
000962       03  filler pic x(31) value "1ORDER".
000963       03  filler pic x(31) value "1ORGANISATION".
000964       03  filler pic x(31) value "1ORGANIZATION".
000965       03  filler pic x(31) value "1OTHER".
000966       03  filler pic x(31) value "1OUTPUT".
000967       03  filler pic x(31) value "1OVERFLOW".
000968       03  filler pic x(31) value "1OVERLINE".
000969       03  filler pic x(31) value "0OVERRIDE".
000970       03  filler pic x(31) value "1PACKED-DECIMAL".
000971       03  filler pic x(31) value "1PADDING".
000972       03  filler pic x(31) value "1PAGE".
000973       03  filler pic x(31) value "1PAGE-COUNTER".
000974       03  filler pic x(31) value "1PARAGRAPH".
000975       03  filler pic x(31) value "1PERFORM".
000976       03  filler pic x(31) value "0PF".
000977       03  filler pic x(31) value "0PH".
000978       03  filler pic x(31) value "1PIC".
000979       03  filler pic x(31) value "1PICTURE".
000980       03  filler pic x(31) value "1PLUS".
000981       03  filler pic x(31) value "1POINTER".
000982       03  filler pic x(31) value "1POSITION".
000983       03  filler pic x(31) value "1POSITIVE".
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0020

LINE    PG/LN  A...B............................................................SEQUENCE

000984       03  filler pic x(31) value "0POSITIVE-INFINITY".
000985       03  filler pic x(31) value "0PREFIXED".
000986       03  filler pic x(31) value "0PRESENT".
000987       03  filler pic x(31) value "1PREVIOUS".
000988       03  filler pic x(31) value "1PRINTER".
000989       03  filler pic x(31) value "0PRINTING".
000990       03  filler pic x(31) value "1PROCEDURE".
000991       03  filler pic x(31) value "1PROCEDURE-POINTER".
000992       03  filler pic x(31) value "1PROCEDURES".
000993       03  filler pic x(31) value "1PROCEED".
000994       03  filler pic x(31) value "1PROGRAM".
000995       03  filler pic x(31) value "1PROGRAM-ID".
000996       03  filler pic x(31) value "1PROGRAM-POINTER".
000997       03  filler pic x(31) value "1PROHIBITED".
000998       03  filler pic x(31) value "1PROMPT".
000999       03  filler pic x(31) value "0PROPERTY".
001000       03  filler pic x(31) value "0PROTOTYPE".
001001       03  filler pic x(31) value "0PURGE".
001002       03  filler pic x(31) value "0QUEUE".
001003       03  filler pic x(31) value "1QUOTE".
001004       03  filler pic x(31) value "1QUOTES".
001005       03  filler pic x(31) value "0RAISE".
001006       03  filler pic x(31) value "0RAISING".
001007       03  filler pic x(31) value "1RANDOM".
001008       03  filler pic x(31) value "0RD".
001009       03  filler pic x(31) value "1READ".
001010       03  filler pic x(31) value "0RECEIVE".
001011       03  filler pic x(31) value "1RECORD".
001012       03  filler pic x(31) value "1RECORDING".
001013       03  filler pic x(31) value "1RECORDS".
001014       03  filler pic x(31) value "1RECURSIVE".
001015       03  filler pic x(31) value "1REDEFINES".
001016       03  filler pic x(31) value "1REEL".
001017       03  filler pic x(31) value "1REFERENCE".
001018       03  filler pic x(31) value "1REFERENCES".
001019       03  filler pic x(31) value "0RELATION".
001020       03  filler pic x(31) value "1RELATIVE".
001021       03  filler pic x(31) value "1RELEASE".
001022       03  filler pic x(31) value "1REMAINDER".
001023       03  filler pic x(31) value "1REMOVAL".
001024       03  filler pic x(31) value "1RENAMES".
001025       03  filler pic x(31) value "1REPLACE".
001026       03  filler pic x(31) value "1REPLACING".
001027       03  filler pic x(31) value "0REPORT".
001028       03  filler pic x(31) value "0REPORTING".
001029       03  filler pic x(31) value "0REPORTS".
001030       03  filler pic x(31) value "1REPOSITORY".
001031       03  filler pic x(31) value "0REPRESENTS-NOT-A-NUMBER".
001032       03  filler pic x(31) value "1REQUIRED".
001033       03  filler pic x(31) value "1RESERVE".
001034       03  filler pic x(31) value "1RESET".
001035       03  filler pic x(31) value "0RESUME".
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0021

LINE    PG/LN  A...B............................................................SEQUENCE

001036       03  filler pic x(31) value "0RETRY".
001037       03  filler pic x(31) value "1RETURN".
001038       03  filler pic x(31) value "1RETURN-CODE".
001039       03  filler pic x(31) value "1RETURNING".
001040       03  filler pic x(31) value "1REVERSE-VIDEO".
001041       03  filler pic x(31) value "1REVERSED".
001042       03  filler pic x(31) value "1REWIND".
001043       03  filler pic x(31) value "1REWRITE".
001044       03  filler pic x(31) value "0RF".
001045       03  filler pic x(31) value "0RH".
001046       03  filler pic x(31) value "1RIGHT".
001047       03  filler pic x(31) value "0RIGHT-JUSTIFY".
001048       03  filler pic x(31) value "1ROLLBACK".
001049       03  filler pic x(31) value "1ROUNDED".
001050       03  filler pic x(31) value "0ROUNDING".
001051       03  filler pic x(31) value "1RUN".
001052       03  filler pic x(31) value "1SAME".
001053       03  filler pic x(31) value "1SCREEN".
001054       03  filler pic x(31) value "1SD".
001055       03  filler pic x(31) value "1SEARCH".
001056       03  filler pic x(31) value "0SECONDS".
001057       03  filler pic x(31) value "1SECTION".
001058       03  filler pic x(31) value "1SECURE".
001059       03  filler pic x(31) value "0SEGMENT".
001060       03  filler pic x(31) value "1SEGMENT-LIMIT".
001061       03  filler pic x(31) value "1SELECT".
001062       03  filler pic x(31) value "0SELF".
001063       03  filler pic x(31) value "0SEND".
001064       03  filler pic x(31) value "1SENTENCE".
001065       03  filler pic x(31) value "1SEPARATE".
001066       03  filler pic x(31) value "1SEQUENCE".
001067       03  filler pic x(31) value "1SEQUENTIAL".
001068       03  filler pic x(31) value "1SET".
001069       03  filler pic x(31) value "1SHARING".
001070       03  filler pic x(31) value "1SIGN".
001071       03  filler pic x(31) value "1SIGNED".
001072       03  filler pic x(31) value "1SIGNED-INT".
001073       03  filler pic x(31) value "1SIGNED-LONG".
001074       03  filler pic x(31) value "1SIGNED-SHORT".
001075       03  filler pic x(31) value "1SIZE".
001076       03  filler pic x(31) value "1SORT".
001077       03  filler pic x(31) value "1SORT-MERGE".
001078       03  filler pic x(31) value "1SORT-RETURN".
001079       03  filler pic x(31) value "1SOURCE".
001080       03  filler pic x(31) value "1SOURCE-COMPUTER".
001081       03  filler pic x(31) value "0SOURCES".
001082       03  filler pic x(31) value "1SPACE".
001083       03  filler pic x(31) value "0SPACE-FILL".
001084       03  filler pic x(31) value "1SPACES".
001085       03  filler pic x(31) value "1SPECIAL-NAMES".
001086       03  filler pic x(31) value "1STANDARD".
001087       03  filler pic x(31) value "1STANDARD-1".
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0022

LINE    PG/LN  A...B............................................................SEQUENCE

001088       03  filler pic x(31) value "1STANDARD-2".
001089       03  filler pic x(31) value "0STANDARD-BINARY".
001090       03  filler pic x(31) value "0STANDARD-DECIMAL".
001091       03  filler pic x(31) value "1START".
001092       03  filler pic x(31) value "0STATEMENT".
001093       03  filler pic x(31) value "1STATIC".
001094       03  filler pic x(31) value "1STATUS".
001095       03  filler pic x(31) value "1STDCALL".
001096       03  filler pic x(31) value "1STEP".
001097       03  filler pic x(31) value "1STOP".
001098       03  filler pic x(31) value "1STRING".
001099       03  filler pic x(31) value "0STRONG".
001100       03  filler pic x(31) value "0SUB-QUEUE-1".
001101       03  filler pic x(31) value "0SUB-QUEUE-2".
001102       03  filler pic x(31) value "0SUB-QUEUE-3".
001103       03  filler pic x(31) value "1SUBTRACT".
001104       03  filler pic x(31) value "1SUM".
001105       03  filler pic x(31) value "0SUPER".
001106       03  filler pic x(31) value "1SUPPRESS".
001107       03  filler pic x(31) value "0SYMBOL".
001108       03  filler pic x(31) value "1SYMBOLIC".
001109       03  filler pic x(31) value "1SYNC".
001110       03  filler pic x(31) value "1SYNCHRONISED".
001111       03  filler pic x(31) value "1SYNCHRONIZED".
001112       03  filler pic x(31) value "0SYSTEM-DEFAULT".
001113       03  filler pic x(31) value "0TABLE".
001114       03  filler pic x(31) value "1TALLYING".
001115       03  filler pic x(31) value "1TAPE".
001116       03  filler pic x(31) value "0TERMINAL".
001117       03  filler pic x(31) value "1TERMINATE".
001118       03  filler pic x(31) value "1TEST".
001119       03  filler pic x(31) value "0TEXT".
001120       03  filler pic x(31) value "1THAN".
001121       03  filler pic x(31) value "1THEN".
001122       03  filler pic x(31) value "1THROUGH".
001123       03  filler pic x(31) value "1THRU".
001124       03  filler pic x(31) value "1TIME".
001125       03  filler pic x(31) value "0TIME-OUT".
001126       03  filler pic x(31) value "0TIMEOUT".
001127       03  filler pic x(31) value "1TIMES".
001128       03  filler pic x(31) value "1TO".
001129       03  filler pic x(31) value "1TOP".
001130       03  filler pic x(31) value "1TOWARD-GREATER".
001131       03  filler pic x(31) value "1TOWARD-LESSER".
001132       03  filler pic x(31) value "1TRAILING".
001133       03  filler pic x(31) value "0TRAILING-SIGN".
001134       03  filler pic x(31) value "1TRANSFORM".
001135       03  filler pic x(31) value "1TRUE".
001136       03  filler pic x(31) value "1TRUNCATION".
001137       03  filler pic x(31) value "1TYPE".
001138       03  filler pic x(31) value "0TYPEDEF".
001139       03  filler pic x(31) value "0UCS-4".
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0023

LINE    PG/LN  A...B............................................................SEQUENCE

001140       03  filler pic x(31) value "1UNDERLINE".
001141       03  filler pic x(31) value "1UNIT".
001142       03  filler pic x(31) value "0UNIVERSAL".
001143       03  filler pic x(31) value "1UNLOCK".
001144       03  filler pic x(31) value "1UNSIGNED".
001145       03  filler pic x(31) value "1UNSIGNED-INT".
001146       03  filler pic x(31) value "1UNSIGNED-LONG".
001147       03  filler pic x(31) value "1UNSIGNED-SHORT".
001148       03  filler pic x(31) value "1UNSTRING".
001149       03  filler pic x(31) value "1UNTIL".
001150       03  filler pic x(31) value "1UP".
001151       03  filler pic x(31) value "1UPDATE".
001152       03  filler pic x(31) value "1UPON".
001153       03  filler pic x(31) value "0UPPER".
001154       03  filler pic x(31) value "1USAGE".
001155       03  filler pic x(31) value "1USE".
001156       03  filler pic x(31) value "0USER-DEFAULT".
001157       03  filler pic x(31) value "1USING".
001158       03  filler pic x(31) value "0UTF-16".
001159       03  filler pic x(31) value "0UTF-8".
001160       03  filler pic x(31) value "0VAL-STATUS".
001161       03  filler pic x(31) value "0VALID".
001162       03  filler pic x(31) value "0VALIDATE".
001163       03  filler pic x(31) value "0VALIDATE-STATUS".
001164       03  filler pic x(31) value "1VALUE".
001165       03  filler pic x(31) value "1VALUES".
001166       03  filler pic x(31) value "1VARYING".
001167       03  filler pic x(31) value "1WAIT".
001168       03  filler pic x(31) value "1WHEN".
001169       03  filler pic x(31) value "1WITH".
001170       03  filler pic x(31) value "1WORDS".
001171       03  filler pic x(31) value "1WORKING-STORAGE".
001172       03  filler pic x(31) value "1WRITE".
001173       03  filler pic x(31) value "1YYYYDDD".
001174       03  filler pic x(31) value "1YYYYMMDD".
001175       03  filler pic x(31) value "1ZERO".
001176       03  filler pic x(31) value "0ZERO-FILL".
001177       03  filler pic x(31) value "1ZEROES".
001178       03  filler pic x(31) value "1ZEROS".     *>  577 to here
001179  *>
001180       03  filler    value high-values.
001181           05  filler  pic x(31)  occurs 447.   *> total of 1024
001182  *>
001183   01  Additional-Reserved-Words-R redefines Additional-Reserved-Words.      *> updated by Get-Reserved-Lists.cbl
001184       03  Reserved-Names       occurs 1024 ascending key Resvd-Word indexed by Resvd-Idx.
001185           05  Resvd-Implemented pic x.
001186           05  Resvd-Word        pic x(30).
001187   01  Resvd-Table-Size          pic s9(5)   comp    value 577.   *> updated by Get-Reserved-Lists.cbl
001188  *>
001189   01  Condition-Table                           value high-values.
001190       03  Con-Tab-Blocks occurs 10 to 5001 depending on Con-Tab-Size.
001191  *> +1 used, when testing for max table size
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0024

LINE    PG/LN  A...B............................................................SEQUENCE

001192           05  Conditions      pic x(32).
001193           05  Variables       pic x(32).
001194           05  CT-In-Use-Flag  pic x.
001195           05  filler          pic x.
001196   01  Con-Tab-Size          Binary-Long value 10.
001197   01  Con-Tab-Count         Binary-Long value zero.
001198  *>
001199   01  Global-Item-Table                         value high-values.
001200       03  Git-Elements  occurs 10 to 10001 depending on Git-Table-Size.
001201  *> +1 used, when testing for max table size
001202         05  Git-Word        pic x(32).
001203         05  Git-Prog-Name   pic x(32).
001204         05  Git-RefNo       pic 9(6).
001205         05  Git-HoldWSorPD  pic 9.
001206         05  Git-HoldWSorPD2 pic 9.
001207         05  Git-Build-No    pic 99.
001208         05  Git-In-Use-Flag pic x.
001209         05  filler          pic x.
001210   01  Git-Table-Size        Binary-Long value 10.
001211   01  Git-Table-Count       Binary-Long value zero.
001212  *>
001213   procedure division.
001214   aa000-xref-Data    section.
001215  *>**************************
001216  *>  TODO & BUGS:
001217  *>************************************************************************
001218  *> AAnnn Section:
001219  *>  THIS ENTIRE SECTION NEEDS A REWRITE, TOO MUCH TAKEN FROM THE VERY OLD
001220  *>   CODE BASE. DOES READ-A-WORD CATER FOR MULTIPLE STATEMENTS PER LINE
001221  *>    WITH PERIODS ENDING EACH STATEMENT? IF SO, WHY ARE WE CHECKING FOR
001222  *>     WORD-DELIMIT = "." THEN.
001223  *>  THIS ALL NEEDS A GOOD LOOK AT, SO MUST DONE SOON but with fresh eyes
001224  *> SUGGEST COMMON CODE LEFT HERE WITH NEW SECTIONS DEALING WITH EACH
001225  *>  SECTION OR MAIN ENTRY
001226  *> Also
001227  *>  routines for source reads, get a word, parsers and tokeniser must be rewritten,
001228  *>   they are still a complete mess.
001229  *>
001230  *>  Version 1.10.nn =
001231  *>  Re-install code for copybooks assuming source is taken from original file
001232  *>   and not cobc see printcbl v2.01.13 or later for usable source.
001233  *>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
001234  *>
001235  *>  Quesions, Questions, Questions,  all I have, is questions!
001236  *>************************************************************************
001237  *>
001238  *>
001239       perform  zz190-Init-Program thru zz190-Exit.
001240       move     high-values to Global-Item-Table.
001241  *>
001242       move     zero to ws-Return-Code.
001243       call     "get-reserved-lists" using ws-Return-Code
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0025

LINE    PG/LN  A...B............................................................SEQUENCE

001244                                           Function-Table-R
001245                                           Function-Table-Size
001246                                           Additional-Reserved-Words-R
001247                                           Resvd-Table-Size.
001248  *>
001249       if       ws-Return-Code not = zero
001250                display Msg17.            *> Possible problem with cobc not in path
001251  *>
001252  *> Just in case someones added names in source code (or in cobc) out of sort order
001253  *>  We MUST have all tables in sorted order
001254  *>
001255       sort     Reserved-Names ascending Resvd-Word.
001256       sort     All-Functions ascending P-Function.
001257  *>
001258       perform  zz180-Open-Source-File thru zz180-Exit.
001259  *>
001260  *>  If requested, Dump All reserved words from tables to screen, nothing fancy then stop.
001261  *>
001262       if       Dump-Reserved-Words
001263                perform varying a from 1 by 1 until a > Resvd-Table-Size
001264                      display Resvd-Word (a)
001265                      end-display
001266                end-perform
001267                perform varying a from 1 by 1 until a > Function-Table-Size
001268                      display P-Function (a)
001269                      end-display
001270                end-perform
001271                move zero to return-code
001272                goback
001273       end-if
001274  *>
001275  *> If exists Get listing file create/mod time and current time and compare
001276  *> if equal set sw-7 on for append mode
001277  *>
001278       accept   WS-Time2 from time.
001279       move     zero to WS-MS.
001280       subtract 100 from WS-Time2 giving WS-Temp-Time.      *> deduct a minute for slow systems
001281       call     "C$FILEINFO" using Print-FileName WS-FileInfo.
001282       if       return-code = zero
001283                if       WS-MOD-HHMMSS00 = ws-Time2
001284                     or                  = WS-Temp-Time
001285                         move 1 to sw-7                     *> it is recent so append the xref O/P
001286                end-if
001287       end-if
001288  *>
001289       if       Append-Reports
001290                open extend Source-Listing
001291                if   FS-Reply not = 00
001292                     close Source-Listing
001293                     display "Cannot open listing file in append mode so opened in output mode"
001294                     open output Source-Listing
001295                else
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0026

LINE    PG/LN  A...B............................................................SEQUENCE

001296                     display "Append mode set"
001297                end-if
001298       else     open output Source-Listing
001299       end-if
001300  *>
001301       if       Reports-In-Lower
001302                move function lower-case (Prog-BaseName (1:CWS)) to HoldID
001303       else
001304                move function upper-case (Prog-BaseName (1:CWS)) to HoldID
001305       end-if
001306       move     HoldID to HoldID-Module.
001307       move     spaces to Arg-Vals.
001308  *>
001309  *> get program id frm source filename in case prog-id not present
001310  *>
001311   aa020-Bypass-Open.
001312       open     output Supplemental-Part1-Out.
001313  *>
001314  *> Now add in contents of Global table if processing nested modules
001315  *>   and we have processed first one by loading sort file
001316  *>
001317       if       Git-Table-Count not = zero
001318                initialize SortRecord
001319                perform varying a from 1 by 1 until a > Git-Table-Count
001320                     move Git-HoldWSorPD  (a) to SkaWSorPD
001321                     move Git-HoldWSorPD2 (a) to SkaWSorPD2
001322                     if Reports-In-Lower
001323                        move function lower-case (Git-Word (a)) to SkaDataName
001324                     else
001325                        move Git-Word (a) to SkaDataName
001326                     end-if
001327                     move Git-RefNo (a) to SkaRefNo
001328                     move 1 to USect (Git-HoldWSorPD (a))
001329                     if  SkaDataName not = spaces
001330                         write SortRecord
001331                     end-if
001332                end-perform
001333       end-if
001334  *>
001335  *> HoldID gets updated with program-id name when found later
001336  *>   but we can print 1st report headings using the sourcefile name
001337  *>    we are assuming the user knows what s/he is doing......:)
001338  *>
001339       move     Prog-Name to H1Prog-Name.
001340       if       List-Source
001341                perform  zz150-WriteHdb.
001342  *>
001343       perform  zz100-Get-A-Source-Record thru zz100-Exit.
001344       move     1 to q S-Pointer F-Pointer.
001345  *>
001346   aa030-ReadLoop1.
001347       if       Source-Eof
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0027

LINE    PG/LN  A...B............................................................SEQUENCE

001348             or End-Prog
001349                display Msg2
001350                close Supplemental-Part1-Out Source-Listing
001351                close SourceInput
001352                move 16 to return-code
001353                goback.
001354       perform  zz110-Get-A-Word thru zz110-Exit.
001355       IF       SourceInWS = "DATA DIVISION.  "
001356                         or  "FILE SECTION.   "
001357                         or  "WORKING-STORAGE SECTION."
001358                         or  "PROCEDURE DIVISION."
001359                go to aa060-ReadLoop3a.
001360  *>
001361  *> The above should never happen, as all modules have a program-id
001362  *>   but who knows what new standards will allow
001363  *>
001364       if       wsFoundWord2 not = "PROGRAM-ID"
001365                go to aa030-ReadLoop1.
001366       perform  zz110-Get-A-Word thru zz110-Exit.
001367  *>
001368  *> got program name so if 1st prog id -> hold-id
001369  *>               else -> holdid-module (for reports)
001370  *>  but 1st check if its a literal & if so remove quotes and use 1st CWS chars
001371  *>
001372       if       wsf1-1 = quote or = "'"
001373                unstring wsFoundWord2 (2:32) delimited by quote or "'"  into wsFoundNewWord
001374                end-unstring
001375                move wsFoundNewWord (1:CWS) to  wsFoundWord2
001376       end-if
001377       if       not Have-Nested
001378          if       Reports-In-Lower
001379                   move function lower-case (wsFoundWord2)  to HoldID
001380          else
001381                   move function upper-case (wsFoundWord2)  to HoldID.
001382       if       Have-Nested            *> found more than 1 module in source
001383          if       Reports-In-Lower
001384                   move function lower-case (wsFoundWord2) to HoldID-Module
001385          else
001386                   move function upper-case (wsFoundWord2) to HoldID-Module.
001387  *>
001388  *> We now have the program-id name so update our info, for reports
001389  *> Next block of interest is special-names and then file-control
001390  *>
001391   aa040-ReadLoop2.
001392       perform  zz100-Get-A-Source-Record thru zz100-Exit.
001393       if       SourceInWS (1:14) = "SPECIAL-NAMES."
001394         if We-Are-Testing display "Found aa040 SPECIAL-NAMES" end-if
001395                go to aa041-Get-SN.
001396       if       SourceInWS (1:13) = "FILE-CONTROL."   *> selects
001397         if We-Are-Testing display "Found aa040 FILE-CONTROL" end-if
001398                go to aa047-GetIO.
001399       if       SourceInWS (1:12) = "I-O-CONTROL."    *> same area etc
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0028

LINE    PG/LN  A...B............................................................SEQUENCE

001400         if We-Are-Testing display "Found aa040 I-O-CONTROL" end-if
001401                go to aa048-GetIOC.
001402       if       SourceInWS (1:12) = "DATA DIVISIO"
001403         if We-Are-Testing display "Found aa040 DATA DIVISIO" end-if
001404                go to aa041-Get-SN.
001405       perform  aa045-Test-Section thru aa045-Exit.
001406  *>
001407  *> if not zero weve got Data Div onwards
001408  *>
001409       if       a not = zero
001410                go to aa060-ReadLoop3a.
001411       go       to aa040-ReadLoop2.
001412  *>
001413   aa041-Get-SN.
001414  *>
001415  *> Get special names
001416  *>
001417       perform  zz100-Get-A-Source-Record thru zz100-Exit.
001418       perform  aa045-Test-Section thru aa045-Exit.
001419       if       a not = zero
001420                go to aa060-ReadLoop3a.
001421       if       SourceInWS (1:13) = "INPUT-OUTPUT " or = "DATA DIVISION"
001422         if We-Are-Testing display "Found aa041 I-O or DATA DIV" end-if
001423                go to aa041-Get-SN.
001424       IF       SourceInWS (1:13) = "FILE-CONTROL."
001425         if We-Are-Testing display "Found aa041 FILE-CONTROL" end-if
001426                go to aa047-GetIO.
001427       IF       SourceInWS (1:12) = "I-O-CONTROL."
001428         if We-Are-Testing display "Found aa041 I_O_CONTROL" end-if
001429                go to aa048-GetIOC.
001430  *>
001431   aa042-Getword.
001432       perform  zz110-Get-A-Word thru zz110-Exit.
001433       if       Word-Delimit = "."
001434                go to aa041-Get-SN.
001435       if       wsFoundWord2 (1:9) = "CURRENCY "
001436                perform aa046-Get-Currency
001437                go to aa042-Getword.
001438       if       wsFoundWord2 (1:3) not = "IS "
001439                go to aa042-Getword.
001440  *>
001441       perform  zz110-Get-A-Word thru zz110-Exit.
001442       if       wsf1-1 = quote or = "'" or wsf1-1-number
001443                go to aa042-Getword.
001444       perform  zz130-Extra-Reserved-Word-Check thru zz130-Exit.
001445       if       a not = zero
001446                go to aa042-Getword.
001447       move     wsFoundWord2 (1:CWS) to Saved-Variable.
001448  *>
001449   aa044-Getword3.
001450       perform  zz110-Get-A-Word thru zz110-Exit.
001451       if       Word-Delimit = "."
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0029

LINE    PG/LN  A...B............................................................SEQUENCE

001452                go to aa041-Get-SN.
001453       if       wsFoundWord2 (1:9) = "CURRENCY "
001454                perform aa046-Get-Currency
001455                go to aa044-Getword3.
001456       if       wsFoundWord2 (1:2) not = "ON"
001457            and wsFoundWord2 (1:3) not = "OFF"
001458                go to aa044-Getword3.
001459       perform  zz110-Get-A-Word thru zz110-Exit.
001460       if       wsf1-1 = quote or = "'" or wsf1-1-number
001461                go to aa044-Getword3.
001462       perform  zz130-Extra-Reserved-Word-Check thru zz130-Exit.
001463       if       a not = zero
001464                go to aa044-Getword3.
001465  *>
001466       if       Con-Tab-Size not < Con-Tab-Count
001467                add 10 to Con-Tab-Size.
001468       add      1 to Con-Tab-Count.
001469
001470       if       Reports-In-Lower
001471                move function lower-case (Saved-Variable) to  Variables (Con-Tab-Count)
001472                move function lower-case (wsFoundWord2 (1:CWS)) to Conditions (Con-Tab-Count)
001473       else
001474                move Saved-Variable to Variables (Con-Tab-Count)
001475                move wsFoundWord2 (1:CWS) to Conditions (Con-Tab-Count)
001476       end-if
001477       move     Space  to CT-In-Use-Flag (Con-Tab-Count).
001478       if       Word-Delimit = "."
001479                go to aa041-Get-SN.
001480       go       to aa044-Getword3.
001481  *>
001482   aa045-Test-Section.
001483       perform  varying a from 1 by 1 until a > 8
001484                if SourceInWS (1:24) = Full-Section-Name (a)
001485                    exit perform
001486                end-if
001487       end-perform.
001488       if       a > 8
001489                move zero to a.
001490  *>
001491   aa045-Exit.
001492       exit.
001493  *>
001494   aa046-Get-Currency.
001495  *>
001496  *> Got 'Currency', so process as needed for pic tests in zz110
001497  *>
001498       perform  zz110-Get-A-Word thru zz110-Exit.
001499       if       wsFoundWord2 (1:5) = "SIGN "
001500             or wsFoundWord2 (1:3) = "IS "
001501                go to aa046-Get-Currency.
001502  *>
001503  *> Now Ive got the literal "x"
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0030

LINE    PG/LN  A...B............................................................SEQUENCE

001504  *>
001505       move     wsFoundWord2 (2:1) to Currency-Sign.
001506       if we-are-testing
001507          display " Now got currency = " Currency-Sign
001508       end-if.
001509  *>
001510   aa047-GetIO.
001511  *>
001512  *> now got file control so its SELECT ..
001513  *>
001514       perform  zz100-Get-A-Source-Record thru zz100-Exit.
001515       perform  aa045-Test-Section thru aa045-Exit.
001516       if       a not = zero
001517                go to aa060-ReadLoop3a.
001518       IF       SourceInWS (1:12) = "I-O-CONTROL."
001519         if We-Are-Testing display "Found aa047 I-O-CONTROL" end-if
001520                go to aa048-GetIOC.
001521       if       SourceInWS (1:12) = "DATA DIVISIO"
001522         if We-Are-Testing display "Found aa047 DATA DIVISIO" end-if
001523                go to aa050-ReadLoop3.
001524       if       SourceInWS (1:12) = "FILE SECTION"
001525         if We-Are-Testing display "Found aa047 FILE SECTION" end-if
001526                go to aa060-ReadLoop3a.
001527  *>  go to aa047-getio.   *> skip selects during test
001528  *>
001529   aa047-Getword.
001530       perform  zz110-Get-A-Word thru zz110-Exit.
001531       if       Word-Delimit = "."
001532                go to aa047-GetIO.
001533  *>
001534  *> now looking at selects: so looking for non reserved words
001535  *>
001536       perform  zz130-Extra-Reserved-Word-Check thru zz130-Exit.
001537       if       a not = zero
001538                go to aa047-Getword.
001539       if       Word-Delimit = "."
001540                go to aa047-GetIO.
001541  *> Now have filename-1
001542       move     1 to HoldWSorPD.
001543       move     0 to HoldWSorPD2.
001544       perform  zz030-Write-Sort.
001545  *>
001546   aa047-Getword2.
001547       perform  zz110-Get-A-Word thru zz110-Exit.
001548       if       Source-Eof
001549                display Msg16
001550                close Supplemental-Part1-Out Source-Listing
001551                close SourceInput
001552                move 16 to return-code
001553                goback.
001554  *>
001555  *> should have assign
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0031

LINE    PG/LN  A...B............................................................SEQUENCE

001556  *>
001557       if       wsFoundWord2 (1:7) not = "ASSIGN "
001558                go to aa047-Getword2.
001559  *>
001560   aa047-Getword3.
001561       perform  zz110-Get-A-Word thru zz110-Exit.
001562       if       (wsf1-1 = quote or = "'") AND Word-Delimit = "."
001563                go to aa047-GetIO.                               *> End of a SELECT
001564       if       wsf1-1 = quote or = "'" or wsf1-1-number
001565                go to aa047-Getword3.
001566       perform  zz130-Extra-Reserved-Word-Check thru zz130-Exit.
001567       if       a not = zero and Word-Delimit = "."
001568                go to aa047-GetIO.
001569       if       a not = zero
001570                go to aa047-Getword3.
001571       if       word-length = zero
001572                go to aa047-GetIO.
001573  *>
001574  *> Now have filename
001575  *> filenames / datanames declared in Selects are shown as in data division
001576  *>
001577       move     1 to HoldWSorPD.
001578       move     0 to HoldWSorPD2.
001579       perform  zz030-Write-Sort.
001580       if       Word-Delimit = "."
001581                go to aa047-GetIO.
001582       go       to aa047-Getword3.
001583  *>
001584   aa048-GetIOC.
001585       perform  zz110-Get-A-Word thru zz110-Exit.
001586       if       wsf1-1 = quote or = "'" or wsf1-1-number
001587                go to aa048-GetIOC.
001588   aa048-Get-Next.
001589       if       Word-Delimit = "."
001590                perform zz100-Get-A-Source-Record thru zz100-Exit
001591                perform aa045-Test-Section thru aa045-Exit
001592                if      a not = zero
001593                        go to aa060-ReadLoop3a
001594                else
001595                        perform  zz110-Get-A-Word thru zz110-Exit
001596                end-if
001597       end-if
001598       if       wsFoundWord2 (1:5) not = "SAME "
001599                go to aa048-GetIOC.
001600  *>
001601   aa049-Getword.
001602       perform  zz110-Get-A-Word thru zz110-Exit.
001603       perform  zz130-Extra-Reserved-Word-Check thru zz130-Exit.
001604       if       a not = zero
001605                go to aa049-Getword.
001606  *> Now have filename
001607       move     1 to HoldWSorPD.
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0032

LINE    PG/LN  A...B............................................................SEQUENCE

001608       move     0 to HoldWSorPD2.
001609       perform  zz030-Write-Sort.
001610       if       Word-Delimit = "."
001611                go to aa048-Get-Next.
001612       go       to aa049-Getword.
001613  *>
001614   aa050-ReadLoop3.
001615  *>
001616  *>    Now for the data division or beyond
001617  *>
001618       perform  zz100-Get-A-Source-Record thru zz100-Exit.
001619  *>
001620   aa060-ReadLoop3a.
001621       perform  zz170-Check-4-Section thru zz170-Exit.
001622       if       GotASection = "Y"
001623                go to aa050-ReadLoop3.
001624       if       HoldWSorPD > zero and < 8
001625                move 1 to S-Pointer2
001626                perform ba000-Process-WS.
001627  *>
001628       if       HoldWSorPD = zero
001629                go to aa050-ReadLoop3.
001630  *>
001631       perform  bb000-Process-Procedure.
001632       if       End-Prog
001633                close Supplemental-Part1-Out
001634       else
001635                close SourceInput Supplemental-Part1-Out.
001636       perform  bc000-Last-Act.
001637       if       not End-Prog
001638                perform  bc620-Do-Global-Conditions thru bc629-Exit
001639                close Source-Listing.
001640  *>
001641  *>**************************************************************************************
001642  *>  If deleting the Supp files remove all of the '*>' except for the SourceFileName line
001643  *>    as that could be for a normal input file and not the o/p from the compiler
001644  *>      which is in the form sourcefile.i
001645  *>**************************************************************************************
001646  *>
001647   *>    if       not We-Are-Testing
001648   *>         and not End-Prog
001649  *>            call "CBL_DELETE_FILE" using SourceFileName
001650  *> kill temp input file (anything else?) but not yet Use when in OC
001651   *>             call "CBL_DELETE_FILE" using Supp-File-2
001652   *>             call "CBL_DELETE_FILE" using Supp-File-1.
001653  *>
001654       if       End-Prog
001655                perform  zz190-Init-Program thru zz190-Exit
001656                move  spaces to PrintLine
001657                write PrintLine
001658                write PrintLine
001659                write PrintLine
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0033

LINE    PG/LN  A...B............................................................SEQUENCE

001660                add  3 to Line-Count
001661                move  zero to sw-End-Prog
001662                go    to aa020-Bypass-Open
001663       end-if
001664       move     zero to return-code.
001665       goback.
001666  *>
001667   ba000-Process-WS Section.
001668   ba020-GetAWord.
001669  *>
001670  *> this should be getting first word of source record
001671  *>
001672       perform  zz110-Get-A-Word thru zz110-Exit.
001673       if       word-length = zero
001674                go to ba020-GetAWord.
001675       if       GotASection = "Y" *> check for Proc. Div
001676           and  HoldWSorPD = 8
001677                go to ba000-Exit. *> done, so process proc. div
001678       if       GotASection = "Y"
001679                move space to GotASection
001680                perform zz100-Get-A-Source-Record thru zz100-Exit
001681                go to ba020-GetAWord.
001682  *>
001683  *> lets get a file section element out of the way
001684  *>
001685       if       wsFoundWord2 (1:3) = "FD " or = "RD "
001686                move zero to Global-Current-Level  *> Global only
001687       else
001688        if      wsFoundWord2 (1:3) = "CD " or = "SD " *> not these
001689                move 99 to Global-Current-Level.
001690  *> Clears Global-Active
001691  *>
001692  *> note that for CD & SD setting Global-current-* not needed
001693  *>                           is it a problem
001694       if       wsFoundWord2 (1:3) = "FD " or = "SD " or = "RD " or = "CD "
001695                perform zz110-Get-A-Word thru zz110-Exit  *> get fn
001696                move zero to HoldWSorPD2
001697                move zero to sw-Git            *> reset Global flag
001698                move wsFoundWord2 (1:32) to Global-Current-Word
001699                move Gen-RefNo1   to Global-Current-RefNo
001700                perform zz030-Write-Sort
001701                perform ba040-Clear-To-Next-Period thru ba049-Exit
001702                go to ba020-GetAWord.
001703  *>
001704  *> we now have basic ws records, ie starting 01-49,66,77,78,88 etc
001705  *>
001706        if      wsFoundWord2 (1:Word-Length) not numeric
001707                display "ba020:" Msg4 wsFoundWord2 (1:Word-Length) " prog = " HoldID " line = " Gen-RefNo1
001708                close Source-Listing SourceInput
001709                      Supplemental-Part1-Out
001710                move 16 to return-code
001711                goback.    *> if here, its broke
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0034

LINE    PG/LN  A...B............................................................SEQUENCE

001712  *>
001713  *> word = Build-Number
001714  *>
001715        perform zz160-Clean-Number thru zz160-Exit.
001716        if      Build-Number > 0 and < 50
001717                move spaces to Saved-Variable.
001718  *>
001719        if      Build-Number = 01
001720           and  (Global-Current-Level = 99
001721             or HoldWSorPD > 1)
001722                move zero to sw-Git
001723                move 1 to Global-Current-Level.
001724  *>
001725        if      Build-Number = 88 or = 78 or = 77 or = 66
001726                                  or (Build-Number > 0 and < 50)
001727                go to ba050-Get-User-Word.
001728  *>
001729  *> getting here Should never happen
001730  *>
001731        display "ba020:" Msg5 "bld=" Build-Number " word=" wsFoundWord2 (1:CWS) " prog = " HoldID " line = " Gen-R
001731+ efNo1.
001732       close    Source-Listing
001733                SourceInput
001734                Supplemental-Part1-Out.
001735       move     20 to return-code.
001736       goback.                            *> if here, its broke
001737  *>
001738   ba040-Clear-To-Next-Period.
001739       if       Word-Delimit = "."
001740            and S-Pointer2 not < Source-Line-End
001741                add 1 to S-Pointer2
001742                move space to Word-Delimit
001743                go to ba049-Exit.
001744       if       Word-Delimit = "."
001745                go to ba049-Exit.
001746       perform  zz110-Get-A-Word thru zz110-Exit.
001747       if       WasPicture = 1     *> current word is a pic sub-clause
001748                move zero to WasPicture
001749                go to ba040-Clear-To-Next-Period.
001750       if       wsFoundWord2 (1:7) = "GLOBAL "
001751                move 1 to sw-Git
001752                perform zz200-Load-Git thru zz200-Exit
001753                go to ba040-Clear-To-Next-Period.
001754       if       wsFoundWord2 (1:8) = "INDEXED "
001755                perform ba052-After-Index
001756                go to ba040-Clear-To-Next-Period.
001757       if       wsFoundWord2 (1:10) = "DEPENDING "
001758                perform ba053-After-Depending
001759                go to ba040-Clear-To-Next-Period.
001760       if       HoldWSorPD = 7 and
001761                (wsFoundWord2 (1:6) = "TO    " or "FROM  " or "USING ")
001762                perform zz110-Get-A-Word thru zz110-Exit
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0035

LINE    PG/LN  A...B............................................................SEQUENCE

001763                inspect wsFoundWord2 tallying a for all "("
001764                if a not = zero
001765                   move wsFoundWord2 to wsFoundNewWord5
001766                   unstring wsFoundNewWord5 delimited by "(" into wsFoundWord2
001767                end-if
001768                perform zz030-Write-Sort
001769                go to ba040-Clear-To-Next-Period.
001770  *>
001771  *> Now looking for other non res words but not literals or numerics
001772  *>
001773       if       wsf1-1 = quote or = "'"
001774                go to ba040-Clear-To-Next-Period.
001775       if       wsf1-1 = "-" or = "+"
001776                go to ba040-Clear-To-Next-Period.
001777       if       wsFoundWord2 (1:z) numeric
001778                go to ba040-Clear-To-Next-Period.
001779       if       wsf1-1-number
001780                go to ba040-Clear-To-Next-Period.
001781       if       wsf1-1 = "("
001782                go to ba040-Clear-To-Next-Period.
001783  *> dont have literals or numerics
001784       perform  zz130-Extra-Reserved-Word-Check thru zz130-Exit.
001785       if       a > zero              *> reserved word
001786                go to ba040-Clear-To-Next-Period.
001787  *>
001788  *> if here must have user defined word (unless I have forgotten anything)
001789  *>     no check for global
001790  *>
001791       perform  zz030-Write-Sort.
001792       go       to ba040-Clear-To-Next-Period.
001793  *>
001794   ba049-Exit.
001795       exit.
001796  *>
001797   ba050-Get-User-Word.
001798  *>
001799  *> to here with nn ^ word but word could be pic/value etc ie no dataname
001800  *>
001801       perform  zz110-Get-A-Word thru zz110-Exit.
001802       if       wsFoundWord2 (1:7) = "FILLER "
001803                move "FILLER" to Saved-Variable
001804                go to ba051-After-DataName.
001805       perform  zz130-Extra-Reserved-Word-Check thru zz130-Exit.
001806  *>
001807  *> Trap for no dataname, ie reserved word
001808  *>   this [the 'if'] MUST be left in here
001809  *>
001810       if       a not = zero
001811                move "FILLER" to Saved-Variable
001812                go to ba051-After-New-Word.
001813  *>
001814  *> not a reserved word AND a 88, looking for 01 - 49 [ or 77]
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0036

LINE    PG/LN  A...B............................................................SEQUENCE

001815  *>
001816       if       (Build-Number > 0 and < 50) or Build-Number = 77
001817                move wsFoundWord2 (1:CWS) to Saved-Variable.
001818  *>
001819       if       Build-Number = 88
001820            and Con-Tab-Count not < Con-Tab-Size
001821                add 10 to    Con-Tab-Size.
001822       if       Con-Tab-Size > 5000
001823                move 5001 to Con-Tab-Size           *> just in case
001824                display Msg6
001825                go to ba050-Bypass-Add-2-Con-Table.
001826  *>
001827  *> add 88 dataname to constant table
001828  *>
001829       if       Build-Number = 88
001830            and Con-Tab-Count < Con-Tab-Size
001831                add 1 to Con-Tab-Count
001832                if  Reports-In-Lower
001833                    move function lower-case (Saved-Variable) to  Variables (Con-Tab-Count)
001834                    move function lower-case (wsFoundWord2 (1:CWS)) to Conditions (Con-Tab-Count)
001835                else
001836                    move Saved-Variable to Variables (Con-Tab-Count)
001837                    move wsFoundWord2 (1:CWS) to Conditions (Con-Tab-Count)
001838                end-if
001839       end-if
001840       .
001841  *>
001842   ba050-Bypass-Add-2-Con-Table.
001843  *>
001844  *> we dont have a reserved word! a = 0 = no
001845  *>
001846        if      Global-Current-Level not = 99
001847                move Gen-RefNo1   to Global-Current-RefNo
001848                move wsFoundWord2 (1:32) to Global-Current-Word.
001849  *>
001850        perform zz030-Write-Sort.
001851  *>
001852   ba051-After-DataName.
001853       if       Word-Delimit = "."
001854            and Build-Number not = 66 and not = 77 and not = 78
001855            and Saved-Variable not = "FILLER"
001856            and Global-Active
001857                perform zz200-Load-Git thru zz200-Exit.
001858       if       Word-Delimit = "."
001859                go to ba020-GetAWord.
001860       if       Global-Active
001861            and Build-Number = 88
001862                perform zz200-Load-Git thru zz200-Exit
001863                perform ba040-Clear-To-Next-Period thru ba049-Exit
001864                go to ba020-GetAWord.
001865       perform  zz110-Get-A-Word thru zz110-Exit.
001866  *>
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0037

LINE    PG/LN  A...B............................................................SEQUENCE

001867   ba051-After-New-Word.
001868       if       wsFoundWord2 (1:10) = "REDEFINES " or
001869                wsFoundWord2 (1:8) = "RENAMES "
001870                perform zz110-Get-A-Word thru zz110-Exit
001871                perform zz030-Write-Sort
001872       else
001873        if      wsFoundWord2 (1:7) = "GLOBAL "
001874                move 1 to sw-Git
001875                perform zz200-Load-Git thru zz200-Exit
001876        else
001877         if     Global-Active
001878            and Build-Number not = 66 and not = 77 and not = 78
001879            and Saved-Variable not = "FILLER"
001880                perform zz200-Load-Git thru zz200-Exit.
001881  *>
001882       if       HoldWSorPD = 7 and
001883                (wsFoundWord2 (1:6) = "TO    " or "FROM  " or "USING ")
001884                perform zz110-Get-A-Word thru zz110-Exit
001885                inspect wsFoundWord2 tallying a for all "("
001886                if a not = zero
001887                   move wsFoundWord2 to wsFoundNewWord5
001888                   unstring wsFoundNewWord5 delimited by "(" into wsFoundWord2
001889                end-if
001890                perform zz030-Write-Sort
001891       end-if
001892  *>
001893       perform  ba040-Clear-To-Next-Period thru ba049-Exit.
001894       go       to ba020-GetAWord.
001895  *>
001896   ba052-After-Index.
001897  *>
001898  *> if Index found ignore 'by' if present
001899  *>
001900       perform  zz110-Get-A-Word thru zz110-Exit.
001901       if       wsFoundWord2 (1:3) = "BY "
001902                go to ba052-After-Index.
001903  *>
001904  *> Should have index name and might be global
001905  *>
001906       perform  zz030-Write-Sort.
001907       if       Global-Active
001908                move wsFoundWord2 (1:32) to Global-Current-Word
001909                perform zz200-Load-Git thru zz200-Exit.
001910  *>
001911   ba053-After-Depending.
001912  *>
001913  *> If depending found ignore 'on' if present, no global processing
001914  *>
001915       perform  zz110-Get-A-Word thru zz110-Exit.
001916       if       wsFoundWord2 (1:3) = "ON "
001917                go to ba053-After-Depending.
001918  *>
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0038

LINE    PG/LN  A...B............................................................SEQUENCE

001919  *> Should have depending name
001920  *>
001921       perform  zz030-Write-Sort.
001922  *>
001923   ba000-Exit.
001924       exit.
001925  *>
001926   bb000-Process-Procedure Section.
001927   bb010-New-Record.
001928  *>
001929  *> at this point we need to get a word but have PROCEDURE (as in DIVISION) as wsFoundWord2
001930  *> but 1st, sort Global  table prior to running search(es) and I know it will happen for every module in src aft
001930+ er 1st one
001931  *>    this needs a rewrite as well as process a word etc complete mess
001932       if       Git-Table-Count > 1
001933                sort  Git-Elements ascending Git-Word.
001934  *>
001935   bb020-GetAWord.
001936       perform  zz110-Get-A-Word thru zz110-Exit.
001937       if       End-Prog
001938                go to bb000-Exit.
001939       if       Source-Eof
001940                go to bb000-Exit.
001941       if       Word-Delimit = "."
001942           and  wsf1-1 = space
001943                go to bb020-GetAWord.
001944  *>
001945   bb030-Chk1.
001946       if       wsFoundWord2 (1:1) alphabetic
001947                perform zz130-Extra-Reserved-Word-Check thru zz130-Exit
001948       else
001949                move zero to a.
001950  *>
001951  *> Do we have a reserved word? a = 0 means no or a number so ignore
001952  *>
001953       if       a > zero
001954                go to bb020-GetAWord.
001955       if       wsf1-1-Number
001956                go to bb020-GetAWord.
001957       if       (wsf1-1 = "-" or = "+")
001958          and   wsFoundWord2 (2:1) numeric
001959                go to bb020-GetAWord.
001960       if       wsf1-1 = quote or = "'"
001961                go to bb020-GetAWord.
001962       if       (wsf1-1 = "X" or = "H")
001963          and   (wsFoundWord2 (2:1) = quote or = "'")
001964                go to bb020-GetAWord.
001965       if       wsf1-1 = ":"
001966          and   Word-Length = 1
001967                go to bb020-GetAWord.
001968       if       wsf1-1 = "("
001969                go to bb050-Check-SubScripts.
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0039

LINE    PG/LN  A...B............................................................SEQUENCE

001970  *>
001971   bb040-chk2.
001972  *>
001973  *> check for arithmetic operators
001974  *>
001975       if       wsf1-3 = "-  " or = "+  " or = "*  " or = "/  " or = "** "
001976                go to bb020-GetAWord.
001977  *>
001978  *> check for relational Conditions
001979  *>
001980       if       wsf1-2 = "> " or = "< " or = "= "
001981                go to bb020-GetAWord.
001982       if       wsf1-3 = ">= " or = "<= " or = "<> "
001983                go to bb020-GetAWord.
001984  *>
001985  *> we have a dataname and are we at word one with period delimiter
001986  *> is it a paragraph?
001987  *>
001988       move     2 to HoldWSorPD2.
001989       if       Word-Delimit = "."
001990            and Source-Words = 1
001991                move zero to HoldWSorPD2.
001992  *>
001993  *> Check if we have a section name if so set wdorpd2 = 1
001994  *>
001995       string   wsFoundWord2 (1:Word-Length) delimited by size " SECTION" delimited by size  into HoldFoundWord.
001996       add      Word-Length 8 giving a.
001997       if       HoldWSorPD2 not = zero
001998           and  SourceInWS (1:a) = HoldFoundWord (1:a)
001999                move 1 to HoldWSorPD2.
002000       if       wsFoundWord2 (Word-Length:1) = ")"
002001                move space to wsFoundWord2 (Word-Length:1)
002002                if  Word-Length > 1
002003                    subtract 1 from Word-Length
002004                end-if
002005                go to bb030-Chk1
002006       end-if
002007       perform  zz030-Write-Sort.
002008       go       to bb020-GetAWord.
002009  *>
002010   bb050-Check-SubScripts.
002011  *>
002012  *> arrives here with (xxxx) or any variation ie (((xxx etc
002013  *>   xxx)))
002014  *>
002015       move     spaces to wsFoundNewWord3.
002016       move     zero to a c d q y s s2 z2 z3.
002017       move     1 to s.                   *> Working Word start point
002018       move     Word-Length to z z2.      *> Working Word Length
002019   bb051-Clear-Left-Brace.
002020       if       z2 < 1                    *>  Should never happen but!
002021                go to bb020-GetAWord.
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0040

LINE    PG/LN  A...B............................................................SEQUENCE

002022       if       wsFoundWord2 (s:1) = "("
002023                add      1 to s
002024                subtract 1 from z2
002025                go to bb051-clear-Left-brace.
002026  *>
002027  *> Now we have abcde))) or "abcd"))) or word:word)) or sim.
002028  *>
002029   bb052-Clear-Right-Brace.
002030       if       z2 < 1                    *>  Should never happen but!
002031                go to bb020-GetAWord.     *>  ie empty braces
002032       if       wsFoundWord2 (z:1) = ")"
002033                move space to wsFoundWord2 (z:1)
002034                subtract 1 from z
002035                subtract 1 from z2
002036                subtract 1 from Word-Length
002037                go to bb052-Clear-Right-Brace.
002038  *>
002039  *> s  = left char pos         in wsFoundWord2
002040  *> z  = right most char pos   in wsFoundWord2
002041  *> z2 = current word length   in wsFoundWord2
002042  *> WL = orig length minus No. of ')'
002043  *>
002044   bb053-numerics.                        *> not interested in
002045       if       wsFoundWord2 (s:z2) numeric
002046                go to bb020-GetAWord.
002047       if       s < z
002048                subtract 1 from z2 giving z3
002049                add 1 s giving s2
002050                if  (wsFoundWord2 (s:1) = "+" or = "-")
002051                 and wsFoundWord2 (s2:z3) numeric
002052                     go to bb020-GetAWord
002053                end-if
002054       end-if
002055  *>
002056  *> Next will clear word):xyz for later processing (bb100) 2014-11-05/14
002057  *>
002058       inspect  wsFoundWord2 (s:z2) replacing all ")" by space.
002059  *>
002060       inspect  wsFoundWord2 (s:z2) tallying a for all "(".
002061       inspect  wsFoundWord2 (s:z2) tallying a for all ")".
002062       if       a > zero                  *> should not have braces now
002063                display "bb053:Logic Error (A=" a " B=" b " Z2= " Z2 " on " wsFoundWord2 (1:80)
002064                go to bb020-GetAWord
002065       end-if
002066  *>
002067       inspect  wsFoundWord2 (s:z2) tallying y for all quote.
002068       inspect  wsFoundWord2 (s:z2) tallying y for all "'".
002069  *>
002070       if       y > zero                  *> quotes?
002071                move  zero to b      q t
002072                subtract 1 from s giving a
002073                go to bb060-Scan4-Quotes
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0041

LINE    PG/LN  A...B............................................................SEQUENCE

002074       end-if
002075       inspect  wsFoundWord2 (s:z2) tallying c for all ":".
002076       if       c > zero                  *> a colon?
002077                move  zero to b q t
002078                go to bb100-scan4-colon.
002079   bb054-spaces.
002080  *>  left over from old code ??
002081       inspect  wsFoundWord2 (s:z2) tallying d for all space.
002082       if       d = zero
002083                move spaces to wsFoundNewWord
002084                if   z2 < 33
002085                     move wsFoundWord2 (s:z2) to wsFoundNewWord
002086                else
002087                     move wsFoundWord2 (s:32) to wsFoundNewWord
002088                     if we-are-testing
002089                        display "bb054:logic err?: " wsFoundWord2 (s:32)
002090                     end-if
002091                end-if
002092                move wsFoundNewWord to wsFoundWord2
002093                perform zz130-Extra-Reserved-Word-Check thru zz130-Exit
002094                if  a > zero              *> reserved word
002095                        go to bb020-GetAWord
002096                end-if
002097                perform zz030-Write-Sort
002098                go to bb020-GetAWord
002099       end-if
002100  *> cockup trap
002101       display Msg7.
002102       display "bb054b: wsfw2=" wsFoundWord2 (1:64).
002103       go to bb020-GetAWord.
002104  *>
002105   bb060-Scan4-Quotes.
002106  *>
002107  *> we are testing if more than 1 word present inc. a literal but it shouldnt
002108  *>
002109       add      1 to a.        *>  q now a = field start,  s now b, z = rightmost char
002110       if       a not > z      *> check for end of data in field
002111          and   wsFoundWord2 (a:1) not = quote and not = "'"
002112                add 1 to b
002113                move wsFoundWord2 (a:1) to wsFoundNewWord3 (b:1)
002114                go to bb060-Scan4-Quotes.
002115  *>
002116  *> wsFoundNewWord3 = non quoted field so far
002117  *>
002118   bb070-Got-Quote.        *> starts at 1st quote
002119       add      1 to a.
002120       add      1 to t.  *> t = literal length (no quotes)
002121       if       a > z                       *> Word-Length
002122                go to bb090-Recover-Word.
002123       if       wsFoundWord2 (a:1) not = quote and not = "'"
002124                go to bb070-Got-Quote.
002125       add      1 to a. *> a = next char after 2nd quote
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0042

LINE    PG/LN  A...B............................................................SEQUENCE

002126       add      1 to t.
002127  *>
002128  *> t = quoted lit length including quotes
002129  *>   and we are now at end quote + 1
002130   bb080-Quote-Clean.
002131       if       a > z                       *> Word-Length
002132                go to bb090-Recover-Word.
002133       if we-are-testing
002134           display "bb080: found 2nd word in scan=" wsFoundWord2
002135       end-if
002136       add      1 to b.
002137       move     wsFoundWord2 (a:1) to wsFoundNewWord3 (b:1).
002138       add      1 to a.
002139       go       to bb080-Quote-Clean.
002140  *>
002141   bb090-Recover-Word.
002142  *>
002143  *> Word-Length and wsFoundWord2 less quoted field could be > 1 word in wsfnw3
002144  *>
002145       subtract t from Word-Length.
002146       if       Word-Length < 1
002147                go to bb020-GetAWord.
002148       move     wsFoundNewWord3 (1:CWS) to wsFoundWord2 (1:CWS).
002149       go       to bb050-Check-SubScripts.
002150  *>
002151   bb100-scan4-colon.
002152  *>
002153  *> now we can have num:num DataName:DN num:DN DN:num
002154  *> z2 = current WL, s = leftmost char & z= rightmost char in wsFW2
002155  *>
002156       move     spaces to wsFoundNewWord wsFoundNewWord2.
002157       move     1 to t.
002158       unstring wsFoundWord2 (s:z2) delimited by ":" into wsFoundNewWord count q pointer t.
002159  *> t now : +1
002160       unstring wsFoundWord2 (s:z2) delimited by " " into wsFoundNewWord2 count b pointer t.
002161       if     t not > z2 or not = Word-Length
002162              display "bb100 Error: t=" t " word-len="
002163              Word-Length " z2=" z2.
002164  *> this numeric test may not work?
002165       if       wsFoundNewWord (1:q) not numeric
002166           and  wsFoundNewWord (1:1) not = "-" and not = "+"
002167                move spaces to wsFoundWord2
002168                move wsFoundNewWord (1:q) to wsFoundWord2
002169                perform zz030-Write-Sort.
002170  *> this numeric test may not work?
002171       if       b > zero
002172          and   wsFoundNewWord2 (1:b) not numeric
002173           and  wsFoundNewWord2 (1:1) not = "-" and not = "+"
002174                move spaces to wsFoundWord2
002175                move wsFoundNewWord2 (1:b) to wsFoundWord2
002176                perform zz030-Write-Sort.
002177       go       to bb020-GetAWord.
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0043

LINE    PG/LN  A...B............................................................SEQUENCE

002178   bb000-Exit.
002179       exit.
002180  *>
002181   bc000-Last-Act Section.
002182  *>*********************
002183  *>  Report Phase
002184  *>
002185       sort     SortFile
002186                ascending key SdSortKey
002187                using  Supplemental-Part1-Out
002188                giving Supplemental-Part2-In.
002189       if       Git-Table-Count > 1
002190                sort  Git-Elements ascending Git-Word.
002191  *> Print order:
002192  *> Note that although some sections are not yet supported in GC they
002193  *>       are, in cobxref.
002194  *>   Xrefd -
002195  *>     At bc090 = In order: File Section, Working-Storage, Local-Storage,
002196  *>                 Linkage, Communication, Report, Screen
002197  *>     At bc600 = Globals (in nested modules)
002198  *>     At bc190 = Special-names & Conditions (& linked variables),
002199  *>     At bc300 = Functions,
002200  *>     At bc200 = Procedure Div,
002201  *>     At bc400 = Unreferenced: File & WS,
002202  *>     At bc500 = Unreferenced Procedure,
002203  *>     At bc620 = Unreferenced Globals (throughout source)
002204  *>
002205       if       not All-Reports
002206                go to bc090-Last-Pass2.
002207  *>
002208  *> produce group W-S xref & procedure used in testing
002209  *>  and taken from original code circa 1983.
002210  *>  ------- Leave in just in case needed for testing ----
002211  *>
002212   bc010-group-report.
002213       move     spaces to saveSkaDataName.
002214       open     input Supplemental-Part2-In.
002215       read     Supplemental-Part2-In at end
002216                display Msg1
002217                go to bc000-Exit.
002218       perform  zz150-WriteHdb thru zz150-Exit.
002219       perform  zz150-WriteHdb8 thru zz150-Exit.
002220       move     zero to q.
002221       go       to bc030-IsX.
002222  *>
002223   bc020-Read-Sorter.
002224       read     Supplemental-Part2-In at end
002225                perform bc050-Check-Q
002226                close Supplemental-Part2-In
002227                go to bc000-Exit.
002228  *>              go to bc090-Last-Pass2.
002229  *>
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0044

LINE    PG/LN  A...B............................................................SEQUENCE

002230   bc030-IsX.
002231       if       SkaDataName = spaces
002232                go to bc020-Read-Sorter.
002233       perform  bc040-PrintXRef thru bc080-Exit.
002234       go       to bc020-Read-Sorter.
002235  *>
002236   bc040-PrintXRef.
002237       if       SkaDataName = saveSkaDataName
002238                go to bc070-ConnectD.
002239       move     SkaDataName to saveSkaDataName.
002240  *>
002241   bc050-Check-Q.
002242       if       XrDataName not = spaces
002243           and  q = zero
002244                move 1 to q.
002245       if       q > zero
002246                write PrintLine after 1
002247                add   1 to Line-Count
002248                if  Line-Count > Compiler-Line-Cnt
002249                    perform  zz150-WriteHdb thru zz150-Exit
002250                    perform  zz150-WriteHdb8 thru zz150-Exit
002251                end-if
002252                move zero to q
002253                move spaces to PrintLine.
002254  *>
002255   bc060-ConnectC.
002256       move     spaces to PrintLine.
002257       move     SkaDataName to XrDataName.
002258       move     SkaRefNo to XrDefn.
002259       move     LSect (SkaWSorPD) to XrType.
002260       go       to bc080-Exit.
002261  *>
002262   bc070-ConnectD.
002263       if       q > 7
002264                perform bc050-Check-Q.
002265       add      1 to q.
002266       move     SkaRefNo to XrReference (q).
002267  *>
002268   bc080-Exit.
002269       Exit.
002270  *>
002271   bc090-Last-Pass2.
002272  *>****************
002273  *> printout W-S section blocks as needed
002274  *> Check if any w-s used in module if not, do conditions, functions etc
002275  *>
002276       move     70 to Line-Count.
002277       if       Section-Used-Table not = zeros
002278                move  1 to WS-Anal1
002279                perform bc100-Working-Storage-Report thru bc180-Exit 7 times.
002280  *>
002281       if       Git-Table-Count > zero
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0045

LINE    PG/LN  A...B............................................................SEQUENCE

002282                perform bc600-Print-Globals thru bc600-Exit.
002283       go       to bc190-Do-Conditions.
002284  *>
002285   bc100-Working-Storage-Report.
002286  *>****************************
002287  *>  skip section if no data
002288  *>
002289       if       USect (WS-Anal1) = zero
002290                add 1 to WS-Anal1
002291                go to bc180-Exit.
002292  *>
002293       move     spaces to saveSkaDataName.
002294       open     input Supplemental-Part2-In.
002295       read     Supplemental-Part2-In at end
002296                display Msg1
002297                go to bc000-Exit.
002298       perform  zz150-WriteHdb thru zz150-Exit.
002299       perform  zz150-WriteHdb2 thru zz150-Exit.
002300       move     zero to q.
002301  *>
002302  *> group report
002303  *>
002304       go       to bc120-IsX2.
002305  *>
002306   bc110-Read-Sorter.
002307       read     Supplemental-Part2-In at end
002308                add 1 to WS-Anal1
002309                perform  bc140-Check-Q
002310                close Supplemental-Part2-In
002311                go to bc180-Exit.
002312  *>
002313   bc120-IsX2.
002314       if       SkaDataName = spaces
002315                go to bc110-Read-Sorter.
002316       perform  bc130-PrintXRef2 thru bc170-Exit.
002317       go       to bc110-Read-Sorter.
002318  *>
002319   bc130-PrintXRef2.
002320  *>      test was 8
002321       if       SkaDataName = saveSkaDataName
002322                go to bc160-ConnectD2.
002323  *>
002324       if       SkaWSorPD > WS-Anal1
002325                go to bc170-Exit.
002326       if       SkaWSorPD not = WS-Anal1
002327                go to bc170-Exit.
002328  *>
002329  *> new variable groups 1 thru 7
002330  *>
002331       move     SkaDataName to saveSkaDataName.
002332       move     SkaWSorPD   to saveSkaWSorPD.
002333       move     SkaWSorPD2  to saveSkaWSorPD2.
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0046

LINE    PG/LN  A...B............................................................SEQUENCE

002334  *>
002335   bc140-Check-Q.
002336       if       XrDataName not = spaces
002337           and  q = zero
002338                move 1 to q.
002339       if       q > zero
002340                write PrintLine after 1
002341                add   1 to Line-Count
002342                if  Line-Count > Compiler-Line-Cnt
002343                    perform  zz150-WriteHdb thru zz150-Exit
002344                    perform  zz150-WriteHdb2 thru zz150-Exit
002345                end-if
002346                move zero to q
002347                move 1 to q2
002348                move spaces to PrintLine.
002349  *>
002350   bc150-ConnectC2.
002351       move     spaces to PrintLine.
002352       move     SkaDataName to XrDataName.
002353       move     SkaRefNo to XrDefn.
002354       move     LSect (SkaWSorPD) to XrType.
002355       go       to bc170-Exit.
002356  *>
002357   bc160-ConnectD2.
002358       if       q > 7
002359                perform bc140-Check-Q.
002360       add      1 to q.
002361       move     SkaRefNo to XrReference (q).
002362   bc170-Exit.
002363       exit.
002364  *>
002365   bc180-Exit.
002366       exit.
002367  *>
002368   bc190-Do-Conditions.
002369  *>
002370  *> Start with sorted variables
002371  *>
002372       if       Con-Tab-Count = zero
002373                go to bc195-Done.
002374       if       Con-Tab-Count > 1
002375                sort  Con-Tab-Blocks ascending Variables.
002376       move     "[S]" to hdr11a-sorted.
002377       move     spaces to hdr11b-sorted.
002378       perform  zz150-WriteHdb.
002379       perform  zz150-WriteHdb7 thru zz150-Exit.
002380       move     zero to a.
002381       perform  bc192-Print-Conditions.
002382       go       to bc194-Now-Reverse.
002383   bc192-Print-Conditions.
002384       if       a < Con-Tab-Count
002385                add 1 to a
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0047

LINE    PG/LN  A...B............................................................SEQUENCE

002386                move spaces to PrintLine2
002387                move  Conditions (a) to P-Variables
002388                move  Variables (a) to P-Conditions
002389                write PrintLine2 after 1
002390                add   1 to Line-Count
002391                if  Line-Count > Compiler-Line-Cnt
002392                    perform  zz150-WriteHdb
002393                    perform  zz150-WriteHdb7 thru zz150-Exit
002394                end-if
002395                go to bc192-Print-Conditions.
002396  *>
002397   bc194-Now-Reverse.
002398  *>
002399  *> Now sort conditions if more than 1 element in table
002400  *>   and print else dont
002401  *>
002402       if       Con-Tab-Count > 1
002403                sort  Con-Tab-Blocks ascending Conditions
002404                move     "[S]" to hdr11b-sorted
002405                move     spaces to hdr11a-sorted
002406                perform  zz150-WriteHdb
002407                perform  zz150-WriteHdb7 thru zz150-Exit
002408                move     zero to a
002409                perform  bc192-Print-Conditions.
002410       move     spaces to PrintLine2.
002411   bc195-Done.
002412       perform  bc300-Last-Pass4 thru bc399-Exit.
002413  *>
002414  *> now pass3 (fall thru)
002415  *>
002416   bc200-Last-Pass3.
002417  *>****************
002418  *> now do procedure div and ref to procedure div but no functions
002419  *>
002420       move     spaces to saveSkaDataName.
002421       move     zero to saveSkaWSorPD saveSkaWSorPD2 q2.
002422       open     input Supplemental-Part2-In.
002423       read     Supplemental-Part2-In at end
002424                display Msg1
002425                go to bc000-Exit.
002426       perform  zz150-WriteHdb.
002427       move     "Procedure" to hdr8-hd
002428       perform  zz150-WriteHdb3 thru zz150-Exit.
002429       move     zero to q.
002430       go       to bc220-IsX3.
002431   bc210-Read-Sorter3.
002432       read     Supplemental-Part2-In at end
002433                perform bc280-Check-Q
002434                close Supplemental-Part2-In
002435                if   q2 = zero
002436                     move spaces to PrintLine
002437                     move "None" to XrDataName
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0048

LINE    PG/LN  A...B............................................................SEQUENCE

002438                     write PrintLine after 1
002439                     add   1 to Line-Count
002440                end-if
002441                go to bc400-Last-Pass5.
002442  *>
002443   bc220-IsX3.
002444       if       SkaDataName = spaces
002445                go to bc210-Read-Sorter3.
002446       perform  bc230-PrintXRef3 thru bc270-Exit.
002447       go       to bc210-Read-Sorter3.
002448  *>
002449   bc230-PrintXRef3.
002450  *>
002451  *> ignore all working-storage
002452  *>
002453       if       SkaDataName not = saveSkaDataName
002454           and  SkaWSorPD not = 8
002455                move  SkaDataName to saveSkaDataName
002456                move  SkaWSorPD   to saveSkaWSorPD
002457                move  SkaWSorPD2  to saveSkaWSorPD2
002458                go to bc270-Exit.
002459  *>
002460  *> catch any redefines
002461  *>
002462       if       SkaDataName = saveSkaDataName
002463           and  saveSkaWSorPD not = 8
002464                go to bc270-Exit.
002465  *>
002466  *> catch any procedure followed by functions
002467  *>   dont think this can happen
002468  *>
002469       if       SkaDataName = saveSkaDataName
002470           and  saveSkaWSorPD = 8
002471           and  SkaWSorPD > 8
002472                go to bc270-Exit.
002473  *>
002474       if       SkaDataName = saveSkaDataName
002475                go to bc260-ConnectD3.
002476       move     SkaDataName to saveSkaDataName.
002477       move     SkaWSorPD   to saveSkaWSorPD.
002478       move     SkaWSorPD2  to saveSkaWSorPD2.
002479       perform  bc280-Check-Q.
002480   bc250-ConnectC3.
002481       move     spaces to PrintLine.
002482       move     SkaDataName to XrDataName.
002483       move     SkaRefNo to XrDefn.
002484  *>
002485  *> process sections
002486  *>
002487       if       SkaWSorPD2 not = 1
002488                move LSect (SkaWSorPD) to XrType
002489       else
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0049

LINE    PG/LN  A...B............................................................SEQUENCE

002490                move "S" to XrType.
002491       go       to bc270-Exit.
002492   bc260-ConnectD3.
002493       if       q > 7
002494                perform bc280-Check-Q.
002495       add      1 to q.
002496       move     SkaRefNo to XrReference (q).
002497   bc270-Exit.
002498       exit.
002499  *>
002500   bc280-Check-Q.
002501       if       XrDataName not = spaces
002502           and  q = zero
002503                move 1 to q.
002504       if       q > zero
002505                write PrintLine after 1
002506                add   1 to Line-Count
002507                if  Line-Count > Compiler-Line-Cnt
002508                    perform  zz150-WriteHdb
002509                    move     "Procedure" to hdr8-hd
002510                    perform  zz150-WriteHdb3 thru zz150-Exit
002511                end-if
002512                move zero to q
002513                move 1 to q2
002514                move spaces to PrintLine.
002515  *>
002516   bc300-Last-Pass4.
002517  *>****************
002518  *> now do functions
002519  *>
002520       if       USect (9) = zero
002521                go to bc399-Exit.
002522       move     spaces to saveSkaDataName.
002523       move     zero to saveSkaWSorPD saveSkaWSorPD2 q2.
002524       move     70 to Line-Count.
002525       open     input Supplemental-Part2-In.
002526       read     Supplemental-Part2-In at end
002527                display Msg1
002528                go to bc000-Exit.
002529       move     zero to q.
002530       go       to bc320-IsX4.
002531  *>
002532   bc310-Read-Sorter4.
002533       read     Supplemental-Part2-In at end
002534                perform bc335-Check-Q
002535                close Supplemental-Part2-In
002536                go to bc399-Exit.
002537   bc320-IsX4.
002538       if       SkaDataName = spaces
002539                go to bc310-Read-Sorter4.
002540       perform  bc330-PrintXRef4 thru bc360-Exit.
002541       go       to bc310-Read-Sorter4.
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0050

LINE    PG/LN  A...B............................................................SEQUENCE

002542   bc330-PrintXRef4.
002543  *>
002544  *> ignore all working-storage & procedure
002545  *>
002546       if       SkaWSorPD not = 9
002547                go to bc360-Exit.
002548  *>
002549       if       Line-Count > Compiler-Line-Cnt
002550                move "Functions" to hdr8-hd
002551                move zero to Line-Count
002552                perform zz150-WriteHdb
002553                perform zz150-WriteHdb3 thru zz150-Exit.
002554  *>
002555       if       SkaDataName = saveSkaDataName
002556                go to bc350-ConnectD4.
002557       move     SkaDataName to saveSkaDataName.
002558   bc335-Check-Q.
002559       if       XrDataName not = spaces
002560           and  q = zero
002561                move 1 to q.
002562       if       q > zero
002563                write PrintLine after 1
002564                add   1 to Line-Count
002565                move zero to q
002566                move 1 to q2
002567                move spaces to PrintLine.
002568   bc340-ConnectC4.
002569       move     spaces to PrintLine.
002570       move     SkaDataName to XrDataName.
002571       move     SkaRefNo to XrDefn.
002572       move     LSect (SkaWSorPD) to XrType.
002573       go       to bc360-Exit.
002574   bc350-ConnectD4.
002575       if       q > 7
002576                perform bc335-Check-Q.
002577       add      1 to q.
002578       move     SkaRefNo to XrReference (q).
002579   bc360-Exit.
002580       exit.
002581  *>
002582   bc399-Exit.
002583       exit.
002584  *>
002585   bc400-Last-Pass5.
002586  *>****************
002587  *> now do non referenced ws but ignore references of zero (Globals).
002588  *>
002589       move     spaces to saveSkaDataName.
002590       move     zero to saveSkaWSorPD saveSkaWSorPD2 S-Pointer.
002591       open     input Supplemental-Part2-In.
002592       read     Supplemental-Part2-In at end
002593                display Msg1
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0051

LINE    PG/LN  A...B............................................................SEQUENCE

002594                go to bc000-Exit.
002595       perform  zz150-WriteHdb.
002596       perform  zz150-WriteHdb4 thru zz150-Exit.
002597       move     zero to q.
002598       go       to bc420-IsX5.
002599  *>
002600   bc410-Read-Sorter5.
002601       read     Supplemental-Part2-In at end
002602                perform bc440-Check-4Old
002603                close Supplemental-Part2-In
002604                if   S-Pointer = zero
002605                     move spaces to PrintLine
002606                     move "None" to XrDataName
002607                     add   1 to Line-Count
002608                     write PrintLine after 1
002609                end-if
002610                go to bc500-Last-Pass6.
002611   bc420-IsX5.
002612  *>
002613  *> ignore zero refs = Globals  ??????????
002614  *>
002615       if       SkaDataName = spaces
002616             or SkaRefNo = zeros
002617                go to bc410-Read-Sorter5.
002618       perform  bc430-PrintXRef5 thru bc450-Exit.
002619       go       to bc410-Read-Sorter5.
002620   bc430-PrintXRef5.
002621  *>
002622  *> ignore redefines - No I wont
002623  *>
002624  *>     if       SkaDataName = saveSkaDataName
002625  *>         and  SkaWSorPD < 8
002626  *>              go to bc450-Exit.
002627       if       SkaDataName = saveSkaDataName
002628                move 2 to q
002629                go to bc450-Exit.
002630  *> 1st copy of a name cant be non w-s
002631       if       SkaWSorPD > 7
002632                go to bc450-Exit.
002633  *> print Only occurance then store new one
002634       perform  bc440-Check-4Old.
002635  *>
002636       move     SkaDataName to saveSkaDataName.
002637  *>
002638  *> first record for a given name
002639  *>
002640       move     spaces to PrintLine.
002641       move     SkaDataName to XrDataName.
002642       move     SkaRefNo to XrDefn.
002643       move     LSect (SkaWSorPD) to XrType.
002644       move     1 to q.
002645       go       to bc450-Exit.
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0052

LINE    PG/LN  A...B............................................................SEQUENCE

002646   bc440-Check-4Old.
002647       if       q = 1
002648                move 1 to S-Pointer
002649                add   1 to Line-Count
002650                write PrintLine after 1
002651                if  Line-Count > Compiler-Line-Cnt
002652                    perform  zz150-WriteHdb
002653                    perform  zz150-WriteHdb4 thru zz150-Exit
002654                end-if.
002655   bc450-Exit.
002656       exit.
002657  *>
002658   bc500-Last-Pass6.
002659  *>****************
002660  *> now do non referenced procedure paragraphs.
002661  *>
002662       move     spaces to saveSkaDataName.
002663       move     zero to saveSkaWSorPD S-Pointer.
002664       open     input Supplemental-Part2-In.
002665       read     Supplemental-Part2-In at end
002666                display Msg1
002667                go to bc000-Exit.
002668       perform  zz150-WriteHdb.
002669       perform  zz150-WriteHdb5 thru zz150-Exit.
002670       move     zero to q.
002671       go       to bc520-IsX6.
002672   bc510-Read-Sorter6.
002673       read     Supplemental-Part2-In at end
002674                perform bc540-Check-4Old
002675                perform bc540-Check-4Old6
002676                close Supplemental-Part2-In
002677                go to bc000-Exit.
002678   bc520-IsX6.
002679       if       SkaDataName = spaces
002680                go to bc510-Read-Sorter6.
002681       perform  bc530-PrintXRef6 thru bc550-Exit.
002682       go       to bc510-Read-Sorter6.
002683   bc530-PrintXRef6.
002684  *>
002685  *> ignore all non procedure
002686  *>
002687       if       SkaDataName = saveSkaDataName
002688                move zero to q
002689                go to bc550-Exit.
002690  *> print only occurance then store new one
002691       if       q = 1
002692          and   saveSkaWSorPD = 8
002693                move 1 to S-Pointer
002694                add   1 to Line-Count
002695                write PrintLine after 1
002696                if  Line-Count > Compiler-Line-Cnt
002697                    perform  zz150-WriteHdb
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0053

LINE    PG/LN  A...B............................................................SEQUENCE

002698                    perform  zz150-WriteHdb5 thru zz150-Exit
002699                end-if.
002700       move     SkaDataName to saveSkaDataName.
002701       move     SkaWSorPD to saveSkaWSorPD.
002702  *>
002703  *> first record for a given name
002704  *>
002705       move     spaces to PrintLine.
002706       move     SkaDataName to XrDataName.
002707       move     SkaRefNo to XrDefn.
002708       if       SkaWSorPD2 not = 1
002709                move LSect (SkaWSorPD) to XrType
002710       else
002711                move "S" to XrType.
002712       move     1 to q.
002713       go       to bc550-Exit.
002714   bc540-Check-4Old.
002715       if       q = 1 and saveSkaWSorPD = 8
002716                move 1 to S-Pointer
002717                add   1 to Line-Count
002718                write PrintLine after 1
002719                if  Line-Count > Compiler-Line-Cnt
002720                    perform  zz150-WriteHdb
002721                    perform  zz150-WriteHdb5 thru zz150-Exit
002722                end-if.
002723   bc540-Check-4Old6.
002724       if       S-Pointer = zero
002725                move spaces to PrintLine
002726                move "None" to XrDataName
002727                add   1 to Line-Count
002728                write PrintLine  after 1.
002729   bc550-Exit.
002730       exit.
002731  *>
002732   bc600-Print-Globals.
002733  *>*******************
002734  *>  Print Global List for all xrefd modules
002735  *>
002736       perform  zz150-WriteHdb thru zz150-Exit.
002737       perform  zz150-WriteHdb2b thru zz150-Exit.
002738       move     spaces to PrintLine.
002739       perform  varying a from 1 by 1 until a > Git-Table-Count
002740                move Git-RefNo (a) to XrDefn
002741                move Git-HoldWSorPD (a) to b
002742                if Reports-In-Lower
002743                    move function lower-case (Git-Word (a))      to XrDataName
002744                    move function lower-case (Git-Prog-Name (a)) to PL-Prog-Name
002745                else
002746                    move Git-Word (a) to XrDataName
002747                    move Git-Prog-Name (a) to PL-Prog-Name
002748                end-if
002749                move LSect (b) to XrType
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0054

LINE    PG/LN  A...B............................................................SEQUENCE

002750                add   1 to Line-Count
002751                write PrintLine after 1
002752                if  Line-Count > Compiler-Line-Cnt
002753                    perform  zz150-WriteHdb thru zz150-Exit
002754                    perform  zz150-WriteHdb2b thru zz150-Exit
002755                end-if
002756       end-perform.
002757  *>
002758   bc600-Exit.
002759       exit.
002760  *>
002761   bc620-Do-Global-Conditions.
002762  *>**************************
002763  *> Produce report of unused Global Conditions if any
002764  *>
002765       if       Git-Table-Count = zero
002766                go to bc629-Exit.
002767  *>
002768       perform  zz150-WriteHdb.
002769       perform  zz150-WriteHdb6 thru zz150-Exit.
002770       move     zero to a b.
002771       perform  varying a from 1 by 1 until a > Git-Table-Count
002772                if    Git-In-Use-Flag (a) = space
002773                      move  spaces to PrintLine
002774                      move  Git-Word (a)  to XrDataName
002775                      move  git-RefNo (a) to XrDefn
002776                      move LSect (Git-HoldWsorPD (a)) to XrType
002777                      if  Git-Build-No (a) = 88
002778                          move "C" to XrCond
002779                      else
002780                          move space to XrCond
002781                      end-if
002782                      move 1 to b
002783                      add   1 to Line-Count
002784                      write PrintLine after 1
002785                      if  Line-Count > Compiler-Line-Cnt
002786                          perform  zz150-WriteHdb
002787                          perform  zz150-WriteHdb6 thru zz150-Exit
002788                      end-if
002789                end-if
002790       end-perform
002791       if       b = zero
002792                move spaces to PrintLine
002793                move "None" to XrDataName
002794                add   1 to Line-Count
002795                write PrintLine after 1.
002796   bc629-Exit.
002797       exit.
002798   bc000-Exit.
002799       exit.
002800  *>
002801   zz000-Routines Section.
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0055

LINE    PG/LN  A...B............................................................SEQUENCE

002802   zz000-Inc-CobolRefNo.
002803       add      1 to Gen-RefNo1.
002804  *>
002805   zz000-OutputSource.
002806       if       List-Source
002807                move  spaces to Source-List
002808                move  SourceRecIn to SourceOutput
002809                move  Gen-RefNo1 to sl-Gen-RefNo1
002810                add   1 to Line-Count
002811                write Source-List after 1
002812                if       Line-Count > Compiler-Line-Cnt
002813                         perform zz150-WriteHdb.
002814  *>
002815   zz030-Write-Sort.
002816       move     HoldWSorPD to SkaWSorPD.
002817       move     HoldWSorPD2 to SkaWSorPD2.
002818       move     wsFoundWord2 (1:CWS) to wsFoundNewWord4.
002819       if       Reports-In-Lower
002820                move function lower-case (wsFoundWord2 (1:CWS)) to wsFoundNewWord4.
002821       if       HoldWSorPD > 7
002822                perform zz140-Function-Check thru zz140-Exit.
002823  *>
002824  *> stops dups on same fn and refno
002825  *>move 9 to SkaWSorPD
002826       if       wsFoundNewWord4 not = SkaDataName
002827           or   Gen-RefNo1 not = SkaRefNo
002828                move wsFoundNewWord4 to SkaDataName
002829                move Gen-RefNo1 to SkaRefNo
002830                move 1 to USect (SkaWSorPD)
002831                if  SkaDataName not = spaces
002832                    write SortRecord
002833                end-if
002834                if   HoldWSorPD > 7  *> only do for proc div
002835                     perform zz310-Check-For-Globals thru zz319-Exit
002836                end-if
002837       end-if.
002838  *>
002839   zz100-Get-A-Source-Record.
002840  *>*************************
002841  *> reads a source record, ignoring comments cleans out excessive
002842  *>   spaces, ';', ',' etc
002843  *>
002844       if       Had-End-Prog
002845                move zero to sw-Had-End-Prog
002846                go to zz100-New-Program-point.
002847       if       End-Prog
002848                go to zz100-Exit.
002849       if       Source-Eof
002850                display Msg8
002851                go to zz100-Exit.
002852  *>
002853       move     spaces to SourceRecIn SourceInWS.
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0056

LINE    PG/LN  A...B............................................................SEQUENCE

002854       read     SourceInput at end
002855                move 1 to sw-Source-Eof
002856                GO TO zz100-Exit.
002857       move     function upper-case (SourceRecIn) to SourceInWS.
002858  *>
002859  *> change tabs to spaces prior to printing & remove OC comment lines eg '#'
002860  *>
002861       if       (SourceInWS (1:1) = "#" or = "$")
002862                go to zz100-Get-A-Source-Record.
002863  *> next wont happen with fn.i or .t input
002864       if       (SourceInWS (1:1) = "*" or = "/")
002865                perform zz000-Inc-CobolRefNo
002866                perform zz000-Outputsource
002867                go to zz100-Get-A-Source-Record.
002868  *>
002869  *> remove unwanted chars and all multi spaces so that unstrings
002870  *>  can work easier Includes literals " " etc
002871  *> Doesnt matter if literals get screwed up in this way
002872  *>
002873       inspect  SourceInWS replacing all x"09" by space.
002874       inspect  SourceInWS replacing all ";" by space.
002875  *>
002876  *> This could cause a problem in ws so do in proc div
002877  *>
002878       if       HoldWSorPD = 8
002879                inspect SourceInWS replacing all "," by space
002880       end-if
002881       inspect  SourceInWS replacing all "&" by space.
002882       perform  zz120-Replace-Multi-Spaces thru zz120-Exit.
002883       move     Line-End to Source-Line-End.
002884  *>
002885  *> count but and O/P blank lines requested by Robert Mills
002886  *>
002887        if      d < 1
002888                perform zz000-Inc-CobolRefNo
002889                perform zz000-Outputsource
002890                go to zz100-Get-A-Source-Record.
002891  *>
002892       if       SourceInWS (1:12) = "END PROGRAM "
002893                perform zz000-Inc-CobolRefNo
002894                perform zz000-Outputsource
002895                go to zz100-Get-A-Source-Record.
002896  *>
002897       if       HoldWSorPD > 7
002898          and   (SourceInWS (1:12) = "ID DIVISION."
002899           or   SourceInWS (1:20) = "IDENTIFICATION DIVIS")
002900                move 1 to sw-End-Prog sw-Had-End-Prog sw-Nested
002901                move 1 to S-Pointer2
002902                go to zz100-Exit.
002903  *>
002904   zz100-New-Program-point.
002905       perform  zz000-Inc-CobolRefNo.
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0057

LINE    PG/LN  A...B............................................................SEQUENCE

002906       perform  zz000-Outputsource.
002907       move     1 to S-Pointer2.
002908       move     zero to Source-Words.
002909  *> == cobol85/NC/NC113M.CBL
002910  *> Check if we have a section name or proc. 1st word name only
002911  *> ie SECTION or DIVISION is on next line
002912  *> but that cant happen if line-end > 15
002913  *>
002914       if       Source-Line-End > 15
002915                move zero to HoldFoundWord2-Size
002916                             HoldFoundWord2-Type
002917                perform  zz170-Check-4-Section thru zz170-Exit
002918                go to zz100-Exit.
002919  *>
002920  *> now it could be the 1st word, 2nd word and . for line 2 or 3.
002921  *> Got it? Good, now explain it to me !
002922  *>
002923       if       HoldFoundWord2-Size = zero
002924                perform  varying d from 1 by 1 until d > 8
002925                 if Sht-Section-Name (d) = SourceInWS (1:Source-Line-End)
002926                   move Spaces               to HoldFoundWord2
002927                   move Sht-Section-Name (d) to HoldFoundWord2
002928                   add 1 Source-Line-End giving HoldFoundWord2-Size
002929                   go to zz100-Get-A-Source-Record
002930                 end-if
002931                end-perform
002932       else
002933              if   HoldFoundWord2-Type > zero
002934               and (SourceInWS (1:7) = "SECTION" or = "DIVISIO")
002935                   add 1 HoldFoundWord2-Size giving d
002936                   string SourceInWS (1:Line-End) delimited by size into HoldFoundWord2  pointer d
002937                   move HoldFoundWord2 to SourceInWS
002938                   move zero to HoldFoundWord2-Size
002939              end-if
002940       end-if
002941  *>
002942  *> Ignoring fact if period missing, ASSUMING get-a-word covers it
002943  *>   Here I go, Ass-uming again
002944  *>
002945  *> need this here
002946       perform  zz170-Check-4-Section thru zz170-Exit.
002947   zz100-Exit.
002948       exit.
002949  *>
002950   zz110-Get-A-Word.
002951  *>****************
002952  *>  S-Pointer2 must be set to => 1 prior to call
002953  *> pointer is a tally of init leading spaces
002954  *>
002955       if       Source-Eof
002956            or  End-Prog
002957                go to zz110-Exit.
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0058

LINE    PG/LN  A...B............................................................SEQUENCE

002958       if       S-Pointer2 not < Source-Line-End
002959           and  SourceInWS (S-Pointer2:1) = "."
002960                move "." to Word-Delimit
002961                move zero to Word-Length
002962                move space to SourceInWS (S-Pointer2:1)
002963                move spaces to wsFoundWord2
002964                go to zz110-Exit.
002965  *>     if       S-Pointer2 < Source-Line-End
002966  *>              inspect SourceInWS tallying S-Pointer2 for leading spaces.
002967  *>
002968       if       S-Pointer2 > Source-Line-End
002969            or  S-Pointer2 > 1024
002970                go to zz110-Get-A-Word-OverFlow.
002971  *>
002972  *> S-Pointer2 = 1st non space
002973  *>
002974   zz110-Get-A-Word-Unstring.
002975       move     spaces to wsFoundWord2.
002976       move     S-Pointer2 to s.
002977  *>*****************************************************************
002978  *> Note that after unstring sp2 will be at 1st char AFTER delimiter
002979  *>*****************************************************************
002980       unstring SourceInWS delimited by " " or "." into wsFoundWord2
002981                 delimiter Word-Delimit pointer S-Pointer2.
002982  *> check 1st char
002983       if       S-Pointer2 > 1024
002984                go to zz110-Get-A-Word-OverFlow.
002985       if       wsf1-1 = space
002986           and  SourceInWS (S-Pointer2:1) = "."
002987                move "." to Word-Delimit
002988                move zero to Word-Length
002989                move spaces to wsFoundWord2
002990                go to zz110-Exit.
002991       if       wsf1-1 = space
002992                go to zz110-Get-A-Word-Unstring.
002993       if       wsf1-3 = ">>D"                      *> if debug continue ignoring ">>D"
002994                go to zz110-Get-A-Word-Unstring.
002995       if       wsf1-2 = "*>"                       *> rest of line is comment so ignore
002996                go to zz110-Get-A-Word-OverFlow.
002997       if       (wsf1-1-Number
002998             or wsf1-1 = "-"
002999             or wsf1-1 = "+")
003000           and  SourceInWS (S-Pointer2:1) not = space
003001                move s to S-Pointer2
003002                unstring SourceInWS delimited by " " into wsFoundWord2
003003                           delimiter Word-Delimit pointer S-Pointer2.
003004  *>
003005       subtract 2 from S-Pointer2 giving e.
003006       if       Word-Delimit = space
003007           and  SourceInWS (e:1) = "."
003008                move "." to Word-Delimit.
003009  *>
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0059

LINE    PG/LN  A...B............................................................SEQUENCE

003010       if       GotPicture = 1
003011            and SourceInWS (s:3) not = "IS "
003012  *> this next test may not be needed ????
003013  *>**************        and   Word-Delimit = "."
003014          and   (SourceInWS (s:1) = "$" or = Currency-Sign
003015                               or = "/" or = "B" or = "0" or = "."
003016                               or = "," or = "+" or = "-" or = "C"
003017                               or = "D" or = "*" or = "Z" or = "9"
003018                               or = "X" or = "A" or = "S" or = "V"
003019                               or = "P" or = "1" or = "N" or = "E")
003020                move s to S-Pointer2
003021                unstring SourceInWS delimited by " " into wsFoundWord2 delimiter Word-Delimit pointer S-Pointer2
003022                end-unstring
003023                subtract 2 from S-Pointer2 giving e
003024                if  SourceInWS (e:1) = "."
003025                     move "." to Word-Delimit
003026                end-if
003027                move 1 to WasPicture
003028       end-if
003029  *>
003030  *> This could cause a problem ??????
003031  *>
003032       if       GotPicture = zero
003033                inspect  wsFoundWord2 replacing all "," by space
003034       end-if
003035  *>
003036       if       wsf1-1 = "("
003037           and (wsFoundWord2 (2:1) = quote or = "'")
003038                add 2 to s giving S-Pointer2
003039                move wsFoundWord2 (2:1) to wsFoundWord2 (1:1) Word-Delimit2
003040                go to zz110-Get-A-Word-Literal2.
003041  *>
003042       if       wsf1-1 = "("
003043           and  wsFoundWord2 (2:1) = space
003044                add 1 to S-Pointer2
003045                go to zz110-Get-A-Word.
003046       if       wsf1-1 = ")"
003047                go to zz110-Get-A-Word.
003048  *>
003049       if       wsf1-1 not = quote and not = "'"
003050                perform  varying z from 1024 by -1  until wsFoundWord2 (z:1) not = space
003051                end-perform
003052                move z to Word-Length
003053                go to zz110-Get-A-Word-Copy-Check.
003054  *>
003055   zz110-Get-A-Word-Literal.
003056       move     wsf1-1 to Word-Delimit2.
003057       add      1 to s giving S-Pointer2.
003058   zz110-Get-A-Word-Literal2.
003059       move     spaces to wsFoundWord2 (2:1023).
003060       unstring SourceInWS delimited by Word-Delimit2 into wsFoundWord2 (2:1023) delimiter Word-Delimit pointer S-
003060+ Pointer2.
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0060

LINE    PG/LN  A...B............................................................SEQUENCE

003061  *>
003062  *> so S-Pointer2 = " +1 & s = starter "   have we another Word-Delimit?
003063  *>
003064       if       Word-Delimit not = Word-Delimit2
003065                perform  varying z from 1024 by -1 until wsFoundWord2 (z:1) not = space
003066                end-perform
003067                add 1 to z
003068       else
003069                subtract s from S-Pointer2 giving z.
003070       move     Word-Delimit2 to wsFoundWord2 (z:1).
003071       move     z to Word-Length.
003072  *>
003073  *>  word is quoted literal or word so we are done
003074  *>
003075       go       to zz110-Get-A-Word-Copy-Check.
003076   zz110-Get-A-Word-OverFlow.
003077       move     1 to S-Pointer2.
003078       perform  zz100-Get-A-Source-Record thru zz100-Exit.
003079       if       Source-Eof
003080                go to zz110-Exit.
003081       go       to zz110-Get-A-Word.
003082   zz110-Get-A-Word-Copy-Check.
003083  *>
003084       add      1 to Source-Words.
003085       if we-are-testing
003086          display "zz110: WD=" word-delimit
003087                  " WSF2=" wsfoundword2 (1:word-length).
003088       if       Word-Length < 1
003089                display "zz110-GAWCH: Oops, zero length word"
003090                display " Report this to support".
003091  *>
003092  *> if the leading char check when delim is period dont work
003093  *>   then this will be tested higher up in code !
003094  *>
003095       if       wsFoundWord2 (1:3) not = "IS "
003096            and GotPicture = 1
003097                move zero to GotPicture.
003098  *>
003099       if       wsFoundWord2 (1:4) = "PIC "
003100             or wsFoundWord2 (1:8) = "PICTURE "
003101                move 1 to GotPicture.
003102   zz110-Exit.
003103       exit.
003104  *>
003105   zz120-Replace-Multi-Spaces.
003106  *>**************************
003107  *> remove any multi spaces within a source line
003108  *>   find actual lengh of record in d
003109  *> This code is redundent when using source output from cobc or via filename.i
003110  *>
003111  *> run profiler against these routines and tidy them up if needed
003112  *>
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0061

LINE    PG/LN  A...B............................................................SEQUENCE

003113       perform  varying d from 1024 by -1 until SourceInWS (d:1) not = space
003114       end-perform
003115       if       d < 1
003116                go to zz120-Exit.
003117  *>
003118       move     zero to a b c.
003119       move     spaces to wsFoundNewWord5.
003120       perform  zz120-Kill-Space thru zz120-Kill-Space-Exit.
003121       move     spaces to SourceInWS.
003122       move     wsFoundNewWord5 (1:b) to SourceInWS.
003123       move     b to Line-End d.
003124       if we-are-testing
003125          display "zz120A b=" b " after=" SourceInWS (1:b).
003126       go       to zz120-Exit.
003127  *>
003128   zz120-Kill-Space.
003129       add      1 to a.
003130       if       a > d
003131                go to zz120-Kill-Space-Exit.
003132       if       SourceInWS (a:1) = space and c = 1
003133                add 1 to b
003134                move zero to c
003135                go to zz120-Kill-Space.
003136  *>
003137       if       SourceInWS (a:1) = space
003138                go to zz120-Kill-Space.
003139       subtract 1 from a giving e.         *> a will always be 2 or more here
003140       if       SourceInWS (a:1) = "("
003141           and  SourceInWS (e:1) not = space
003142           and  HoldWSorPD > 7
003143                add 2 to b
003144       else
003145                add 1 to b.
003146       move     SourceInWS (a:1) to wsFoundNewWord5 (b:1).
003147       move     1 to c.
003148       go       to zz120-Kill-Space.
003149   zz120-Kill-Space-Exit.
003150       exit.
003151  *>
003152   zz120-Exit.
003153       exit.
003154  *>
003155   zz130-Extra-Reserved-Word-Check.
003156  *>*******************************
003157  *>  Check for any other reserved words not in other checks
003158  *>  note that max reserved word is 25 characters, so compare like 4 like
003159  *>
003160       move     zero to a.
003161       search   all Reserved-Names at end go to zz130-exit
003162                when Resvd-Word (Resvd-Idx) = wsFoundWord2 (1:30)
003163                      set a to Resvd-Idx.
003164       if       a not = zero
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0062

LINE    PG/LN  A...B............................................................SEQUENCE

003165          and   wsFoundWord2 (1:8) = "FUNCTION" or = "function"
003166                move 1 to FoundFunction
003167       else
003168                move zero to FoundFunction.
003169   zz130-Exit.
003170       exit.
003171  *>
003172   zz140-Function-Check.
003173  *>********************
003174  *> CALLS:  Only after moving all values to SortRecord and before write verb.
003175  *>
003176  *> Do we have an intrinsic function name
003177  *>           if so modify sort rec for section printing
003178  *> Note that P-oc-implemented = zero if not implemented,
003179  *>    but treated as the same as its still a reserved word
003180  *>
003181       move     zero to F-Pointer.
003182       search   all All-Functions  at end go to zz140-exit
003183                when P-function (All-Fun-Idx) = function upper-case (wsFoundNewWord4)
003184                    move 9 to SkaWSorPD
003185                    move 1 to SkaWSorPD2
003186                    set F-Pointer to All-Fun-Idx.
003187   zz140-Exit.
003188       exit.
003189  *>
003190   zz150-WriteHdb.
003191  *> Have a blank line for users reading the listing file avoiding the ugly header placement.
003192       move     spaces to PrintLine.
003193       if       Page-No not = zero
003194                write PrintLine after 1
003195       end-if
003196  *>
003197       move     spaces to h1programid.
003198       accept   hddate from date YYYYMMDD.     *> 1.01.21
003199  *>
003200  *>  Here we adjust date format for country but is Windoz playing nice
003201  *>   i.e., compatible with *nix?  Soon find out from users.
003202  *>
003203       if       hddate not = "00000000"
003204                perform  zz400-Convert-Date thru zz400-Exit.
003205       accept   hdtime from time.
003206       if       hdtime not = "00000000"
003207                move hd-hh to hd2-hh
003208                move hd-mm to hd2-mm
003209                move hd-ss to hd2-ss
003210                move hd-uu to hd2-uu.
003211  *>
003212       string   HoldID delimited by space
003213                "    " delimited by size
003214                hd-date-time delimited by size into h1programid.
003215       add      1 to Page-No.
003216       move     Page-No to H1-Page.
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0063

LINE    PG/LN  A...B............................................................SEQUENCE

003217       if       Page-No = 1
003218                write PrintLine from hdr1 after 1
003219       else
003220                write PrintLine from hdr1 after page
003221       end-if
003222       move     spaces to PrintLine.
003223       write    PrintLine after 1.
003224       move     2 to Line-count.
003225   zz150-WriteHdb1.
003226       move     spaces to Hdr5-Prog-Name.
003227       string   HoldID delimited by space
003228                " (" delimited by size
003229                HoldID-Module delimited by space
003230                ")"  delimited by size
003231                into Hdr5-Prog-Name.
003232       move     Hdr5-Prog-Name to Hdr6-Hyphens.
003233       inspect  hdr6-hyphens replacing characters by "-"
003234                before initial "  ".
003235       write    PrintLine from hdr5-symbols.
003236       write    PrintLine from hdr6-symbols.
003237       add      2 to Line-Count
003238       go       to zz150-Exit.
003239   zz150-WriteHdb2.
003240       move     spaces to PrintLine.
003241       write    PrintLine.
003242       move     spaces to hdr7-variable.
003243       string   Full-Section-Name (WS-Anal1) delimited space
003244                                         ")" delimited by size into hdr7-variable.
003245       write    PrintLine from hdr7-ws.
003246       write    PrintLine from hdr3.
003247       move     spaces to PrintLine.
003248       write    PrintLine.
003249       add      4 to Line-Count
003250       go       to zz150-Exit.
003251   zz150-WriteHdb2b.
003252       move     spaces to PrintLine.
003253       write    PrintLine.
003254       move    "ALL GLOBALS)" to hdr7-variable.
003255       write    PrintLine from hdr7-ws.
003256       write    PrintLine from hdr3.
003257       move     spaces to PrintLine.
003258       write    PrintLine.
003259       add      4 to Line-Count
003260       go       to zz150-Exit.
003261   zz150-WriteHdb3.
003262       write    PrintLine from hdr8-ws.
003263       write    PrintLine from hdr3.
003264       move     spaces to PrintLine.
003265       write    PrintLine.
003266       add      3 to Line-Count
003267       go       to zz150-Exit.
003268   zz150-WriteHdb4.
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0064

LINE    PG/LN  A...B............................................................SEQUENCE

003269       write    PrintLine from hdr9.
003270       move     spaces to PrintLine.
003271       write    PrintLine.
003272       add      2 to Line-Count
003273       go       to zz150-Exit.
003274   zz150-WriteHdb5.
003275       write    PrintLine from hdr10.
003276       move     spaces to PrintLine.
003277       write    PrintLine.
003278       add      2 to Line-Count
003279       go       to zz150-Exit.
003280   zz150-WriteHdb6.
003281       write    PrintLine from hdr9B.
003282       move     spaces to PrintLine.
003283       write    PrintLine.
003284       add      2 to Line-Count
003285       go       to zz150-Exit.
003286   zz150-WriteHdb7.
003287       write    PrintLine from hdr11.
003288       write    PrintLine from hdr12-hyphens.
003289       move     spaces to PrintLine.
003290       write    PrintLine.
003291       add      3 to Line-Count
003292       go       to zz150-Exit.
003293   zz150-WriteHdb8.
003294       write    PrintLine from hdr2.
003295       write    PrintLine from hdr3.
003296       move     spaces to PrintLine.
003297       write    PrintLine.
003298       add      3 to Line-Count
003299       go       to zz150-Exit.
003300
003301
003302   zz150-Exit.
003303       exit.
003304  *>
003305   zz160-Clean-Number.
003306        move    zero to Build-Number.
003307        if      Word-Length = 1
003308                move wsf3-1 to Build-Number
003309                go to zz160-Exit.
003310        if      Word-Length = 2
003311                compute Build-Number = (wsf3-1 * 10) + wsf3-2.
003312   zz160-Exit.
003313       exit.
003314  *>
003315   zz170-Check-4-Section.
003316       move     space to GotASection.
003317       if       HoldWSorPD = 8
003318                go to zz170-Exit.
003319  *>
003320       perform  varying a2 from 1 by 1 until a2 > 8
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0065

LINE    PG/LN  A...B............................................................SEQUENCE

003321                if sv1What = Section-Name (a2)
003322                    move a2 to HoldWSorPD
003323                    move "Y" to GotASection
003324         if We-Are-Testing display "Found zz170 " sv1What  end-if
003325                    if a2 = 8
003326                        move zero to HoldWSorPD2
003327                    end-if
003328                    exit perform
003329                end-if
003330       end-perform
003331  *>
003332  *> Changed section so we can clear Global flag
003333  *>
003334       if       GotASection = "Y"
003335                move zero to sw-Git.
003336   zz170-Exit.
003337       exit.
003338  *>
003339   zz180-Open-Source-File.
003340  *>*********************
003341  *> get source filename
003342  *>
003343       accept   Arg-Number from argument-number.
003344       if       Arg-Number > zero
003345                move zero to String-Pointer
003346                perform zz180-Get-Program-Args Arg-Number times
003347       else     go to zz180-Check-For-Param-Errors.
003348  *>
003349  *> setup source filename
003350  *>    dont need the pointers - kill it after next test
003351       move     1 to String-Pointer.
003352       unstring Arg-Value (1) delimited by spaces into SourceFileName pointer String-Pointer.
003353  *>
003354  *> Now get temp environment variable & build temp sort file names
003355  *>
003356       perform  zz182-Get-Env-Set-TempFiles thru zz182-Exit.
003357  *>
003358   zz180-Check-For-Param-Errors.
003359       if       SourceFileName = spaces or
003360                String-Pointer < 5
003361                display Prog-Name
003362                move function current-date to WS-When-Compiled
003363                display "Copyright (c) 1967-" no advancing
003364                display WS-WC-YY no advancing
003365                display " Vincent Bryan Coen"
003366                display " "
003367                display "Parameters are"
003368                display " "
003369                display "1: Source File name (Mandatory)"
003370                display "2: -R    Do NOT print out source code prior to xref listings in cobc free form"
003371                display "3: -L    reports in lowercase else upper"
003372                display "4: -TEST produces testing info (for programmers use only)"
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0066

LINE    PG/LN  A...B............................................................SEQUENCE

003373                display "5: -DR   Display All reserved words & stop"
003374                display "6: -G    produce only group xref: Comp. MF"
003375                display "7: -A    Append printed output to an existing file if present"
003376                display "8: -H    Display this help message"
003377                display "   --H   as -H"
003378                move zero to return-code
003379                goback.
003380  *>
003381       move     1 to String-Pointer String-Pointer2.
003382       perform  varying a from 1024 by -1 until Sourcefilename (a:1) not = space
003383       end-perform
003384       move     a to b.
003385       perform  varying b from b by -1 until b < 2 or SourceFileName (b:1) = "."
003386       end-perform
003387       if       b not < 2
003388                subtract 1 from b
003389                move SourceFileName (1:b) to Prog-BaseName
003390                add 1 to b
003391       end-if
003392
003393  *>     unstring Arg-Value (1) delimited by "." into Prog-BaseName
003394  *>              with pointer String-Pointer.
003395  *>
003396       if       Prog-BaseName = SourceFileName
003397                string  Prog-BaseName  delimited by space
003398                ".pre"        delimited by size into SourceFileName.
003399  *>
003400       string   Prog-BaseName delimited by space
003401                ".lst"        delimited by size into Print-FileName
003402                with pointer String-Pointer2.
003403  *>
003404  *> Can now convert to upper-case as source filename is processed
003405  *>
003406       move     function upper-case (Arg-Vals) to Arg-Vals.
003407  *>
003408  *> Check if help requested
003409  *>
003410       if       "-H" = Arg-Value (2) or Arg-Value (3)
003411             or Arg-Value (4) or Arg-Value (5) or Arg-Value (6)
003412                move zero to String-Pointer
003413                go to zz180-Check-For-Param-Errors.
003414       if       "--H" = Arg-Value (2) or Arg-Value (3)
003415             or Arg-Value (4) or Arg-Value (5) or Arg-Value (6)
003416                move zero to String-Pointer
003417                go to zz180-Check-For-Param-Errors.
003418  *>
003419  *> Check v2 if we are NOT listing the source
003420  *>
003421       if      "-R" = Arg-Value (2) or Arg-Value (3)
003422             or Arg-Value (4) or Arg-Value (5) or Arg-Value (6)
003423                move "N" to sw-2.
003424  *>
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0067

LINE    PG/LN  A...B............................................................SEQUENCE

003425  *> Check v4 if we are dumping all reserved words
003426  *>
003427       if       "-DR" = Arg-Value (2) or Arg-Value (3)
003428             or Arg-Value (4) or Arg-Value (5) or Arg-Value (6)
003429                move 1 to sw-4
003430                go to zz180-Exit.
003431  *>
003432  *> Check v5 if we are testing
003433  *>
003434       if       "-TEST" = Arg-Value (2) or Arg-Value (3)
003435             or Arg-Value (4) or Arg-Value (5) or Arg-Value (6)
003436                display " extra information for testing"
003437                move "Y" to sw-5.
003438  *>
003439  *> Check v6 if we are are doing Lower case reports insted of upper
003440  *>
003441       if       "-L" = Arg-Value (2) or Arg-Value (3)
003442             or Arg-Value (4) or Arg-Value (5) or Arg-Value (6)
003443                move 1 to sw-6.
003444  *>
003445  *> Check v7 if we are appending listing o/p to an existing file.
003446  *>
003447       if       "-A" = Arg-Value (2) or Arg-Value (3)
003448             or Arg-Value (4) or Arg-Value (5) or Arg-Value (6)
003449                move 1 to sw-7.
003450  *>
003451  *>***************************************************************
003452  *>  THIS BLOCK FOR TESING and Comparing listing against MF etc  *
003453  *>***************************************************************
003454  *>
003455  *> Check v1 if we are are only doing a group xref ie W-S and procedure
003456  *>
003457       if       "-G " = Arg-Value (2) or Arg-Value (3)
003458             or Arg-Value (4) or Arg-Value (5) or Arg-Value (6)
003459                move "A" to sw-1.
003460  *>***************************************************************
003461  *>    END OF SPECIAL TEST BLOCK but with bc030 - bc080 also     *
003462  *>***************************************************************
003463       open     input SourceInput.
003464       if       FS-Reply not = zero
003465                display Msg9
003466                move 16 to return-code
003467                goback.
003468  *>
003469  *>  Set WS-Locale-Time-Zone from LC_TIME - Default [3] to Intl (ccyymmdd)
003470  *>
003471       accept   WS-Locale from Environment "LC_TIME" on exception
003472                move    3 to WS-Local-Time-Zone.
003473       if       WS-Locale (1:5) = "en_GB"
003474                move    1 to WS-Local-Time-Zone
003475       else
003476        if      WS-Locale (1:5) = "en_US"
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0068

LINE    PG/LN  A...B............................................................SEQUENCE

003477                move    2 to WS-Local-Time-Zone.   *> others before the period
003478  *>
003479       go       to zz180-Exit.
003480  *>
003481   zz180-Get-Program-Args.
003482       add      1 to String-Pointer.
003483       accept   Arg-Value (String-Pointer) from argument-value.
003484  *>
003485   zz182-Get-Env-Set-TempFiles.
003486  *>**************************
003487       accept   Temp-PathName from Environment "TMPDIR".
003488       if       Temp-PathName = spaces
003489                accept Temp-PathName from Environment "TMP"
003490                if  Temp-PathName = spaces
003491                    accept Temp-PathName from Environment "TEMP"
003492                    if  Temp-PathName = spaces
003493                        move "/tmp" to Temp-PathName.
003494       if       Temp-PathName (1:1) = "/"   *> Its Linux/Unix
003495                move "/" to OS-Delimiter.
003496       if       Temp-PathName (1:1) = "\"   *> Its Windoz *> "
003497                inspect Temp-PathName replacing all "/" by "\"   *> in case of /tmp "
003498                move "\" to OS-Delimiter.  *> "
003499       string   Temp-PathName delimited by space
003500                 OS-Delimiter delimited by size
003501                  "Part1.tmp" delimited by size   into Supp-File-1.
003502       string   Temp-PathName delimited by space
003503                 OS-Delimiter delimited by size
003504                  "Part2.tmp" delimited by size   into Supp-File-2.
003505       string   Temp-PathName delimited by space
003506                 OS-Delimiter delimited by size
003507                   "Sort1tmp" delimited by size   into Sort1tmp.
003508       if we-are-testing
003509             display  "Temp path used is " Temp-PathName.
003510   zz182-Exit.
003511       Exit.
003512  *>
003513   zz180-Exit.
003514       exit.
003515  *>
003516   zz190-Init-Program.
003517  *>
003518  *>****************************************************************
003519  *> initialise all Variables should we be processing nested modules
003520  *>****************************************************************
003521  *>
003522       move     spaces to PrintLine Global-Current-Word SortRecord
003523                saveSkaDataName SourceFileName Print-FileName
003524                wsFoundNewWord4 wsFoundNewWord3
003525                wsFoundNewWord2 wsFoundNewWord.
003526       move     high-values to Condition-Table.
003527       move     10 to Con-Tab-Size.
003528       move     zeros to GotEndProgram sw-Source-Eof Section-Used-Table
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0069

LINE    PG/LN  A...B............................................................SEQUENCE

003529                HoldWSorPD HoldWSorPD2 Con-Tab-Count.
003530       move     1 to S-Pointer F-Pointer S-Pointer2.
003531   zz190-Exit.
003532       exit.
003533  *>
003534   zz200-Load-Git.
003535  *>
003536  *> Load the Global Item Table with item associated with 01/FD Global
003537  *>
003538       if       Global-Current-Level = 99
003539                go to zz200-Exit.
003540       add      1 to Git-Table-Count.
003541       if       Git-Table-Count > Git-Table-Size
003542           and  Git-Table-Size < 10000
003543                add 10 to Git-Table-Size.
003544       if       Git-Table-Size > 10000
003545                move 10001 to Git-Table-Size        *> just in case
003546                display Msg10
003547                go to zz200-Exit.
003548       move     Global-Current-Word to Git-Word (Git-Table-Count).
003549       move     space to Git-In-Use-Flag (Git-Table-Count).
003550       move     Global-Current-RefNo to Git-RefNo (Git-Table-Count).
003551       move     Build-Number to Git-Build-No (Git-Table-Count).
003552       move     HoldID to Git-Prog-Name (Git-Table-Count).
003553       move     HoldWSorPD  to Git-HoldWSorPD (Git-Table-Count).
003554       move     HoldWSorPD2 to Git-HoldWSorPD2 (Git-Table-Count).
003555   zz200-Exit.
003556       exit.
003557  *>
003558   zz310-Check-For-Globals.
003559  *>**********************
003560       move zero to a1.
003561       perform  varying a1 from 1 by 1 until a1 > Git-Table-Count
003562                if  Git-Word (a1) = wsFoundNewWord4
003563                    move "1" to Git-In-Use-Flag (a1)
003564                    exit perform
003565                end-if
003566       end-perform.
003567  *>
003568   zz319-Exit.
003569       exit.
003570  *>
003571   zz400-Convert-Date.
003572  *>*****************
003573  *>
003574  *>  Converts date from Accept DATE YYYYMMDD to UK/USA/Intl date format
003575  *>****************************************************
003576  *> Input:   HDDate
003577  *> output:  HD2-Date  as UK/US/Intl date format or more as required.
003578  *>
003579       if       WS-Local-Time-Zone = zero or > 3
003580                move 3 to WS-Local-Time-Zone.   *> Intl - ccyy/mm/dd - force if not set but it should be.
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0070

LINE    PG/LN  A...B............................................................SEQUENCE

003581  *>
003582       if       LTZ-UK
003583                move "dd/mm/ccyy" to HD2-date
003584                move HD-C to HD2-C
003585                move hd-y to hd2-y
003586                move hd-m to hd2-m
003587                move hd-d to hd2-d
003588       else
003589        if      LTZ-USA                *> swap month and days
003590                move "mm/dd/ccyy" to HD2-date
003591                move hd-m to hd2-Date (1:2)
003592                move hd-d to hd2-Date (4:2)
003593                move HD-C to HD2-C
003594                move hd-y to hd2-y
003595        else
003596  *>
003597  *> So its International date format
003598  *>
003599         if     LTZ-Unix
003600                move "ccyy/mm/dd" to HD2-Date
003601                move HD-C  to HD2-Date (1:2)
003602                move HD-Y  to HD2-Date (3:2)
003603                move HD-M  to HD2-Date (6:2)
003604                move HD-D  to HD2-Date (9:2).
003605  *>
003606   zz400-Exit.
003607       exit.
003608  *>
003609  *> End of cobxref source
003610  *>
003611   Identification division.
003612  *>**********************
003613        program-id.       get-reserved-lists.
003614  *>**
003615  *>    Author.           Vincent Bryan Coen, Applewood Computers.
003616  *>                      Stag Green Avenue, Hatfield, Hertfordshire, UK.
003617  *>**
003618  *>    Date-Written.     26 September 2010.
003619  *>**
003620  *>    Security.         Copyright (C) 2010- forever, Vincent Bryan Coen.
003621  *>                      Distributed under the GNU General Public License
003622  *>                      v2.0. Only. See the file COPYING for details but
003623  *>                      for use within GNU/Open Cobol ONLY.
003624  *>**
003625  *>    Usage.            Get the reserved word lists from GNU/Open Cobols
003626  *>                      cobc, from v1.1 & v2.n for Intrinsic and reserved words.
003627  *>                      Note that Mnemonics - devices, features and switch names
003628  *>                      are NOT obtained so that they can appear in xref listings.
003629  *>**
003630  *>    Called by.
003631  *>                      cobxref
003632  *>**
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0071

LINE    PG/LN  A...B............................................................SEQUENCE

003633  *>    Calls.
003634  *>                      cobc
003635  *>                      CBL_DELETE_FILE
003636  *>                      SYSTEM
003637  *>
003638  *>    Changes.          See Changelog & Prog-Name.
003639  *>
003640  *>*************************************************************************
003641  *>
003642  *> Copyright Notice.
003643  *>*****************
003644  *>
003645  *> This file/program is part of Cobxref AND GNUCobol and is copyright
003646  *> (c) Vincent B Coen 2010 - forever.
003647  *>
003648  *> This program is free software; you can redistribute it and/or modify it
003649  *> under the terms of the GNU General Public License as published by the
003650  *> Free Software Foundation; version 2 ONLY within Open Cobol, providing
003651  *> the package continues to be issued or marketed as 'GNU/Open Cobol' and
003652  *> is available FREE OF CHARGE AND WITH FULL SOURCE CODE.
003653  *>
003654  *> It cannot be included or used with any other Compiler without the
003655  *> written Authority by the copyright holder, Vincent B Coen.
003656  *>
003657  *> Cobxref is distributed in the hope that it will be useful, but WITHOUT
003658  *> ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
003659  *> FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
003660  *> for more details. If it breaks, you own both pieces but I will endevor
003661  *> to fix it, providing you tell me about the problem.
003662  *>
003663  *> You should have received a copy of the GNU General Public License along
003664  *> with Cobxref; see the file COPYING.  If not, write to the Free Software
003665  *> Foundation, 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.
003666  *>*************************************************************************
003667  *>
003668   environment division.
003669  *> configuration section.
003670  *> source-computer.      linux.
003671  *> object-computer.      linux.
003672   input-Output section.
003673   file-control.
003674  *>
003675       select   Reserve-Stream   assign  "res.tmp"
003676                organization     line sequential
003677                status           FS-Reply.
003678       select   Intrinsic-Stream assign  "int.tmp"
003679                organization     line sequential
003680                status           FS-Reply.
003681  *>
003682   data division.
003683   file section.
003684  *>***********
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0072

LINE    PG/LN  A...B............................................................SEQUENCE

003685  *>
003686  *> CAUTION: Both of these files can and probably do contain Tab chars
003687  *>
003688   fd  Reserve-Stream.
003689   01  Res-Record            pic x(128).
003690  *>
003691   fd  Intrinsic-Stream.
003692   01  Int-Record            pic x(128).
003693  *>
003694   working-storage section.
003695  *>**********************
003696   77  Prog-Name              pic x(27) value "get-reserved-lists v1.00.01".
003697   77  S-Ptr                  Binary-long  value zero.
003698   77  Res-Start              Binary-char  value zero.
003699   77  ws-Function-Table-Size pic s9(5)  comp value zero.
003700   77  ws-Resvd-Table-Size    pic s9(5)   comp value zero.
003701   77  FS-Reply               pic 99.
003702  *>
003703   01  Placement-Res          pic x(30).
003704   01  Placement-Res-State    pic x.
003705  *>
003706   01  Error-messages.                      *> Sorry, English msgs Only
003707  *> Msg1 thru 10 in cobxref
003708       03 Msg11     pic x(60) value "Msg11 Cannot run 'cobc --list-intrinsics', cobc not in path?".
003709       03 Msg12     pic x(58) value "Msg12 Cannot run 'cobc --list-reserved', cobc not in path?".
003710       03 Msg13     pic x(51) value "Msg13 Intrinsic word table was successfully updated".
003711       03 Msg14     pic x(49) value "Msg14 Reserve word table was successfully updated".
003712  *> Msg16 in cobxref
003713  *>
003714   Linkage section.
003715  *>**************
003716   01  ws-Return-Code          binary-char.
003717  *>
003718  *> Here for cb_intrinsic_table in G/OC see cobc/reserved.c in the GNU/Open Cobol source directory but
003719  *>    Totally ingoring the system_table as not needed/used by xref
003720  *>
003721  *> Also note that the number 0 or 1 indicates if the function/reserved word is implemented in
003722  *> GNU/Open Cobol but xref treats all, as being reserved as they are so (reserved that is)
003723  *>
003724   01  Function-Table-R.
003725       03  All-Functions                 occurs 256 ascending key P-Function indexed by All-Fun-Idx.
003726           05  P-oc-implemented  pic x.
003727           05  P-Function        pic x(30).
003728   01  Function-Table-Size       pic s9(5)  comp.
003729  *>
003730  *> Note that system names are omitted so that they turn up in the cross refs
003731  *>
003732  *> Here for all reserved words in G/OC see :
003733  *>           struct reserved reserved_words in cobc/reserved.c in the GNU/Open Cobol source directory
003734  *>
003735   01  Additional-Reserved-Words-R.
003736       03  Reserved-Names                occurs 1024 ascending key Resvd-Word indexed by Resvd-Idx.
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0073

LINE    PG/LN  A...B............................................................SEQUENCE

003737           05  Resvd-Implemented pic x.
003738           05  Resvd-Word        pic x(30).
003739   01  Resvd-Table-Size          pic s9(5)   comp.
003740  *>
003741   procedure division using ws-Return-Code
003742                            Function-Table-R
003743                            Function-Table-Size
003744                            Additional-Reserved-Words-R
003745                            Resvd-Table-Size.
003746  *>===================================================
003747   aa000-startup section.
003748   aa010-Init.
003749       call     "SYSTEM" using "cobc --list-intrinsics > int.tmp".
003750       call     "SYSTEM" using "cobc --list-reserved > res.tmp".
003751       move     zero to ws-return-code.
003752       perform  ba000-Get-Intrinsics-Words.
003753       if       ws-return-code not zero
003754                exit program.
003755       perform  ca000-Get-Reserved-Words.
003756       call     "CBL_DELETE_FILE" using "res.tmp". *> delete temp files
003757       call     "CBL_DELETE_FILE" using "int.tmp".
003758       exit     program.
003759  *>
003760   ba000-Get-Intrinsics-Words section.
003761   ba010-init.
003762       open     input Intrinsic-Stream.
003763       if       FS-Reply = 35
003764                display Msg11.
003765       if       FS-Reply not = zero
003766                move FS-Reply to ws-return-code
003767                exit section.
003768  *>
003769       move     Function-Table-Size to ws-Function-Table-Size.  *> keep old
003770       move     high-values to Function-Table-R.                *> there is a data stream so we can clear the tabl
003770+ e
003771       move     zero to Function-Table-Size.
003772  *>
003773   ba020-get-thru-base-data.
003774       move     high-values to Int-Record.
003775       read     Intrinsic-Stream at end
003776                move zero to ws-return-code
003777                close Intrinsic-Stream
003778                if Function-Table-Size > ws-Function-Table-Size
003779                   display Msg13                                *> updated
003780                end-if
003781                exit section.
003782  *>
003783       if       Int-Record (1:3) = spaces                       *> blank line
003784         or     Int-Record (1:18) = "Intrinsic Function"        *> header
003785                go to ba020-get-thru-base-data.
003786  *>
003787  *>  This point we now have data
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0074

LINE    PG/LN  A...B............................................................SEQUENCE

003788  *>
003789       move     1 to S-Ptr.
003790       move     spaces to Placement-Res Placement-Res-State.
003791       unstring Int-Record delimited by all x"09" or all spaces into Placement-Res pointer S-Ptr.
003792       unstring Int-Record delimited by all x"09" or all spaces into Placement-Res-State pointer S-Ptr.
003793       add      1 to Function-Table-Size.
003794       move     Placement-Res to P-Function (Function-Table-Size).
003795       If       Placement-Res-State = "Y"
003796                move "1" to P-oc-implemented (Function-Table-Size)
003797       else
003798                move "0" to P-oc-implemented (Function-Table-Size).
003799  *>
003800       go to ba020-get-thru-base-data.
003801  *>
003802   ca000-Get-Reserved-Words section.
003803  *>*******************************
003804   ca010-init.
003805       open     input Reserve-Stream.
003806       if       FS-Reply = 35
003807                display Msg12.
003808       if       FS-Reply not = zero
003809                move FS-Reply to ws-return-code
003810                exit section.
003811  *>
003812       move     Resvd-Table-Size to ws-Resvd-Table-Size.
003813       move     high-values to Additional-Reserved-Words-R.  *> there is a data stream so we can clear the table
003814       move     zero to Resvd-Table-Size.
003815       move     zero to Res-Start.
003816  *>
003817   ca020-get-thru-base-data.
003818       move     high-values to Res-Record.
003819       read     Reserve-Stream at end
003820                go to ca030-Clean-Up.
003821  *>
003822       if       Res-Record (1:3) = spaces                       *> blank line
003823         or     Res-Record (1:14) = "Reserved Words"            *> header
003824                go to ca020-get-thru-base-data
003825       end-if
003826       if       Res-Record (1:16) = "Extra (obsolete)"
003827                perform  forever
003828                   read Reserve-Stream at end
003829                        go to ca030-Clean-Up
003830                   end-read
003831                   if Res-Record (1:14) = "Extra internal"
003832                      move 1 to Res-Start              *> Now we dont have res-State set to 1 so help to make it s
003832+ o
003833                      go to ca020-get-thru-base-data
003834                   end-if
003835                end-perform
003836       end-if
003837  *>
003838  *>  This point we now have data
GnuCOBOL 2.2.0          cobxref.cbl                                                   Sat Sep 16 18:09:58 2017  Page 0075

LINE    PG/LN  A...B............................................................SEQUENCE

003839  *>
003840       move     1 to S-Ptr.
003841       move     spaces to Placement-Res Placement-Res-State.
003842       unstring Res-Record delimited by all x"09" or all spaces into Placement-Res pointer S-Ptr.
003843       unstring Res-Record delimited by all x"09" or all spaces into Placement-Res-State pointer S-Ptr.
003844  *>
003845  *> Ignore bad 'reserved' names such as 'LENGTH OF'
003846  *>
003847       if       Placement-Res = "'LENGTH"
003848                go to ca020-get-thru-base-data.
003849  *>
003850       add      1 to Resvd-Table-Size.
003851       move     Placement-Res to Resvd-Word (Resvd-Table-Size).
003852       If       Placement-Res-State = "Y"
003853                move "1" to Resvd-Implemented (Resvd-Table-Size)
003854       else
003855        if      Placement-Res-State = "N"
003856                move "0" to Resvd-Implemented (Resvd-Table-Size)
003857        else
003858         If     Res-Start = 1                                      *> have a Extra internal with no implemented fl
003858+ ag
003859                move "1" to Resvd-Implemented (Resvd-Table-Size)
003860         else
003861                move "0" to Resvd-Implemented (Resvd-Table-Size)
003862         end-if
003863        end-if
003864       end-if
003865  *>
003866       go to ca020-get-thru-base-data.
003867  *>
003868   ca030-Clean-Up.
003869       move     zero to ws-return-code.
003870       close    Reserve-Stream.
003871       if       Resvd-Table-Size > ws-Resvd-Table-Size
003872                   display Msg14                                  *> updated
003873       end-if
003874       exit     section.
003875  *>
003876   end program get-reserved-lists.
003877   end program cobxref.


0 warnings in compilation group
0 errors in compilation group

ACS Cobol Xref v1.01.21          Dictionary File for COBXREF    16/09/2017  18:09:59:37                                Page    1
Symbols of Module: COBXREF (COBXREF)
------------------------------------

Data Section (FILE)              Defn    Locations
--------------------------------+---------------------------------------------------------------


FS-REPLY                        000093F  000097 000244 001291 003464
P-CONDITIONS                    000129F  002388
P-VARIABLES                     000130F  002387
PL-PROG-NAME                    000126F  002744 002747
PRINT-FILENAME                  000091F  000246 001281 003401 003523
PRINTLINE                       000113F  001656 001657 001658 001659 002246 002253 002256 002340
                                         002348 002351 002436 002438 002481 002505 002514 002563
                                         002567 002569 002605 002608 002640 002650 002695 002705
                                         002718 002725 002728 002738 002751 002773 002784 002792
                                         002795 003192 003194 003218 003220 003222 003223 003235
                                         003236 003240 003241 003245 003246 003247 003248 003252
                                         003253 003255 003256 003257 003258 003262 003263 003264
                                         003265 003269 003270 003271 003275 003276 003277 003281
                                         003282 003283 003287 003288 003289 003290 003294 003295
                                         003296 003297 003522
PRINTLINE2                      000128F  002386 002389 002410
SDSORTKEY                       000147F  002186
SKADATANAME                     000137F  001323 001325 001329 002231 002237 002239 002257 002314
                                         002321 002331 002352 002444 002453 002455 002462 002469
                                         002474 002476 002482 002538 002555 002557 002570 002615
                                         002627 002636 002641 002679 002687 002700 002706 002826
                                         002828 002831
SKAREFNO                        000140F  001327 002258 002266 002353 002361 002483 002496 002571
                                         002578 002616 002642 002707 002827 002829
SKAWSORPD                       000138F  001320 002259 002324 002326 002332 002354 002454 002456
                                         002471 002477 002488 002546 002572 002631 002643 002701
                                         002709 002816 002830 003184
SKAWSORPD2                      000139F  001321 002333 002457 002478 002487 002708 002817 003185
SL-GEN-REFNO1                   000110F  002809
SORT1TMP                        000099F  000255 003507
SORTFILE                        000099F  000145 002185
SORTRECORD                      000136F  001318 001330 002832 003522
SOURCE-LIST                     000109F  002807 002811
SOURCE-LISTING                  000091F  000108 001290 001292 001294 001298 001350 001550 001639
                                         001708 001732
SOURCEFILENAME                  000095F  000245 003352 003359 003382 003385 003389 003396 003398
                                         003523
SOURCEINPUT                     000095F  000132 001351 001551 001635 001708 001733 002854 003463
SOURCEOUTPUT                    000111F  002808
SOURCERECIN                     000133F  002808 002853 002857
SUPP-FILE-1                     000088F  000253 003501
SUPP-FILE-2                     000085F  000254 003504
SUPPLEMENTAL-PART1-OUT          000088F  000103 000135 001734 001312 001350 001550 001633 001635
                                         001709 002187
SUPPLEMENTAL-PART2-IN           000085F  000104 000142 002188 002214 002215 002224 002226 002294
                                         002295 002307 002310 002422 002423 002432 002434 002525
                                         002526 002533 002535 002591 002592 002601 002603 002664
                                         002665 002673 002676
ACS Cobol Xref v1.01.21          Dictionary File for COBXREF    16/09/2017  18:09:59:37                                Page    2
Symbols of Module: COBXREF (COBXREF)
------------------------------------

Data Section (FILE)              Defn    Locations
--------------------------------+---------------------------------------------------------------


XRCOND                          000117F  002778 002780
XRDATANAME                      000114F  002242 002257 002336 002352 002437 002482 002501 002559
                                         002570 002606 002641 002706 002726 002743 002746 002774
                                         002793
XRDEFN                          000115F  002258 002353 002483 002571 002642 002707 002740 002775
XRREFERENCE                     000120F  002266 002361 002496 002578
XRTYPE                          000116F  002259 002354 002488 002490 002572 002643 002709 002711
                                         002749 002776
ACS Cobol Xref v1.01.21          Dictionary File for COBXREF    16/09/2017  18:09:59:37                                Page    3
Symbols of Module: COBXREF (COBXREF)
------------------------------------

Data Section (WORKING-STORAGE)   Defn    Locations
--------------------------------+---------------------------------------------------------------


A                               000166W  001263 001264 001267 001268 001319 001320 001321 001323
                                         001325 001327 001328 001409 001419 001445 001463 001483
                                         001484 001488 001489 001516 001537 001567 001569 001592
                                         001604 001763 001764 001785 001810 001885 001886 001949
                                         001953 001996 001998 001998 002016 002060 002061 002062
                                         002063 002072 002094 002109 002110 002111 002113 002119
                                         002121 002123 002125 002131 002137 002138 002380 002384
                                         002385 002387 002388 002408 002739 002740 002741 002743
                                         002744 002746 002747 002770 002771 002772 002774 002775
                                         002776 002777 003118 003129 003130 003132 003137 003139
                                         003140 003146 003160 003163 003164 003382 003382 003384
A1                              000167W  003560 003561 003562 003563
A2                              000168W  003320 003321 003322 003325
ADDITIONAL-RESERVED-WORDS       000601W  001183
ADDITIONAL-RESERVED-WORDS-R     001183W  001246
ALL-FUN-IDX                     000592W  003183 003186
ALL-FUNCTIONS                   000592W  001256 003182
ALL-REPORTS                     000188W  002205
APPEND-REPORTS                  000198W  001289
ARG-NUMBER                      000223W  003343 003344 003346
ARG-VALS                        000453W  001307 003406
ARG-VALUE                       000454W  003352 003410 003411 003414 003415 003421 003422 003427
                                         003428 003434 003435 003441 003442 003447 003448 003457
                                         003458 003483
B                               000169W  002063 002071 002077 002112 002113 002136 002137 002160
                                         002171 002172 002175 002741 002749 002770 002782 002791
                                         003118 003122 003123 003125 003125 003133 003143 003145
                                         003146 003384 003385 003385 003387 003388 003389 003390
BUILD-NUMBER                    000225W  001716 001719 001725 001726 001731 001816 001819 001829
                                         001854 001861 001878 003306 003308 003311 003551
C                               000170W  002016 002075 002076 003118 003132 003134 003147
COBOL-WORD-SIZE                 000205W
COMPILER-LINE-CNT               000156W  002248 002342 002391 002507 002549 002651 002696 002719
                                         002752 002785 002812
CON-TAB-BLOCKS                  001190W  002375 002403
CON-TAB-COUNT                   001197W  001466 001468 001471 001472 001474 001475 001477 001820
                                         001830 001831 001833 001834 001836 001837 002372 002374
                                         002384 002402 003529
CON-TAB-SIZE                    001190W  001196 001466 001467 001820 001821 001822 001823 001830
                                         003527
CONDITION-TABLE                 001189W  003526
CONDITIONS                      001192W  001472 001475 001834 001837 002387 002403
CT-IN-USE-FLAG                  001194W  001477
CURRENCY-SIGN                   000229W  001505 001507 003014
CWS                             000206W  001302 001304 001375 001447 001472 001475 001731 001817
                                         001834 001837 002148 002148 002818 002820
D                               000171W  002016 002081 002082 002887 002924 002925 002927 002935
                                         002936 003113 003113 003115 003123 003130
ACS Cobol Xref v1.01.21          Dictionary File for COBXREF    16/09/2017  18:09:59:38                                Page    4
Symbols of Module: COBXREF (COBXREF)
------------------------------------

Data Section (WORKING-STORAGE)   Defn    Locations
--------------------------------+---------------------------------------------------------------


DUMP-RESERVED-WORDS             000192W  001262
E                               000172W  003005 003007 003023 003024 003139 003141
END-PROG                        000212W  001348 001632 001637 001654 001937 002847 002956
ERROR-MESSAGES                  000431W
F-POINTER                       000163W  001344 003181 003186 003530
FOUNDFUNCTION                   000259W  003166 003168
FS-REPLY                        000244W  001291 003464
FULL-SECTION-NAME               000466W  001484 003243
FUNCTION-TABLE                  000490W  000591
FUNCTION-TABLE-R                000591W  001244
FUNCTION-TABLE-SIZE             000595W  001245 001267
GEN-REFNO1                      000224W  001699 001707 001731 001847 002803 002809 002827 002829
GIT-BUILD-NO                    001207W  002777 003551
GIT-ELEMENTS                    001200W  001933 002190
GIT-HOLDWSORPD                  001205W  001320 001328 002741 002776 003553
GIT-HOLDWSORPD2                 001206W  001321 003554
GIT-IN-USE-FLAG                 001208W  002772 003549 003563
GIT-PROG-NAME                   001203W  002744 002747 003552
GIT-REFNO                       001204W  001327 002740 002775 003550
GIT-TABLE-COUNT                 001211W  001317 001319 001932 002189 002281 002739 002765 002771
                                         003540 003541 003548 003549 003550 003551 003552 003553
                                         003554 003561
GIT-TABLE-SIZE                  001200W  001210 003541 003542 003543 003544 003545
GIT-WORD                        001202W  001323 001325 001933 002190 002743 002746 002774 003548
                                         003562
GLOBAL-ACTIVE                   000218W  001856 001860 001877 001907
GLOBAL-CURRENT-LEVEL            000258W  001686 001689 001720 001723 001846 003538
GLOBAL-CURRENT-REFNO            000257W  001699 001847 003550
GLOBAL-CURRENT-WORD             000256W  001698 001848 001908 003522 003548
GLOBAL-ITEM-TABLE               001199W  001240
GOTASECTION                     000235W  001622 001675 001678 001679 003316 003323 003334
GOTENDPROGRAM                   000226W  003528
GOTPICTURE                      000227W  003010 003032 003096 003097 003101
H1-PAGE                         000320W  003216
H1PROG-NAME                     000304W  001339
H1PROGRAMID                     000318W  003197 003214
HAD-END-PROG                    000215W  002844
HAVE-NESTED                     000221W  001377 001382
HD-C                            000381W  003584 003593 003601
HD-D                            000384W  003587 003592 003604
HD-DATE-TIME                    000386W  003214
HD-HH                           000376W  003207
HD-M                            000383W  003586 003591 003603
HD-MM                           000377W  003208
HD-SS                           000378W  003209
HD-UU                           000379W  003210
HD-Y                            000382W  003585 003594 003602
HD2-C                           000392W  003584 003593
ACS Cobol Xref v1.01.21          Dictionary File for COBXREF    16/09/2017  18:09:59:38                                Page    5
Symbols of Module: COBXREF (COBXREF)
------------------------------------

Data Section (WORKING-STORAGE)   Defn    Locations
--------------------------------+---------------------------------------------------------------


HD2-D                           000388W  003587
HD2-DATE                        000387W  003583 003590 003591 003592 003600 003601 003602 003603
                                         003604
HD2-HH                          000396W  003207
HD2-M                           000390W  003586
HD2-MM                          000398W  003208
HD2-SS                          000400W  003209
HD2-TIME                        000394W
HD2-UU                          000402W  003210
HD2-Y                           000393W  003585 003594
HDDATE                          000380W  003198 003203
HDR1                            000302W  003218 003220
HDR10                           000360W  003275
HDR11                           000363W  003287
HDR11A-SORTED                   000365W  002376 002405
HDR11B-SORTED                   000369W  002377 002404
HDR12-HYPHENS                   000372W  003288
HDR2                            000322W  003294
HDR3                            000326W  003246 003256 003263 003295
HDR5-PROG-NAME                  000333W  003226 003231 003232
HDR5-SYMBOLS                    000331W  003235
HDR6-HYPHENS                    000340W  003232 003233
HDR6-SYMBOLS                    000335W  003236
HDR7-VARIABLE                   000344W  003242 003244 003254
HDR7-WS                         000342W  003245 003255
HDR8-HD                         000349W  002427 002509 002550
HDR8-WS                         000348W  003262
HDR9                            000354W  003269
HDR9B                           000357W  003281
HDTIME                          000375W  003205 003206
HOLDFOUNDWORD                   000237W  001995 001998
HOLDFOUNDWORD2                  000238W  002926 002927 002936 002937
HOLDFOUNDWORD2-SIZE             000164W  002915 002923 002928 002935 002938
HOLDFOUNDWORD2-TYPE             000165W  002916 002933
HOLDID                          000261W  001302 001304 001306 001379 001381 001707 001731 003212
                                         003227 003552
HOLDID-MODULE                   000262W  001306 001384 001386 003229
HOLDWSORPD                      000230W  001542 001577 001607 001624 001628 001676 001721 001760
                                         001882 002816 002821 002834 002878 002897 003142 003317
                                         003322 003529 003553
HOLDWSORPD2                     000231W  001543 001578 001608 001696 001988 001991 001997 001999
                                         002817 003326 003529 003554
LINE-COUNT                      000155W  001660 002247 002248 002276 002341 002342 002390 002391
                                         002439 002506 002507 002524 002549 002551 002564 002607
                                         002649 002651 002694 002696 002717 002719 002727 002750
                                         002752 002783 002785 002794 002810 002812 003224 003237
                                         003249 003259 003266 003272 003278 003284 003291 003298
LINE-END                        000160W  002883 002936 003123
ACS Cobol Xref v1.01.21          Dictionary File for COBXREF    16/09/2017  18:09:59:38                                Page    6
Symbols of Module: COBXREF (COBXREF)
------------------------------------

Data Section (WORKING-STORAGE)   Defn    Locations
--------------------------------+---------------------------------------------------------------


LIST-SOURCE                     000190W  001340 002806
LSECT                           000448W  002259 002354 002488 002572 002643 002709 002749 002776
LTZ-UK                          000427W  003582
LTZ-UNIX                        000429W  003599
LTZ-USA                         000428W  003589
MSG1                            000432W  002216 002296 002424 002527 002593 002666
MSG10                           000440W  003546
MSG16                           000442W  001549
MSG17                           000443W  001250
MSG2                            000433W  001349
MSG4                            000434W  001707
MSG5                            000435W  001731
MSG6                            000436W  001824
MSG7                            000437W  002101
MSG8                            000438W  002850
MSG9                            000439W  003465
OS-DELIMITER                    000234W  003495 003498 003500 003503 003506
P-FUNCTION                      000592W  000594 001256 001268 003183
P-OC-IMPLEMENTED                000593W
PAGE-NO                         000157W  003193 003215 003216 003217
PRINT-FILENAME                  000246W  001281 003401 003523
PRINT-FILENAME-2                000247W
PROG-BASENAME                   000248W  001302 001304 003389 003396 003397 003400
PROG-NAME                       000150W  001339 003361
Q                               000180W  001344 002016 002071 002077 002158 002165 002168 002220
                                         002243 002244 002245 002252 002263 002265 002266 002300
                                         002337 002338 002339 002346 002358 002360 002361 002429
                                         002493 002495 002496 002502 002503 002504 002512 002529
                                         002560 002561 002562 002565 002575 002577 002578 002597
                                         002628 002644 002647 002670 002688 002691 002712 002715
Q2                              000181W  002347 002421 002435 002513 002523 002566
REPORTS-IN-LOWER                000196W  001301 001322 001378 001383 001470 001832 002742 002819
RESERVED-NAMES                  001184W  001255 003161
RESVD-IDX                       001184W  003162 003163
RESVD-IMPLEMENTED               001185W
RESVD-TABLE-SIZE                001187W  001247 001263
RESVD-WORD                      001184W  001186 001255 001264 003162
S-POINTER                       000153W  001344 002590 002604 002648 002663 002693 002716 002724
                                         003530
S-POINTER2                      000154W  001625 001740 001741 002901 002907 002958 002959 002962
                                         002968 002969 002976 002981 002983 002986 003000 003001
                                         003003 003005 003020 003021 003023 003038 003044 003057
                                         003060 003069 003077 003530
S2                              000174W  002016 002049 002051
SAVED-VARIABLE                  000240W  001447 001471 001474 001717 001803 001811 001817 001833
                                         001836 001855 001879
SAVESKADATANAME                 000239W  002213 002237 002239 002293 002321 002331 002420 002453
                                         002455 002462 002469 002474 002476 002522 002555 002557
ACS Cobol Xref v1.01.21          Dictionary File for COBXREF    16/09/2017  18:09:59:38                                Page    7
Symbols of Module: COBXREF (COBXREF)
------------------------------------

Data Section (WORKING-STORAGE)   Defn    Locations
--------------------------------+---------------------------------------------------------------


                                         002589 002627 002636 002662 002687 002700 003523
SAVESKAWSORPD                   000241W  002332 002421 002456 002463 002470 002477 002523 002590
                                         002663 002692 002701 002715
SAVESKAWSORPD2                  000242W  002333 002421 002457 002478 002523 002590
SECTION-NAME                    000468W  003321
SECTION-NAMES-TABLE             000456W  000465
SECTION-SHORT-NAMES-TABLE       000471W  000480
SECTION-USED-TABLE              000450W  002277 003528
SECTTABLE                       000445W  000447
SHORT-SECTION-NAME              000481W
SHT-SECTION-NAME                000482W  002925 002927
SORT1TMP                        000255W  003507
SOURCE-EOF                      000209W  001347 001548 001939 002849 002955 003079
SOURCE-LINE-END                 000161W  001740 002883 002914 002925 002928 002958 002968
SOURCE-WORDS                    000162W  001990 002908 003084
SOURCEFILENAME                  000245W  003352 003359 003382 003385 003389 003396 003398 003523
SOURCEINWS                      000277W  001355 001393 001396 001399 001402 001421 001424 001427
                                         001484 001518 001521 001524 001998 002853 002857 002861
                                         002864 002873 002874 002879 002881 002892 002898 002899
                                         002925 002934 002936 002937 002959 002962 002980 002986
                                         003000 003002 003007 003011 003014 003021 003024 003060
                                         003113 003121 003122 003125 003132 003137 003140 003141
                                         003146
STRING-POINTER                  000151W  003345 003351 003352 003360 003381 003412 003416 003482
                                         003483
STRING-POINTER2                 000152W  003381 003402
SUPP-FILE-1                     000253W  003501
SUPP-FILE-2                     000254W  003504
SV1WHAT                         000278W  003321 003324
SW-1                            000186W  003459
SW-2                            000189W  003423
SW-4                            000191W  003429
SW-5                            000193W  003437
SW-6                            000195W  003443
SW-7                            000197W  001285 003449
SW-END-PROG                     000211W  001661 002900
SW-GIT                          000217W  001697 001722 001751 001874 003335
SW-HAD-END-PROG                 000214W  002845 002900
SW-NESTED                       000220W  002900
SW-SOURCE-EOF                   000208W  002855 003528
T                               000175W  002071 002077 002120 002126 002145 002157 002158 002160
                                         002161 002162
TEMP-PATHNAME                   000252W  003487 003488 003489 003490 003491 003492 003493 003494
                                         003496 003497 003499 003502 003505 003509
USECT                           000451W  001328 002289 002520 002830
VARIABLES                       001193W  001471 001474 001833 001836 002375 002388
WASPICTURE                      000228W  001747 001748 003027
WE-ARE-TESTING                  000194W  001394 001397 001400 001403 001422 001425 001428 001506
ACS Cobol Xref v1.01.21          Dictionary File for COBXREF    16/09/2017  18:09:59:38                                Page    8
Symbols of Module: COBXREF (COBXREF)
------------------------------------

Data Section (WORKING-STORAGE)   Defn    Locations
--------------------------------+---------------------------------------------------------------


                                         001519 001522 001525 002088 002133 003085 003124 003324
                                         003508
WORD-DELIMIT                    000232W  001433 001451 001478 001531 001539 001562 001567 001580
                                         001589 001610 001739 001742 001744 001853 001858 001941
                                         001989 002960 002981 002987 003003 003006 003008 003021
                                         003025 003060 003064 003086
WORD-DELIMIT2                   000233W  003039 003056 003060 003064 003070
WORD-LENGTH                     000159W  001571 001673 001706 001707 001966 001995 001996 002000
                                         002001 002002 002003 002018 002036 002145 002146 002161
                                         002163 002961 002988 003052 003071 003087 003088 003307
                                         003310
WS-ANAL1                        000243W  002278 002289 002290 002308 002324 002326 003243
WS-DATE2                        000266W
WS-FILEINFO                     000272W  001281
WS-FILESIZE                     000273W
WS-LOCAL-TIME-ZONE              000413W  003472 003474 003477 003579 003580
WS-LOCALE                       000412W  003471 003473 003476
WS-MOD-HHMMSS00                 000275W  001283
WS-MOD-YYYYMMDD                 000274W
WS-MS                           000270W  001279
WS-RETURN-CODE                  000158W  001242 001243 001249
WS-TEMP-TIME                    000271W  001280 001284
WS-TIME2                        000267W  000268 001278 001280 001283
WS-WC-DD                        000407W
WS-WC-HH                        000408W
WS-WC-MIN                       000409W
WS-WC-MM                        000406W
WS-WC-YY                        000405W  003364
WS-WHEN-COMPILED                000404W  003362
WSF1-1                          000284W  001372 001442 001460 001562 001564 001586 001773 001775
                                         001781 001942 001957 001960 001962 001965 001968 002985
                                         002991 002998 002999 003036 003042 003046 003049 003056
WSF1-1-NUMBER                   000285W  001442 001460 001564 001586 001779 001955 002997
WSF1-2                          000283W  001980 002995
WSF1-3                          000282W  001975 001982 002993
WSF3-1                          000291W  003308 003311
WSF3-1-NUMERIC                  000292W
WSF3-2                          000293W  003311
WSFOUNDNEWWORD                  000296W  001373 001375 002083 002085 002087 002092 002156 002158
                                         002165 002166 002168 003525
WSFOUNDNEWWORD2                 000297W  002156 002160 002172 002173 002175 003525
WSFOUNDNEWWORD3                 000298W  002015 002113 002137 002148 003524
WSFOUNDNEWWORD4                 000299W  002818 002820 002826 002828 003183 003524 003562
WSFOUNDNEWWORD5                 000300W  001765 001766 001887 001888 003119 003122 003146
WSFOUNDWORD                     000281W  000290
WSFOUNDWORD2                    000290W  001364 001373 001375 001379 001381 001384 001386 001435
                                         001438 001447 001453 001456 001457 001472 001475 001499
                                         001500 001505 001557 001598 001685 001688 001694 001698
ACS Cobol Xref v1.01.21          Dictionary File for COBXREF    16/09/2017  18:09:59:38                                Page    9
Symbols of Module: COBXREF (COBXREF)
------------------------------------

Data Section (WORKING-STORAGE)   Defn    Locations
--------------------------------+---------------------------------------------------------------


                                         001706 001707 001731 001750 001754 001757 001761 001763
                                         001765 001766 001777 001802 001817 001834 001837 001848
                                         001868 001869 001873 001883 001885 001887 001888 001901
                                         001908 001916 001946 001958 001963 001995 002000 002001
                                         002022 002032 002033 002045 002050 002051 002058 002060
                                         002061 002063 002067 002068 002075 002081 002085 002087
                                         002089 002092 002102 002111 002113 002123 002134 002137
                                         002148 002158 002160 002167 002168 002174 002175 002818
                                         002820 002963 002975 002980 002989 003002 003021 003033
                                         003037 003039 003043 003050 003059 003060 003065 003070
                                         003087 003095 003099 003100 003162 003165
Y                               000176W  002016 002067 002068 002070
Z                               000177W  001777 002018 002032 002033 002034 002047 002110 002121
                                         002131 003050 003050 003052 003065 003065 003067 003069
                                         003070 003071
Z2                              000178W  002016 002018 002020 002024 002030 002035 002045 002048
                                         002058 002060 002061 002063 002067 002068 002075 002081
                                         002084 002085 002158 002160 002161 002163
Z3                              000179W  002016 002048 002051
ACS Cobol Xref v1.01.21          Dictionary File for COBXREF    16/09/2017  18:09:59:38                                Page   10
Variable Tested [S]            Symbol (88-Conditions)
--------------------------------------------------------------


SN-TEST-1                       SNT1-ON
SN-TEST-1                       SNT1-OFF
SW-1                            ALL-REPORTS
SW-2                            LIST-SOURCE
SW-4                            DUMP-RESERVED-WORDS
SW-5                            WE-ARE-TESTING
SW-6                            REPORTS-IN-LOWER
SW-7                            APPEND-REPORTS
SW-END-PROG                     END-PROG
SW-GIT                          GLOBAL-ACTIVE
SW-HAD-END-PROG                 HAD-END-PROG
SW-NESTED                       HAVE-NESTED
SW-SOURCE-EOF                   SOURCE-EOF
WS-LOCAL-TIME-ZONE              LTZ-UK
WS-LOCAL-TIME-ZONE              LTZ-USA
WS-LOCAL-TIME-ZONE              LTZ-UNIX
WSF1-1                          WSF1-1-NUMBER
WSF3-1                          WSF3-1-NUMERIC
ACS Cobol Xref v1.01.21          Dictionary File for COBXREF    16/09/2017  18:09:59:38                                Page   11
Variable Tested                Symbol (88-Conditions) [S]
--------------------------------------------------------------


SW-1                            ALL-REPORTS
SW-7                            APPEND-REPORTS
SW-4                            DUMP-RESERVED-WORDS
SW-END-PROG                     END-PROG
SW-GIT                          GLOBAL-ACTIVE
SW-HAD-END-PROG                 HAD-END-PROG
SW-NESTED                       HAVE-NESTED
SW-2                            LIST-SOURCE
WS-LOCAL-TIME-ZONE              LTZ-UK
WS-LOCAL-TIME-ZONE              LTZ-UNIX
WS-LOCAL-TIME-ZONE              LTZ-USA
SW-6                            REPORTS-IN-LOWER
SN-TEST-1                       SNT1-OFF
SN-TEST-1                       SNT1-ON
SW-SOURCE-EOF                   SOURCE-EOF
SW-5                            WE-ARE-TESTING
WSF1-1                          WSF1-1-NUMBER
WSF3-1                          WSF3-1-NUMERIC
ACS Cobol Xref v1.01.21          Dictionary File for COBXREF    16/09/2017  18:09:59:38                                Page   12
Functions                        Defn    Locations
--------------------------------+---------------------------------------------------------------


CURRENT-DATE                    003362I
E                               003005I  003007 003023 003024 003139 003141
LOWER-CASE                      001302I  001323 001379 001384 001471 001472 001833 001834 002743
                                         002744 002820
UPPER-CASE                      001304I  001381 001386 002857 003183 003406
ACS Cobol Xref v1.01.21          Dictionary File for COBXREF    16/09/2017  18:09:59:38                                Page   13
Procedure                        Defn    Locations
--------------------------------+---------------------------------------------------------------


AA000-XREF-DATA                 001214S
AA020-BYPASS-OPEN               001311P  001662
AA030-READLOOP1                 001346P  001365
AA040-READLOOP2                 001391P  001411
AA041-GET-SN                    001413P  001395 001404 001423 001434 001452 001479
AA042-GETWORD                   001431P  001437 001439 001443 001446
AA044-GETWORD3                  001449P  001455 001458 001461 001464 001480
AA045-EXIT                      001491P  001405 001418 001515 001591
AA045-TEST-SECTION              001482P  001405 001418 001515 001591
AA046-GET-CURRENCY              001494P  001436 001454 001501
AA047-GETIO                     001510P  001398 001426 001532 001540 001563 001568 001572 001581
AA047-GETWORD                   001529P  001538
AA047-GETWORD2                  001546P  001558
AA047-GETWORD3                  001560P  001565 001570 001582
AA048-GET-NEXT                  001588P  001611
AA048-GETIOC                    001584P  001401 001429 001520 001587 001599
AA049-GETWORD                   001601P  001605 001612
AA050-READLOOP3                 001614P  001523 001623 001629
AA060-READLOOP3A                001620P  001359 001410 001420 001517 001526 001593
BA000-EXIT                      001923P  001677
BA000-PROCESS-WS                001667S  001626
BA020-GETAWORD                  001668P  001674 001681 001702 001859 001864 001894
BA040-CLEAR-TO-NEXT-PERIOD      001738P  001701 001749 001753 001756 001759 001769 001774 001776
                                         001778 001780 001782 001786 001792 001863 001893
BA049-EXIT                      001794P  001701 001743 001745 001863 001893
BA050-BYPASS-ADD-2-CON-TABLE    001842P  001825
BA050-GET-USER-WORD             001797P  001727
BA051-AFTER-DATANAME            001852P  001804
BA051-AFTER-NEW-WORD            001867P  001812
BA052-AFTER-INDEX               001896P  001755 001902
BA053-AFTER-DEPENDING           001911P  001758 001917
BB000-EXIT                      002178P  001938 001940
BB000-PROCESS-PROCEDURE         001926S  001631
BB010-NEW-RECORD                001927P
BB020-GETAWORD                  001935P  001943 001954 001956 001959 001961 001964 001967 001976
                                         001981 001983 002008 002021 002031 002046 002052 002064
                                         002095 002098 002103 002147 002177
BB030-CHK1                      001945P  002005
BB040-CHK2                      001971P
BB050-CHECK-SUBSCRIPTS          002010P  001969 002149
BB051-CLEAR-LEFT-BRACE          002019P  002025
BB052-CLEAR-RIGHT-BRACE         002029P  002037
BB053-NUMERICS                  002044P
BB054-SPACES                    002079P
BB060-SCAN4-QUOTES              002105P  002073 002114
BB070-GOT-QUOTE                 002118P  002124
BB080-QUOTE-CLEAN               002130P  002139
BB090-RECOVER-WORD              002141P  002122 002132
BB100-SCAN4-COLON               002151P  002078
BC000-EXIT                      002798P  002217 002227 002297 002425 002528 002594 002667 002677
BC000-LAST-ACT                  002181S  001636
ACS Cobol Xref v1.01.21          Dictionary File for COBXREF    16/09/2017  18:09:59:38                                Page   14
Procedure                        Defn    Locations
--------------------------------+---------------------------------------------------------------


BC010-GROUP-REPORT              002212P
BC020-READ-SORTER               002223P  002232 002234
BC030-ISX                       002230P  002221
BC040-PRINTXREF                 002236P  002233
BC050-CHECK-Q                   002241P  002225 002264
BC060-CONNECTC                  002255P
BC070-CONNECTD                  002262P  002238
BC080-EXIT                      002268P  002233 002260
BC090-LAST-PASS2                002271P  002206
BC100-WORKING-STORAGE-REPORT    002285P  002279
BC110-READ-SORTER               002306P  002315 002317
BC120-ISX2                      002313P  002304
BC130-PRINTXREF2                002319P  002316
BC140-CHECK-Q                   002335P  002309 002359
BC150-CONNECTC2                 002350P
BC160-CONNECTD2                 002357P  002322
BC170-EXIT                      002362P  002316 002325 002327 002355
BC180-EXIT                      002365P  002279 002291 002311
BC190-DO-CONDITIONS             002368P  002283
BC192-PRINT-CONDITIONS          002383P  002381 002395 002409
BC194-NOW-REVERSE               002397P  002382
BC195-DONE                      002411P  002373
BC200-LAST-PASS3                002416P
BC210-READ-SORTER3              002431P  002445 002447
BC220-ISX3                      002443P  002430
BC230-PRINTXREF3                002449P  002446
BC250-CONNECTC3                 002480P
BC260-CONNECTD3                 002492P  002475
BC270-EXIT                      002497P  002446 002458 002464 002472 002491
BC280-CHECK-Q                   002500P  002433 002479 002494
BC300-LAST-PASS4                002516P  002412
BC310-READ-SORTER4              002532P  002539 002541
BC320-ISX4                      002537P  002530
BC330-PRINTXREF4                002542P  002540
BC335-CHECK-Q                   002558P  002534 002576
BC340-CONNECTC4                 002568P
BC350-CONNECTD4                 002574P  002556
BC360-EXIT                      002579P  002540 002547 002573
BC399-EXIT                      002582P  002412 002521 002536
BC400-LAST-PASS5                002585P  002441
BC410-READ-SORTER5              002600P  002617 002619
BC420-ISX5                      002611P  002598
BC430-PRINTXREF5                002620P  002618
BC440-CHECK-4OLD                002646P  002602 002634
BC450-EXIT                      002655P  002618 002629 002632 002645
BC500-LAST-PASS6                002658P  002610
BC510-READ-SORTER6              002672P  002680 002682
BC520-ISX6                      002678P  002671
BC530-PRINTXREF6                002683P  002681
BC540-CHECK-4OLD                002714P  002674
BC540-CHECK-4OLD6               002723P  002675
ACS Cobol Xref v1.01.21          Dictionary File for COBXREF    16/09/2017  18:09:59:38                                Page   15
Procedure                        Defn    Locations
--------------------------------+---------------------------------------------------------------


BC550-EXIT                      002729P  002681 002689 002713
BC600-EXIT                      002758P  002282
BC600-PRINT-GLOBALS             002732P  002282
BC620-DO-GLOBAL-CONDITIONS      002761P  001638
BC629-EXIT                      002796P  001638 002766
RETURN-CODE                     001271P  001282 001352 001552 001664 001710 001735 003378 003466
S                               002022P  002045 002050 002058 002060 002061 002067 002068 002075
                                         002081 002085 002087 002089 002158 002160 003011 003014
ZZ000-INC-COBOLREFNO            002802P  002865 002888 002893 002905
ZZ000-OUTPUTSOURCE              002805P  002866 002889 002894 002906
ZZ000-ROUTINES                  002801S
ZZ030-WRITE-SORT                002815P  001544 001579 001609 001700 001768 001791 001850 001871
                                         001890 001906 001921 002007 002097 002169 002176
ZZ100-EXIT                      002947P  001343 001392 001417 001514 001590 001618 001680 002848
                                         002851 002856 002902 002918 003078
ZZ100-GET-A-SOURCE-RECORD       002839P  001343 001392 001417 001514 001590 001618 001680 002862
                                         002867 002890 002895 002929 003078
ZZ100-NEW-PROGRAM-POINT         002904P  002846
ZZ110-EXIT                      003102P  001354 001366 001432 001441 001450 001459 001498 001530
                                         001547 001561 001585 001595 001602 001672 001695 001746
                                         001762 001801 001865 001870 001884 001900 001915 001936
                                         002957 002964 002990 003080
ZZ110-GET-A-WORD                002950P  001354 001366 001432 001441 001450 001459 001498 001530
                                         001547 001561 001585 001595 001602 001672 001695 001746
                                         001762 001801 001865 001870 001884 001900 001915 001936
                                         003045 003047 003081
ZZ110-GET-A-WORD-COPY-CHECK     003082P  003053 003075
ZZ110-GET-A-WORD-LITERAL        003055P
ZZ110-GET-A-WORD-LITERAL2       003058P  003040
ZZ110-GET-A-WORD-OVERFLOW       003076P  002970 002984 002996
ZZ110-GET-A-WORD-UNSTRING       002974P  002992 002994
ZZ120-EXIT                      003152P  002882 003116 003126
ZZ120-KILL-SPACE                003128P  003120 003135 003138 003148
ZZ120-KILL-SPACE-EXIT           003149P  003120 003131
ZZ120-REPLACE-MULTI-SPACES      003105P  002882
ZZ130-EXIT                      003169P  001444 001462 001536 001566 001603 001784 001805 001947
                                         002093 003161
ZZ130-EXTRA-RESERVED-WORD-CHECK 003155P  001444 001462 001536 001566 001603 001784 001805 001947
                                         002093
ZZ140-EXIT                      003187P  002822 003182
ZZ140-FUNCTION-CHECK            003172P  002822
ZZ150-EXIT                      003302P  002218 002219 002249 002250 002298 002299 002343 002344
                                         002379 002393 002407 002428 002510 002553 002596 002653
                                         002669 002698 002721 002736 002737 002753 002754 002769
                                         002787 003238 003250 003260 003267 003273 003279 003285
                                         003292 003299
ZZ150-WRITEHDB                  003190P  001341 002218 002249 002298 002343 002378 002392 002406
                                         002426 002508 002552 002595 002652 002668 002697 002720
                                         002736 002753 002768 002786 002813
ZZ150-WRITEHDB1                 003225P
ZZ150-WRITEHDB2                 003239P  002299 002344
ACS Cobol Xref v1.01.21          Dictionary File for COBXREF    16/09/2017  18:09:59:38                                Page   16
Procedure                        Defn    Locations
--------------------------------+---------------------------------------------------------------


ZZ150-WRITEHDB2B                003251P  002737 002754
ZZ150-WRITEHDB3                 003261P  002428 002510 002553
ZZ150-WRITEHDB4                 003268P  002596 002653
ZZ150-WRITEHDB5                 003274P  002669 002698 002721
ZZ150-WRITEHDB6                 003280P  002769 002787
ZZ150-WRITEHDB7                 003286P  002379 002393 002407
ZZ150-WRITEHDB8                 003293P  002219 002250
ZZ160-CLEAN-NUMBER              003305P  001715
ZZ160-EXIT                      003312P  001715 003309
ZZ170-CHECK-4-SECTION           003315P  001621 002917 002946
ZZ170-EXIT                      003336P  001621 002917 002946 003318
ZZ180-CHECK-FOR-PARAM-ERRORS    003358P  003347 003413 003417
ZZ180-EXIT                      003513P  001258 003430 003479
ZZ180-GET-PROGRAM-ARGS          003481P  003346
ZZ180-OPEN-SOURCE-FILE          003339P  001258
ZZ182-EXIT                      003510P  003356
ZZ182-GET-ENV-SET-TEMPFILES     003485P  003356
ZZ190-EXIT                      003531P  001239 001655
ZZ190-INIT-PROGRAM              003516P  001239 001655
ZZ200-EXIT                      003555P  001752 001857 001862 001875 001880 001909 003539 003547
ZZ200-LOAD-GIT                  003534P  001752 001857 001862 001875 001880 001909
ZZ310-CHECK-FOR-GLOBALS         003558P  002835
ZZ319-EXIT                      003568P  002835
ZZ400-CONVERT-DATE              003571P  003204
ZZ400-EXIT                      003606P  003204
ACS Cobol Xref v1.01.21          Dictionary File for COBXREF    16/09/2017  18:09:59:38                                Page   17
Unreferenced Working Storage Symbols


COBOL-WORD-SIZE                 000205W
ERROR-MESSAGES                  000431W
HD2-TIME                        000394W
P-OC-IMPLEMENTED                000593W
PRINT-FILENAME-2                000247W
RESVD-IMPLEMENTED               001185W
SHORT-SECTION-NAME              000481W
WS-DATE2                        000266W
WS-FILESIZE                     000273W
WS-MOD-YYYYMMDD                 000274W
WS-WC-DD                        000407W
WS-WC-HH                        000408W
WS-WC-MIN                       000409W
WS-WC-MM                        000406W
WSF3-1-NUMERIC                  000292W
ACS Cobol Xref v1.01.21          Dictionary File for COBXREF    16/09/2017  18:09:59:38                                Page   18
Unreferenced Procedures


AA000-XREF-DATA                 001214S
BB010-NEW-RECORD                001927P
BB040-CHK2                      001971P
BB053-NUMERICS                  002044P
BB054-SPACES                    002079P
BC010-GROUP-REPORT              002212P
BC060-CONNECTC                  002255P
BC150-CONNECTC2                 002350P
BC200-LAST-PASS3                002416P
BC250-CONNECTC3                 002480P
BC340-CONNECTC4                 002568P
ZZ000-ROUTINES                  002801S
ZZ110-GET-A-WORD-LITERAL        003055P
ZZ150-WRITEHDB1                 003225P



ACS Cobol Xref v1.01.21          Dictionary File for COBXREF    16/09/2017  18:09:59:39                                Page   19
Symbols of Module: COBXREF (GET-RESERVED-LISTS)
-----------------------------------------------

Data Section (FILE)              Defn    Locations
--------------------------------+---------------------------------------------------------------


FS-REPLY                        003677F  003680 003701 003763 003765 003766 003806 003808 003809
INT-RECORD                      003692F  003774 003783 003784 003791 003792
INTRINSIC-STREAM                003678F  003691 003762 003775 003777
RES-RECORD                      003689F  003818 003822 003823 003826 003831 003842 003843
RESERVE-STREAM                  003675F  003688 003805 003819 003828 003870
ACS Cobol Xref v1.01.21          Dictionary File for COBXREF    16/09/2017  18:09:59:39                                Page   20
Symbols of Module: COBXREF (GET-RESERVED-LISTS)
-----------------------------------------------

Data Section (WORKING-STORAGE)   Defn    Locations
--------------------------------+---------------------------------------------------------------


ERROR-MESSAGES                  003706W
FS-REPLY                        003701W  003763 003765 003766 003806 003808 003809
MSG11                           003708W  003764
MSG12                           003709W  003807
MSG13                           003710W  003779
MSG14                           003711W  003872
PLACEMENT-RES                   003703W  003790 003791 003794 003841 003842 003847 003851
PLACEMENT-RES-STATE             003704W  003790 003792 003795 003841 003843 003852 003855
PROG-NAME                       003696W
RES-START                       003698W  003815 003832 003858
S-PTR                           003697W  003789 003791 003792 003840 003842 003843
WS-FUNCTION-TABLE-SIZE          003699W  003769 003778
WS-RESVD-TABLE-SIZE             003700W  003812 003871
ACS Cobol Xref v1.01.21          Dictionary File for COBXREF    16/09/2017  18:09:59:39                                Page   21
Symbols of Module: COBXREF (GET-RESERVED-LISTS)
-----------------------------------------------

Data Section (LINKAGE)           Defn    Locations
--------------------------------+---------------------------------------------------------------


ADDITIONAL-RESERVED-WORDS-R     003735K  003744 003813
ALL-FUN-IDX                     003725K
ALL-FUNCTIONS                   003725K
FUNCTION-TABLE-R                003724K  003742 003770
FUNCTION-TABLE-SIZE             003728K  003743 003769 003771 003778 003793 003794 003796 003798
P-FUNCTION                      003725K  003727 003794
P-OC-IMPLEMENTED                003726K  003796 003798
RESERVED-NAMES                  003736K
RESVD-IDX                       003736K
RESVD-IMPLEMENTED               003737K  003853 003856 003859 003861
RESVD-TABLE-SIZE                003739K  003745 003812 003814 003850 003851 003853 003856 003859
                                         003861 003871
RESVD-WORD                      003736K  003738 003851
WS-RETURN-CODE                  003716K  003741 003751 003753 003766 003776 003809 003869
ACS Cobol Xref v1.01.21          Dictionary File for COBXREF    16/09/2017  18:09:59:39                                Page   22
Procedure                        Defn    Locations
--------------------------------+---------------------------------------------------------------


AA000-STARTUP                   003747S
AA010-INIT                      003748P
BA000-GET-INTRINSICS-WORDS      003760S  003752
BA010-INIT                      003761P
BA020-GET-THRU-BASE-DATA        003773P  003785 003800
CA000-GET-RESERVED-WORDS        003802S  003755
CA010-INIT                      003804P
CA020-GET-THRU-BASE-DATA        003817P  003824 003833 003848 003866
CA030-CLEAN-UP                  003868P  003820 003829
ACS Cobol Xref v1.01.21          Dictionary File for COBXREF    16/09/2017  18:09:59:39                                Page   23
Unreferenced Working Storage Symbols


ALL-FUN-IDX                     003725K
ALL-FUNCTIONS                   003725K
ERROR-MESSAGES                  003706W
PROG-NAME                       003696W
RESERVED-NAMES                  003736K
RESVD-IDX                       003736K
ACS Cobol Xref v1.01.21          Dictionary File for COBXREF    16/09/2017  18:09:59:39                                Page   24
Unreferenced Procedures


AA000-STARTUP                   003747S
AA010-INIT                      003748P
BA010-INIT                      003761P
CA010-INIT                      003804P


ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:55:89  Page    1

     1         >>source free
     2   Identification division.
     3   program-id.            cobxref.
     4  *>author.               Vincent Bryan Coen, Applewood Computers,
     5  *>                      Applewood, Epping Road, Roydon, Essex, UK.
     6  *>Date-Written.         28 July 1983 with code going back to 1967.
     7  *>Date-Rewriten.        10 March 2007 with code going back to 1983.
     8  *>Date-Compiled.        Today & Don't forget to update prog-name for builds
     9  *>Security.             Copyright (C) 1967-2014, Vincent Bryan Coen.
    10  *>                      Distributed under the GNU General Public License
    11  *>                      v2.0. Only. See the file COPYING for details but
    12  *>                      for use within GNUCobol ONLY.
    13  *>
    14  *> Usage.               Cobol Cross Referencer for GNU Cobol from v1.1
    15  *>                      but code reflects for v2.n.
    16  *>                      This version (v1.01.nn) if for auto execution via
    17  *>                      cobc when using the -X parameter and can be used
    18  *>                      as a stand alone tool see the readme and manual
    19  *>                      for more parameter details but can be run as
    20  *>                      cobxref sourcefilename.
    21  *>                      ===================== WARNING =====================
    22  *>                      Must only be used after running the source file
    23  *>                      that is to be cross referenced, through the compiler
    24  *>                      that results in an error free run.
    25  *>                      ^^^^^^^^^^^^^^^^^^^^^ WARNING ^^^^^^^^^^^^^^^^^^^^^
    26  *>**
    27  *> Calls.               get-reserved-lists.
    28  *>                      compile with:
    29  *>                        cobc -x cobxref.cbl get-reserved-lists.cbl
    30  *>                        ==========================================
    31  *>**
    32  *> Changes.             See Changelog & Prog-Name.
    33  *>
    34  *> Copyright Notice.
    35  *>*****************
    36  *>
    37  *> This file/program is part of Cobxref AND GNU Cobol and is copyright
    38  *> (c) Vincent B Coen 1967-2014. This version bears no resemblance to the
    39  *> original versions running on ICL 1501/1901 and IBM 1401 & 360/30 in the
    40  *> 1960's and 70's.
    41  *>
    42  *> A version for running with MVS 3.8J and ANSI Cobol is available for those
    43  *> users running IBM emulation with Hercules.
    44  *>
    45  *> This program is free software; you can redistribute it and/or modify it
    46  *> under the terms of the GNU General Public License as published by the
    47  *> Free Software Foundation; version 3 (and later) ONLY within GNUCobol,
    48  *> providing the package continues to be issued or marketed as GNUCobol and
    49  *> is available FREE OF CHARGE AND WITH FULL SOURCE CODE.
    50  *>
    51  *> It cannot be included or used with any other Compiler without the
    52  *> written Authority by the copyright holder, Vincent B Coen. See the
    53  *> manual for contact details.
    54  *>
    55  *> Cobxref is distributed in the hope that it will be useful, but WITHOUT
    56  *> ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
    57  *> FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
    58  *> for more details. If it breaks, you own both pieces but I will endevor
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:55:89  Page    2

    59  *> to fix it, providing you tell me about the problem.
    60  *>
    61  *> You should have received a copy of the GNU General Public License along
    62  *> with Cobxref; see the file COPYING.  If not, write to the Free Software
    63  *> Foundation, 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.
    64  *>*************************************************************************
    65  *>
    66   environment division.
    67   configuration section.
    68   source-computer.      linux.
    69   object-computer.      linux.
    70   special-names.                                   *> only here to help test cobxref
    71       switch-1 is sn-Test-1 on snt1-on off snt1-off
    72       currency sign is "£".
    73   input-Output section.
    74   file-control.
    75  *>
    76  *>  These 2 are needed as OC (& many others) does NOT support real
    77  *>    variable length tables and they can get very large
    78  *>            They are also very handy for debugging also during test
    79  *>            these two files are not deleted at EOJ but code is present
    80  *>            currently remarked out to do so.
    81  *>            These files may well be created at /tmp or /home/username/tmp
    82  *>            depending on your system settings.
    83  *>
    84       select   Supplemental-Part2-In assign Supp-File-2
    85                organization line sequential.
    86  *>
    87       select   Supplemental-Part1-Out assign Supp-File-1
    88                organization line sequential.
    89  *>
    90       select   Source-Listing assign Print-FileName
    91                organization line sequential.
    92  *>
    93       select   SourceInput assign SourceFileName
    94                organization line sequential
    95                file status fs-reply.
    96  *>
    97       select   SortFile assign Sort1tmp.
    98  *>
    99   i-o-control.
   100  *>
   101       same record area for Supplemental-Part1-Out
   102                            Supplemental-Part2-In.
   103  *>
   104   data division.
   105   file section.
   106   fd  Source-Listing.
   107   01  Source-List.
   108       03  sl-Gen-RefNo1     pic z(5)9bb.
   109       03  SourceOutput      pic x(1024).
   110  *>
   111   01  PrintLine.
   112       02  XrDataName        pic x(32).
   113       02  XrDefn            pic 9(6).
   114       02  XrType            pic x.
   115       02  XrCond            pic x.
   116       02  filler            pic x.
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:55:89  Page    3

   117       02  filler     occurs 8.
   118         03  XrReference     pic 9(6).
   119         03  filler          pic x.
   120       02  filler            pic x(62).
   121  *>
   122   01  filler.
   123       03  filler            pic x(42).
   124       03  PL-Prog-Name      pic x(32).
   125  *>
   126   01  PrintLine2.
   127       03  P-Conditions      pic x(32).
   128       03  P-Variables       pic x(32).
   129  *>
   130   fd  SourceInput.
   131   01  SourceRecIn           pic x(1024).
   132  *>
   133   fd  Supplemental-Part1-Out.
   134   01  SortRecord.
   135       03  SkaDataName       pic x(32).
   136       03  SkaWSorPD         pic 9.
   137       03  SkaWSorPD2        pic 9.
   138       03  SkaRefNo          pic 9(6).
   139  *>
   140   fd  Supplemental-Part2-In.
   141   01  filler                pic x(40).
   142  *>
   143   sd  SortFile.
   144   01  filler.
   145       03  SdSortKey         pic x(40).
   146  *>
   147   working-storage section.
   148   77  Prog-Name             pic x(13) value "Xref v1.01.15".
   149   77  String-Pointer        Binary-long  value 1.
   150   77  String-Pointer2       Binary-long  value 1.
   151   77  S-Pointer             Binary-long  value zero.
   152   77  S-Pointer2            Binary-long  value zero.
   153   77  Line-Count            Binary-char  value 70.
   154   77  Page-No               Binary-char  value zero.
   155   77  ws-Return-Code        binary-char  value zero.
   156   77  Word-Length           Binary-long  value zero.
   157   77  Line-End              Binary-long  value zero.
   158   77  Source-Line-End       Binary-long  value zero.
   159   77  Source-Words          Binary-long  value zero.
   160   77  F-Pointer             Binary-long  value zero.
   161   77  HoldFoundWord2-Size   binary-long  value zero.
   162   77  HoldFoundWord2-Type   binary-long  value zero.
   163   77  a                     Binary-Long  value zero.
   164   77  a1                    Binary-Long  value zero.
   165   77  a2                    Binary-char  value zero.
   166   77  b                     Binary-Long  value zero.
   167   77  c                     Binary-Long  value zero.
   168   77  d                     Binary-Long  value zero.
   169   77  e                     Binary-Long  value zero.
   170   77  s                     Binary-Long  value zero.
   171   77  s2                    Binary-Long  value zero.
   172   77  t                     Binary-Long  value zero.
   173   77  y                     Binary-Long  value zero.
   174   77  z                     Binary-Long  value zero.
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:55:90  Page    4

   175   77  z2                    Binary-Long  value zero.
   176   77  z3                    Binary-Long  value zero.
   177   77  q                     Binary-Long  value zero.
   178   77  q2                    Binary-Long  value zero.
   179  *>
   180  *> System parameters control how xref works or reports
   181  *>  May be add extra func for default.conf ?
   182  *>
   183   77  sw-1                  pic x           value "N".
   184  *>  command line input -G
   185    88 All-Reports                           value "A".
   186   77  sw-2                  pic x           value "Y".
   187    88 List-Source                           value "Y".
   188   77  sw-4                  pic 9           value zero.
   189    88  Dump-Reserved-Words                  value 1.
   190   77  sw-5                  pic x           value "N".
   191    88 We-Are-Testing                        value "Y".
   192   77  sw-6                  pic 9           value zero.
   193    88  Reports-In-Lower                     value 1.
   194  *>
   195  *> Switches used during processing
   196  *>
   197  *> And these two are the size of any Cobol word currently set
   198  *> to value specified in PL22.4 20xx
   199  *>
   200   78  Cobol-Word-Size                       value 31.
   201   78  CWS                                   value 31.
   202  *>
   203   77  sw-Source-Eof         pic 9           value 0.
   204    88 Source-Eof                            value 1.
   205  *> got end of program
   206   77  sw-End-Prog           pic 9           value zero.
   207    88 End-Prog                              value 1.
   208  *> Had end of program (nested) - Confused yet? you will be!
   209   77  sw-Had-End-Prog       pic 9           value zero.
   210    88 Had-End-Prog                          value 1.
   211  *> We have found a Global verb
   212   77  sw-Git                pic 9           value zero.
   213    88 Global-Active                         value 1.
   214  *>  Multi modules in one source file flag
   215   77  sw-Nested             pic 9           value zero.
   216    88 Have-Nested                           value 1.
   217  *>
   218   77  Arg-Number            pic 99          value zero.
   219   77  Gen-RefNo1            pic 9(6)        value zero.
   220   77  Build-Number          pic 99          value zero.
   221   77  GotEndProgram         pic 9           value zero.
   222   77  GotPicture            pic 9           value zero.
   223   77  WasPicture            pic 9           value zero.
   224   77  Currency-Sign         pic X           value "£".
   225   77  HoldWSorPD            pic 9           value 0.
   226   77  HoldWSorPD2           pic 9           value 0.
   227   77  Word-Delimit          pic x           value space.
   228   77  Word-Delimit2         pic x           value space.
   229   77  OS-Delimiter          pic x           value space.
   230   77  GotASection           pic x           value space.
   231  *> section name + 8 chars
   232   77  HoldFoundWord         pic x(40)       value spaces.
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:55:90  Page    5

   233   77  HoldFoundWord2        pic x(40)       value spaces.
   234   77  SaveSkaDataName       pic x(32)       value spaces.
   235   77  Saved-Variable        pic x(32)       value spaces.
   236   77  SaveSkaWSorPD         pic 9           value zero.
   237   77  SaveSkaWSorPD2        pic 9           value zero.
   238   77  WS-Anal1              pic 9           value zero.
   239   77  FS-Reply              pic 99          value zeros.
   240   77  SourceFileName        pic x(1024)     value spaces.
   241   77  Print-FileName        pic x(1024)     value spaces.
   242   77  Prog-BaseName         pic x(1024)     value spaces.
   243  *>
   244  *> In theory Linux can go to 4096 and Windoz 32,767 chars
   245  *>
   246   77  Temp-Pathname         pic x(1024)     value spaces.
   247   77  Supp-File-1           pic x(1036)     value spaces.
   248   77  Supp-File-2           pic x(1036)     value spaces.
   249   77  Sort1tmp              pic x(1036)     value spaces.
   250   77  Global-Current-Word   pic x(32)       value spaces.
   251   77  Global-Current-Refno  pic 9(6)        value zero.
   252   77  Global-Current-Level  pic 99          value zero.
   253   77  FoundFunction         pic 9           value zero.
   254  *>
   255   01  HoldID                pic x(32)       value spaces.
   256   01  HoldID-Module         pic x(32)       value spaces.
   257  *>
   258   01  SourceInWS.
   259       03  Sv1what           pic x(16).
   260       03  filler            pic x(1008).
   261  *>
   262   01  wsFoundWord.
   263       03  wsf1-3.
   264        04  wsf1-2.
   265         05  wsf1-1          pic x.
   266             88  wsf1-1-Number    values 0 1 2 3 4 5 6 7 8 9.
   267         05  filler          pic x.
   268        04  filler           pic x.
   269       03  filler            pic x(1021).
   270  *>
   271   01  wsFoundWord2 redefines wsFoundWord.
   272       03  wsf3-1            pic 9.                      *> only used for Build-Number
   273           88 wsf3-1-Numeric           values 0 thru 9.
   274       03  wsf3-2            pic 9.                      *>   processing
   275       03  filler            pic x(1022).
   276  *>
   277   01  wsFoundNewWord        pic x(32).
   278   01  wsFoundNewWord2       pic x(32).
   279   01  wsFoundNewWord3       pic x(1024).  *> max size quot lit 1 lin
   280   01  wsFoundNewWord4       pic x(32).
   281   01  wsFoundNewWord5       pic x(1024). *> space removal source i/p
   282  *>
   283   01  HDR1.
   284       03  filler            pic X(10) value "ACS Cobol ".
   285       03  H1Prog-Name       pic x(23) value spaces.
   286  *>     03  H1Prog-Name       pic x(4)  value spaces.
   287  *>     03  filler            pic x     value "(".
   288  *>     03  H1-dd             pic 99.
   289  *>     03  filler            pic x     value "/".
   290  *>     03  H1-MM             pic 99.
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:55:90  Page    6

   291  *>     03  filler            pic x     value "/".
   292  *>     03  H1-YY             pic 9(4).
   293  *>     03  filler            pic x     value "@".
   294  *>     03  H1-HH             pic 99.
   295  *>     03  filler            pic x     value ":".
   296  *>     03  H1-Min            pic 99.
   297  *>     03  filler            pic xx    value ") ".
   298       03  filler            pic x(20) value "Dictionary File for ".
   299       03  h1programid       pic x(32) value spaces.
   300       03  filler            pic x(7)  value "  Page ".
   301       03  H1-Page           pic zzz9.
   302  *>
   303   01  HDR2.
   304       03  filler            pic X(33) value "All Data/Proc Names".
   305       03  filler            pic X(19) value "Defn     Reference".
   306  *>
   307   01  hdr3.
   308       03  filler            pic x(32) value all "-".
   309       03  filler            pic x     value "+".
   310       03  filler            pic x(63) value all "-".
   311  *>
   312   01  hdr5-symbols.
   313       03  filler            pic x(19) value "Symbols of Module: ".
   314       03  hdr5-Prog-Name    pic x(67) value spaces.
   315  *>
   316   01  hdr6-symbols.
   317       03  filler            pic x(19) value all "-".
   318  *>
   319  *> below is replaced with hyphens to size of Prog-Name
   320  *>
   321       03  hdr6-hyphens      pic x(67) value spaces.
   322  *>
   323   01  hdr7-ws.
   324       03  filler            pic x(14) value "Data Section (".
   325       03  hdr7-variable     pic x(19) value spaces.
   326       03  filler            pic x(8)  value "Defn".
   327       03  filler            pic x(9)  value "Locations".
   328  *>
   329   01  hdr8-ws.
   330       03  hdr8-hd           pic x(9)  value "Procedure".
   331       03  filler            pic x(24) value spaces.
   332       03  filler            pic x(8)  value "Defn".
   333       03  filler            pic x(9)  value "Locations".
   334  *>
   335   01  hdr9.
   336       03  filler            pic x(36) value "Unreferenced Working Storage Symbols".
   337  *>
   338   01  hdr9B.
   339       03  filler            pic x(38) value "Unreferenced Globals throughout Source".
   340  *>
   341   01  hdr10.
   342       03  filler            pic x(23) value "Unreferenced Procedures".
   343  *>
   344   01  hdr11.
   345       03  filler            pic x(16) value "Variable Tested".
   346       03  hdr11a-sorted     pic xxx   value spaces.
   347       03  filler            pic x(12) value spaces.
   348       03  filler            pic x(8)  value "Symbol (".
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:55:90  Page    7

   349       03  filler            pic x(15) value "88-Conditions)".
   350       03  hdr11b-sorted     pic xxx   value spaces.
   351       03  filler            pic x(5)  value spaces.
   352  *>
   353   01  hdr12-hyphens.
   354       03  filler            pic x(62) value all "-".
   355  *>
   356   01  hdtime                          value spaces.
   357       03  hd-hh             pic xx.
   358       03  hd-mm             pic xx.
   359       03  hd-ss             pic xx.
   360       03  hd-uu             pic xx.
   361   01  hddate                          value spaces.
   362       03  hd-y              pic xx.
   363       03  hd-m              pic xx.
   364       03  hd-d              pic xx.
   365  *>
   366   01  hd-date-time.
   367       03  hd2-d             pic xx.
   368       03  filler            pic x     value "/".
   369       03  hd2-m             pic xx.
   370       03  filler            pic x     value "/".
   371       03  hd2-y             pic xx.
   372       03  filler            pic xx    value spaces.
   373       03  hd2-hh            pic xx.
   374       03  filler            pic x     value ":".
   375       03  hd2-mm            pic xx.
   376       03  filler            pic x     value ":".
   377       03  hd2-ss            pic xx.
   378       03  filler            pic x     value ":".
   379       03  hd2-uu            pic xx.
   380  *>
   381   01  WS-When-Compiled.
   382       03  WS-WC-YY          pic 9(4).
   383       03  WS-WC-MM          pic 99.
   384       03  WS-WC-DD          pic 99.
   385       03  WS-WC-HH          pic 99.
   386       03  WS-WC-Min         pic 99.
   387       03  filler            pic x(9).
   388  *>
   389   01  Error-messages.                      *> Sorry, English msgs Only
   390       03 Msg1      pic x(31) value "Msg1  Aborting: No input stream".
   391       03 Msg2      pic x(35) value "Msg2  Aborting: Early eof on source".
   392       03 Msg4      pic x(48) value "Msg4  Logic Error:Lost1 wsFoundWord2 numeric? = ".
   393       03 Msg5      pic x(38) value "Msg5  Logic Error:Lost2 wsFoundWord2 =".
   394       03 Msg6      pic x(40) value "Msg6  Error: Con table size needs > 5000".
   395       03 Msg7      pic x(30) value "Msg7  bb050 Error: Logic error".
   396       03 Msg8      pic x(32) value "Msg8  Error: Eof on source again".
   397       03 Msg9      pic x(40) value "Msg9  Error: File not present Try Again!".
   398       03 Msg10     pic x(42) value "Msg10 Error: Git Table size exceeds 10,000".
   399  *> Msg11 - 14 in get-reserved-lists with Msg15 spare
   400       03 Msg16     pic x(71) value "Msg16 Error: Eof on source possible logic error at aa047 ASSUMING again".
   401       03 Msg17     pic x(79) value "Msg17 Possible prob. with cobc and therefore with no reserved word list updates".
   402  *>
   403   01  SectTable.
   404       03  filler            pic x(9) value "FWLKCRSPI".
   405   01  filler  redefines SectTable.
   406       03  LSect             pic x  occurs 9.
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:55:91  Page    8

   407  *> Keep track of sections used in analysed module
   408   01  Section-Used-Table  value zeros.
   409       03  USect             pic 9  occurs 9.
   410  *> holds program parameter values from command line
   411   01  Arg-Vals                       value spaces.
   412       03  Arg-Value         pic x(128)  occurs 6.
   413  *>
   414   01  Section-Names-Table.
   415       03  filler pic x(24) value "FILE SECTION.           ".
   416       03  filler pic x(24) value "WORKING-STORAGE SECTION.".
   417       03  filler pic x(24) value "LOCAL-STORAGE SECTION.  ".
   418       03  filler pic x(24) value "LINKAGE SECTION.        ".
   419       03  filler pic x(24) value "COMMUNICATION SECTION.  ".
   420       03  filler pic x(24) value "REPORT SECTION.         ".
   421       03  filler pic x(24) value "SCREEN SECTION.         ".
   422       03  filler pic x(24) value "PROCEDURE DIVISION.     ".
   423   01  filler   redefines Section-Names-Table.
   424       03  Full-Section-Name          occurs 8.
   425  *>                  ascending key Section-Name indexed by Full-Section-Name-Idx. *> can't use as its NOT sorted
   426           05  Section-Name  pic x(16).
   427           05  filler        pic x(08).
   428  *>
   429   01  Section-Short-Names-Table.
   430       03  filler pic x(16) value "FILE            ".
   431       03  filler pic x(16) value "WORKING-STORAGE ".
   432       03  filler pic x(16) value "LOCAL-STORAGE   ".
   433       03  filler pic x(16) value "LINKAGE         ".
   434       03  filler pic x(16) value "COMMUNICATION   ".
   435       03  filler pic x(16) value "REPORT          ".
   436       03  filler pic x(16) value "SCREEN          ".
   437       03  filler pic x(16) value "PROCEDURE       ".
   438   01  filler   redefines Section-Short-Names-Table.
   439       03  Short-Section-Name          occurs 8.
   440           05  Sht-Section-Name  pic x(16).
   441  *>
   442  *> Here for cb_intrinsic_table in GOC see :
   443  *>   cobc/reserved.c in the G/open-cobol source directory but Totally ingoring the system_table as not needed/used by xref
   444  *>
   445  *> Also note that the number 0 or 1 indicates if the function/reserved word is implemented in G/Open Cobol
   446  *>   but xref treats all as being reserved as they are still so, in someone's compiler
   447  *>
   448   01  Function-Table.                                                 *> updated by Get-Reserved-Lists.cbl
   449       03  filler pic x(31) value "1ABS                        ".
   450       03  filler pic x(31) value "1ACOS                       ".
   451       03  filler pic x(31) value "1ANNUITY                    ".
   452       03  filler pic x(31) value "1ASIN                       ".
   453       03  filler pic x(31) value "1ATAN                       ".
   454       03  filler pic x(31) value "0BOOLEAN-OF-INTEGER         ".
   455       03  filler pic x(31) value "1BYTE-LENGTH                ".
   456       03  filler pic x(31) value "1CHAR                       ".
   457       03  filler pic x(31) value "0CHAR-NATIONAL              ".
   458       03  filler pic x(31) value "1COMBINED-DATETIME          ".
   459       03  filler pic x(31) value "1CONCATENATE                ".
   460       03  filler pic x(31) value "1COS                        ".
   461       03  filler pic x(31) value "1CURRENT-DATE               ".
   462       03  filler pic x(31) value "1DATE-OF-INTEGER            ".
   463       03  filler pic x(31) value "1DATE-TO-YYYYMMDD           ".
   464       03  filler pic x(31) value "1DAY-OF-INTEGER             ".
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:55:91  Page    9

   465       03  filler pic x(31) value "1DAY-TO-YYYYDDD             ".
   466       03  filler pic x(31) value "0DISPLAY-OF                 ".
   467  *>
   468  *> ignore this one, gets confused with username and this
   469  *>     03  filler pic x(31) value "0E                          ".
   470  *>
   471  *> so does OC
   472  *>
   473       03  filler pic x(31) value "1EXCEPTION-FILE             ".
   474       03  filler pic x(31) value "0EXCEPTION-FILE-N           ".
   475       03  filler pic x(31) value "1EXCEPTION-LOCATION         ".
   476       03  filler pic x(31) value "0EXCEPTION-LOCATION-N       ".
   477       03  filler pic x(31) value "1EXCEPTION-STATEMENT        ".
   478       03  filler pic x(31) value "1EXCEPTION-STATUS           ".
   479       03  filler pic x(31) value "1EXP                        ".
   480       03  filler pic x(31) value "1EXP10                      ".
   481       03  filler pic x(31) value "1FACTORIAL                  ".
   482       03  filler pic x(31) value "1FRACTION-PART              ".
   483       03  filler pic x(31) value "0HIGHEST-ALGEBRAIC          ".
   484       03  filler pic x(31) value "1INTEGER                    ".
   485       03  filler pic x(31) value "0INTEGER-OF-BOOLEAN         ".
   486       03  filler pic x(31) value "1INTEGER-OF-DATE            ".
   487       03  filler pic x(31) value "1INTEGER-OF-DAY             ".
   488       03  filler pic x(31) value "1INTEGER-PART               ".
   489       03  filler pic x(31) value "1LENGTH                     ".
   490       03  filler pic x(31) value "0LOCALE-COMPARE             ".
   491       03  filler pic x(31) value "1LOCALE-DATE                ".
   492       03  filler pic x(31) value "1LOCALE-TIME                ".
   493       03  filler pic x(31) value "1LOCALE-TIME-FROM-SECONDS   ".
   494       03  filler pic x(31) value "1LOG                        ".
   495       03  filler pic x(31) value "1LOG10                      ".
   496       03  filler pic x(31) value "1LOWER-CASE                 ".
   497       03  filler pic x(31) value "0LOWEST-ALGEBRAIC           ".
   498       03  filler pic x(31) value "1MAX                        ".
   499       03  filler pic x(31) value "1MEAN                       ".
   500       03  filler pic x(31) value "1MEDIAN                     ".
   501       03  filler pic x(31) value "1MIDRANGE                   ".
   502       03  filler pic x(31) value "1MIN                        ".
   503       03  filler pic x(31) value "1MOD                        ".
   504       03  filler pic x(31) value "1MODULE-CALLER-ID           ".
   505       03  filler pic x(31) value "1MODULE-DATE                ".
   506       03  filler pic x(31) value "1MODULE-FORMATTED-DATE      ".
   507       03  filler pic x(31) value "1MODULE-ID                  ".
   508       03  filler pic x(31) value "1MODULE-PATH                ".
   509       03  filler pic x(31) value "1MODULE-SOURCE              ".
   510       03  filler pic x(31) value "1MODULE-TIME                ".
   511       03  filler pic x(31) value "0NATIONAL-OF                ".
   512       03  filler pic x(31) value "1NUMVAL                     ".
   513       03  filler pic x(31) value "1NUMVAL-C                   ".
   514       03  filler pic x(31) value "0NUMVAL-F                   ".
   515       03  filler pic x(31) value "1ORD                        ".
   516       03  filler pic x(31) value "1ORD-MAX                    ".
   517       03  filler pic x(31) value "1ORD-MIN                    ".
   518       03  filler pic x(31) value "0PI                         ".
   519       03  filler pic x(31) value "1PRESENT-VALUE              ".
   520       03  filler pic x(31) value "1RANDOM                     ".
   521       03  filler pic x(31) value "1RANGE                      ".
   522       03  filler pic x(31) value "1REM                        ".
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:55:91  Page   10

   523       03  filler pic x(31) value "1REVERSE                    ".
   524       03  filler pic x(31) value "1SECONDS-FROM-FORMATTED-TIME".
   525       03  filler pic x(31) value "1SECONDS-PAST-MIDNIGHT      ".
   526       03  filler pic x(31) value "1SIGN                       ".
   527       03  filler pic x(31) value "1SIN                        ".
   528       03  filler pic x(31) value "1SQRT                       ".
   529       03  filler pic x(31) value "0STANDARD-COMPARE           ".
   530       03  filler pic x(31) value "1STANDARD-DEVIATION         ".
   531       03  filler pic x(31) value "1STORED-CHAR-LENGTH         ".
   532       03  filler pic x(31) value "1SUBSTITUTE                 ".
   533       03  filler pic x(31) value "1SUBSTITUTE-CASE            ".
   534       03  filler pic x(31) value "1SUM                        ".
   535       03  filler pic x(31) value "1TAN                        ".
   536       03  filler pic x(31) value "1TEST-DATE-YYYYMMDD         ".
   537       03  filler pic x(31) value "1TEST-DAY-YYYYDDD           ".
   538       03  filler pic x(31) value "0TEST-NUMVAL                ".
   539       03  filler pic x(31) value "0TEST-NUMVAL-C              ".
   540       03  filler pic x(31) value "0TEST-NUMVAL-F              ".
   541       03  filler pic x(31) value "1TRIM                       ".
   542       03  filler pic x(31) value "1UPPER-CASE                 ".
   543       03  filler pic x(31) value "1VARIANCE                   ".
   544       03  filler pic x(31) value "1WHEN-COMPILED              ".
   545       03  filler pic x(31) value "1YEAR-TO-YYYY               ".  *>  91
   546       03  filler    values high-values.
   547           05  filler pic x(31) occurs 165.                        *> pad to 256 entries
   548  *>
   549   01  Function-Table-R redefines Function-Table.                  *> updated by Get-Reserved-Lists.cbl
   550       03  All-Functions       occurs 256 ascending key P-Function indexed by All-Fun-Idx.
   551           05  P-oc-implemented pic x.
   552           05  P-Function       pic x(30).
   553   01  Function-Table-Size      pic s9(5)  comp  value 91.          *> updatable by Get-Reserved-Lists.cbl
   554  *>
   555  *> Note that system names are omitted so that they turn up in the cross refs
   556  *>
   557  *> Here for all reserved words in OC see: struct reserved reserved_words in cobc/reserved.c in the open-cobol source directory
   558  *>
   559   01  Additional-Reserved-Words.                                   *> updatable by Get-Reserved-Lists.cbl
   560       03  filler pic x(31) value "1ACCEPT             ".
   561       03  filler pic x(31) value "1ACCESS             ".
   562       03  filler pic x(31) value "0ACTIVE-CLASS       ".
   563       03  filler pic x(31) value "1ADD                ".
   564       03  filler pic x(31) value "1ADDRESS            ".
   565       03  filler pic x(31) value "1ADVANCING          ".
   566       03  filler pic x(31) value "1AFTER              ".
   567       03  filler pic x(31) value "0ALIGNED            ".
   568       03  filler pic x(31) value "1ALL                ".
   569       03  filler pic x(31) value "1ALLOCATE           ".
   570       03  filler pic x(31) value "1ALPHABET           ".
   571       03  filler pic x(31) value "1ALPHABETIC         ".
   572       03  filler pic x(31) value "1ALPHABETIC-LOWER   ".
   573       03  filler pic x(31) value "1ALPHABETIC-UPPER   ".
   574       03  filler pic x(31) value "1ALPHANUMERIC       ".
   575       03  filler pic x(31) value "1ALPHANUMERIC-EDITED".
   576       03  filler pic x(31) value "1ALSO".
   577       03  filler pic x(31) value "1ALTER".
   578       03  filler pic x(31) value "1ALTERNATE".
   579       03  filler pic x(31) value "1AND".
   580       03  filler pic x(31) value "1ANY".
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:55:92  Page   11

   581       03  filler pic x(31) value "0ANYCASE".
   582       03  filler pic x(31) value "1ARE".
   583       03  filler pic x(31) value "1AREA".
   584       03  filler pic x(31) value "1AREAS".
   585       03  filler pic x(31) value "1ARGUMENT-NUMBER".
   586       03  filler pic x(31) value "1ARGUMENT-VALUE".
   587       03  filler pic x(31) value "0ARITHMETIC".
   588       03  filler pic x(31) value "1AS".
   589       03  filler pic x(31) value "1ASCENDING".
   590       03  filler pic x(31) value "1ASCII".
   591       03  filler pic x(31) value "1ASSIGN".
   592       03  filler pic x(31) value "1AT".
   593       03  filler pic x(31) value "0ATTRIBUTE".
   594       03  filler pic x(31) value "1AUTO".
   595       03  filler pic x(31) value "1AUTO-SKIP".
   596       03  filler pic x(31) value "1AUTOMATIC".
   597       03  filler pic x(31) value "1AUTOTERMINATE".
   598       03  filler pic x(31) value "1AWAY-FROM-ZERO".
   599       03  filler pic x(31) value "0B-AND".
   600       03  filler pic x(31) value "0B-NOT".
   601       03  filler pic x(31) value "0B-OR".
   602       03  filler pic x(31) value "0B-XOR".
   603       03  filler pic x(31) value "1BACKGROUND-COLOR".
   604       03  filler pic x(31) value "1BACKGROUND-COLOUR".
   605       03  filler pic x(31) value "1BASED".
   606       03  filler pic x(31) value "1BEEP".
   607       03  filler pic x(31) value "1BEFORE".
   608       03  filler pic x(31) value "1BELL".
   609       03  filler pic x(31) value "1BINARY".
   610       03  filler pic x(31) value "1BINARY-C-LONG".
   611       03  filler pic x(31) value "1BINARY-CHAR".
   612       03  filler pic x(31) value "1BINARY-DOUBLE".
   613       03  filler pic x(31) value "1BINARY-INT".
   614       03  filler pic x(31) value "1BINARY-LONG".
   615       03  filler pic x(31) value "1BINARY-LONG-LONG".
   616       03  filler pic x(31) value "1BINARY-SHORT".
   617       03  filler pic x(31) value "0BIT".
   618       03  filler pic x(31) value "1BLANK".
   619       03  filler pic x(31) value "1BLINK".
   620       03  filler pic x(31) value "1BLOCK".
   621       03  filler pic x(31) value "0BOOLEAN".
   622       03  filler pic x(31) value "1BOTTOM".
   623       03  filler pic x(31) value "1BY".
   624       03  filler pic x(31) value "0BYTE-LENGTH".
   625       03  filler pic x(31) value "1CALL".
   626       03  filler pic x(31) value "1CANCEL".
   627       03  filler pic x(31) value "0CAPACITY".
   628       03  filler pic x(31) value "0CD".
   629       03  filler pic x(31) value "0CENTER".
   630       03  filler pic x(31) value "1CF".
   631       03  filler pic x(31) value "1CH".
   632       03  filler pic x(31) value "0CHAIN".
   633       03  filler pic x(31) value "1CHAINING".
   634       03  filler pic x(31) value "1CHARACTER".
   635       03  filler pic x(31) value "1CHARACTERS".
   636       03  filler pic x(31) value "1CLASS".
   637       03  filler pic x(31) value "0CLASS-ID".
   638       03  filler pic x(31) value "0CLASSIFICATION".
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:55:92  Page   12

   639       03  filler pic x(31) value "1CLOSE".
   640       03  filler pic x(31) value "1COB-CRT-STATUS".
   641       03  filler pic x(31) value "1CODE".
   642       03  filler pic x(31) value "1CODE-SET".
   643       03  filler pic x(31) value "1COL".
   644       03  filler pic x(31) value "1COLLATING".
   645       03  filler pic x(31) value "1COLS".
   646       03  filler pic x(31) value "1COLUMN".
   647       03  filler pic x(31) value "1COLUMNS".
   648       03  filler pic x(31) value "1COMMA".
   649       03  filler pic x(31) value "1COMMAND-LINE".
   650       03  filler pic x(31) value "1COMMIT".
   651       03  filler pic x(31) value "1COMMON".
   652       03  filler pic x(31) value "0COMMUNICATION".
   653       03  filler pic x(31) value "1COMP".
   654       03  filler pic x(31) value "1COMP-1".
   655       03  filler pic x(31) value "1COMP-2".
   656       03  filler pic x(31) value "1COMP-3".
   657       03  filler pic x(31) value "1COMP-4".
   658       03  filler pic x(31) value "1COMP-5".
   659       03  filler pic x(31) value "1COMP-X".
   660       03  filler pic x(31) value "1COMPUTATIONAL".
   661       03  filler pic x(31) value "1COMPUTATIONAL-1".
   662       03  filler pic x(31) value "1COMPUTATIONAL-2".
   663       03  filler pic x(31) value "1COMPUTATIONAL-3".
   664       03  filler pic x(31) value "1COMPUTATIONAL-4".
   665       03  filler pic x(31) value "1COMPUTATIONAL-5".
   666       03  filler pic x(31) value "1COMPUTATIONAL-X".
   667       03  filler pic x(31) value "1COMPUTE".
   668       03  filler pic x(31) value "0CONDITION".
   669       03  filler pic x(31) value "1CONFIGURATION".
   670       03  filler pic x(31) value "1CONSTANT".
   671       03  filler pic x(31) value "1CONTAINS".
   672       03  filler pic x(31) value "1CONTENT".
   673       03  filler pic x(31) value "1CONTINUE".
   674       03  filler pic x(31) value "1CONTROL".
   675       03  filler pic x(31) value "1CONTROLS".
   676       03  filler pic x(31) value "1CONVERTING".
   677       03  filler pic x(31) value "1COPY".
   678       03  filler pic x(31) value "1CORR".
   679       03  filler pic x(31) value "1CORRESPONDING".
   680       03  filler pic x(31) value "1COUNT".
   681       03  filler pic x(31) value "1CRT".
   682       03  filler pic x(31) value "1CRT-UNDER".
   683       03  filler pic x(31) value "1CURRENCY".
   684       03  filler pic x(31) value "1CURSOR".
   685       03  filler pic x(31) value "1CYCLE".
   686       03  filler pic x(31) value "1DATA".
   687       03  filler pic x(31) value "0DATA-POINTER".
   688       03  filler pic x(31) value "1DATE".
   689       03  filler pic x(31) value "1DAY".
   690       03  filler pic x(31) value "1DAY-OF-WEEK".
   691       03  filler pic x(31) value "1DE".
   692       03  filler pic x(31) value "1DEBUGGING".
   693       03  filler pic x(31) value "1DECIMAL-POINT".
   694       03  filler pic x(31) value "1DECLARATIVES".
   695       03  filler pic x(31) value "1DEFAULT".
   696       03  filler pic x(31) value "1DELETE".
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:55:92  Page   13

   697       03  filler pic x(31) value "1DELIMITED".
   698       03  filler pic x(31) value "1DELIMITER".
   699       03  filler pic x(31) value "1DEPENDING".
   700       03  filler pic x(31) value "1DESCENDING".
   701       03  filler pic x(31) value "0DESTINATION".
   702       03  filler pic x(31) value "1DETAIL".
   703       03  filler pic x(31) value "0DISABLE".
   704       03  filler pic x(31) value "1DISK".
   705       03  filler pic x(31) value "1DISPLAY".
   706       03  filler pic x(31) value "1DIVIDE".
   707       03  filler pic x(31) value "1DIVISION".
   708       03  filler pic x(31) value "1DOWN".
   709       03  filler pic x(31) value "1DUPLICATES".
   710       03  filler pic x(31) value "1DYNAMIC".
   711       03  filler pic x(31) value "1EBCDIC".
   712       03  filler pic x(31) value "0EC".
   713       03  filler pic x(31) value "0EGI".
   714       03  filler pic x(31) value "1ELSE".
   715       03  filler pic x(31) value "0EMI".
   716       03  filler pic x(31) value "1EMPTY-CHECK".
   717       03  filler pic x(31) value "0ENABLE".
   718       03  filler pic x(31) value "1END".
   719       03  filler pic x(31) value "1END-ACCEPT".
   720       03  filler pic x(31) value "1END-ADD".
   721       03  filler pic x(31) value "1END-CALL".
   722       03  filler pic x(31) value "1END-COMPUTE".
   723       03  filler pic x(31) value "1END-DELETE".
   724       03  filler pic x(31) value "1END-DISPLAY".
   725       03  filler pic x(31) value "1END-DIVIDE".
   726       03  filler pic x(31) value "1END-EVALUATE".
   727       03  filler pic x(31) value "1END-IF".
   728       03  filler pic x(31) value "1END-MULTIPLY".
   729       03  filler pic x(31) value "1END-OF-PAGE".
   730       03  filler pic x(31) value "1END-PERFORM".
   731       03  filler pic x(31) value "1END-READ".
   732       03  filler pic x(31) value "0END-RECEIVE".
   733       03  filler pic x(31) value "1END-RETURN".
   734       03  filler pic x(31) value "1END-REWRITE".
   735       03  filler pic x(31) value "1END-SEARCH".
   736       03  filler pic x(31) value "1END-START".
   737       03  filler pic x(31) value "1END-STRING".
   738       03  filler pic x(31) value "1END-SUBTRACT".
   739       03  filler pic x(31) value "1END-UNSTRING".
   740       03  filler pic x(31) value "1END-WRITE".
   741       03  filler pic x(31) value "1ENTRY".
   742       03  filler pic x(31) value "0ENTRY-CONVENTION".
   743       03  filler pic x(31) value "1ENVIRONMENT".
   744       03  filler pic x(31) value "1ENVIRONMENT-NAME".
   745       03  filler pic x(31) value "1ENVIRONMENT-VALUE".
   746       03  filler pic x(31) value "0EO".
   747       03  filler pic x(31) value "1EOL".
   748       03  filler pic x(31) value "1EOP".
   749       03  filler pic x(31) value "1EOS".
   750       03  filler pic x(31) value "1EQUAL".
   751       03  filler pic x(31) value "1EQUALS".
   752       03  filler pic x(31) value "1ERASE".
   753       03  filler pic x(31) value "1ERROR".
   754       03  filler pic x(31) value "1ESCAPE".
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:55:93  Page   14

   755       03  filler pic x(31) value "0ESI".
   756       03  filler pic x(31) value "1EVALUATE".
   757       03  filler pic x(31) value "1EXCEPTION".
   758       03  filler pic x(31) value "0EXCEPTION-OBJECT".
   759       03  filler pic x(31) value "1EXCLUSIVE".
   760       03  filler pic x(31) value "1EXIT".
   761       03  filler pic x(31) value "0EXPANDS".
   762       03  filler pic x(31) value "1EXTEND".
   763       03  filler pic x(31) value "1EXTERNAL".
   764       03  filler pic x(31) value "0FACTORY".
   765       03  filler pic x(31) value "1FALSE".
   766       03  filler pic x(31) value "1FD".
   767       03  filler pic x(31) value "1FILE".
   768       03  filler pic x(31) value "1FILE-CONTROL".
   769       03  filler pic x(31) value "1FILE-ID".
   770       03  filler pic x(31) value "1FILLER".
   771       03  filler pic x(31) value "1FINAL".
   772       03  filler pic x(31) value "1FIRST".
   773       03  filler pic x(31) value "0FLOAT-BINARY-16".
   774       03  filler pic x(31) value "0FLOAT-BINARY-34".
   775       03  filler pic x(31) value "0FLOAT-BINARY-7".
   776       03  filler pic x(31) value "0FLOAT-DECIMAL-16".
   777       03  filler pic x(31) value "0FLOAT-DECIMAL-34".
   778       03  filler pic x(31) value "0FLOAT-EXTENDED".
   779       03  filler pic x(31) value "1FLOAT-LONG".
   780       03  filler pic x(31) value "1FLOAT-SHORT".
   781       03  filler pic x(31) value "1FOOTING".
   782       03  filler pic x(31) value "1FOR".
   783       03  filler pic x(31) value "1FOREGROUND-COLOR".
   784       03  filler pic x(31) value "1FOREGROUND-COLOUR".
   785       03  filler pic x(31) value "1FOREVER".
   786       03  filler pic x(31) value "0FORMAT".
   787       03  filler pic x(31) value "1FREE".
   788       03  filler pic x(31) value "1FROM".
   789       03  filler pic x(31) value "1FULL".
   790       03  filler pic x(31) value "1FUNCTION".
   791       03  filler pic x(31) value "1FUNCTION-ID".
   792       03  filler pic x(31) value "0FUNCTION-POINTER".
   793       03  filler pic x(31) value "1GENERATE".
   794       03  filler pic x(31) value "0GET".
   795       03  filler pic x(31) value "1GIVING".
   796       03  filler pic x(31) value "1GLOBAL".
   797       03  filler pic x(31) value "1GO".
   798       03  filler pic x(31) value "1GOBACK".
   799       03  filler pic x(31) value "1GREATER".
   800       03  filler pic x(31) value "1GROUP".
   801       03  filler pic x(31) value "0GROUP-USAGE".
   802       03  filler pic x(31) value "1HEADING".
   803       03  filler pic x(31) value "1HIGH-VALUE".
   804       03  filler pic x(31) value "1HIGH-VALUES".
   805       03  filler pic x(31) value "1HIGHLIGHT".
   806       03  filler pic x(31) value "1I-O".
   807       03  filler pic x(31) value "1I-O-CONTROL".
   808       03  filler pic x(31) value "1ID".
   809       03  filler pic x(31) value "1IDENTIFICATION".
   810       03  filler pic x(31) value "1IF".
   811       03  filler pic x(31) value "1IGNORE".
   812       03  filler pic x(31) value "1IGNORING".
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:55:93  Page   15

   813       03  filler pic x(31) value "0IMPLEMENTS".
   814       03  filler pic x(31) value "1IN".
   815       03  filler pic x(31) value "1INDEX".
   816       03  filler pic x(31) value "1INDEXED".
   817       03  filler pic x(31) value "1INDICATE".
   818       03  filler pic x(31) value "0INDIRECT".
   819       03  filler pic x(31) value "0INFINITY".
   820       03  filler pic x(31) value "0INHERITS".
   821       03  filler pic x(31) value "1INITIAL".
   822       03  filler pic x(31) value "1INITIALISE".
   823       03  filler pic x(31) value "1INITIALISED".
   824       03  filler pic x(31) value "1INITIALIZE".
   825       03  filler pic x(31) value "1INITIALIZED".
   826       03  filler pic x(31) value "0INITIATE".
   827       03  filler pic x(31) value "1INPUT".
   828       03  filler pic x(31) value "1INPUT-OUTPUT".
   829       03  filler pic x(31) value "1INSPECT".
   830       03  filler pic x(31) value "0INTERFACE".
   831       03  filler pic x(31) value "0INTERFACE-ID".
   832       03  filler pic x(31) value "1INTO".
   833       03  filler pic x(31) value "0INTRINSIC".
   834       03  filler pic x(31) value "1INVALID".
   835       03  filler pic x(31) value "0INVOKE".
   836       03  filler pic x(31) value "1IS".
   837       03  filler pic x(31) value "1JUST".
   838       03  filler pic x(31) value "1JUSTIFIED".
   839       03  filler pic x(31) value "1KEPT".
   840       03  filler pic x(31) value "1KEY".
   841       03  filler pic x(31) value "1KEYBOARD".
   842       03  filler pic x(31) value "1LABEL".
   843       03  filler pic x(31) value "1LAST".
   844       03  filler pic x(31) value "0LC_ALL".
   845       03  filler pic x(31) value "0LC_COLLATE".
   846       03  filler pic x(31) value "0LC_CTYPE".
   847       03  filler pic x(31) value "0LC_MESSAGES".
   848       03  filler pic x(31) value "0LC_MONETARY".
   849       03  filler pic x(31) value "0LC_NUMERIC".
   850       03  filler pic x(31) value "0LC_TIME".
   851       03  filler pic x(31) value "1LEADING".
   852       03  filler pic x(31) value "1LEFT".
   853       03  filler pic x(31) value "0LEFT-JUSTIFY".
   854       03  filler pic x(31) value "1LEFTLINE".
   855       03  filler pic x(31) value "1LENGTH".
   856       03  filler pic x(31) value "1LENGTH-CHECK".
   857       03  filler pic x(31) value "1LESS".
   858       03  filler pic x(31) value "1LIMIT".
   859       03  filler pic x(31) value "1LIMITS".
   860       03  filler pic x(31) value "1LINAGE".
   861       03  filler pic x(31) value "1LINAGE-COUNTER".
   862       03  filler pic x(31) value "1LINE".
   863       03  filler pic x(31) value "1LINE-COUNTER".
   864       03  filler pic x(31) value "1LINES".
   865       03  filler pic x(31) value "1LINKAGE".
   866       03  filler pic x(31) value "1LOCAL-STORAGE".
   867       03  filler pic x(31) value "1LOCALE".
   868       03  filler pic x(31) value "1LOCK".
   869       03  filler pic x(31) value "1LOW-VALUE".
   870       03  filler pic x(31) value "1LOW-VALUES".
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:55:93  Page   16

   871       03  filler pic x(31) value "0LOWER".
   872       03  filler pic x(31) value "1LOWLIGHT".
   873       03  filler pic x(31) value "1MANUAL".
   874       03  filler pic x(31) value "1MEMORY".
   875       03  filler pic x(31) value "1MERGE".
   876       03  filler pic x(31) value "0MESSAGE".
   877       03  filler pic x(31) value "0METHOD".
   878       03  filler pic x(31) value "0METHOD-ID".
   879       03  filler pic x(31) value "1MINUS".
   880       03  filler pic x(31) value "1MODE".
   881       03  filler pic x(31) value "1MOVE".
   882       03  filler pic x(31) value "1MULTIPLE".
   883       03  filler pic x(31) value "1MULTIPLY".
   884       03  filler pic x(31) value "1NATIONAL".
   885       03  filler pic x(31) value "1NATIONAL-EDITED".
   886       03  filler pic x(31) value "1NATIVE".
   887       03  filler pic x(31) value "1NEAREST-AWAY-FROM-ZERO".
   888       03  filler pic x(31) value "1NEAREST-EVEN".
   889       03  filler pic x(31) value "1NEAREST-TOWARD-ZERO".
   890       03  filler pic x(31) value "1NEGATIVE".
   891       03  filler pic x(31) value "0NEGATIVE-INFINITY".
   892       03  filler pic x(31) value "0NESTED".
   893       03  filler pic x(31) value "1NEXT".
   894       03  filler pic x(31) value "1NO".
   895       03  filler pic x(31) value "1NO-ECHO".
   896       03  filler pic x(31) value "0NONE".
   897       03  filler pic x(31) value "1NORMAL".
   898       03  filler pic x(31) value "1NOT".
   899       03  filler pic x(31) value "0NOT-A-NUMBER".
   900       03  filler pic x(31) value "1NULL".
   901       03  filler pic x(31) value "1NULLS".
   902       03  filler pic x(31) value "1NUMBER".
   903       03  filler pic x(31) value "1NUMBER-OF-CALL-PARAMETERS".
   904       03  filler pic x(31) value "1NUMBERS".
   905       03  filler pic x(31) value "1NUMERIC".
   906       03  filler pic x(31) value "1NUMERIC-EDITED".
   907       03  filler pic x(31) value "0OBJECT".
   908       03  filler pic x(31) value "1OBJECT-COMPUTER".
   909       03  filler pic x(31) value "0OBJECT-REFERENCE".
   910       03  filler pic x(31) value "1OCCURS".
   911       03  filler pic x(31) value "1OF".
   912       03  filler pic x(31) value "1OFF".
   913       03  filler pic x(31) value "1OMITTED".
   914       03  filler pic x(31) value "1ON".
   915       03  filler pic x(31) value "1ONLY".
   916       03  filler pic x(31) value "1OPEN".
   917       03  filler pic x(31) value "1OPTIONAL".
   918       03  filler pic x(31) value "0OPTIONS".
   919       03  filler pic x(31) value "1OR".
   920       03  filler pic x(31) value "1ORDER".
   921       03  filler pic x(31) value "1ORGANISATION".
   922       03  filler pic x(31) value "1ORGANIZATION".
   923       03  filler pic x(31) value "1OTHER".
   924       03  filler pic x(31) value "1OUTPUT".
   925       03  filler pic x(31) value "1OVERFLOW".
   926       03  filler pic x(31) value "1OVERLINE".
   927       03  filler pic x(31) value "0OVERRIDE".
   928       03  filler pic x(31) value "1PACKED-DECIMAL".
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:55:94  Page   17

   929       03  filler pic x(31) value "1PADDING".
   930       03  filler pic x(31) value "1PAGE".
   931       03  filler pic x(31) value "1PAGE-COUNTER".
   932       03  filler pic x(31) value "1PARAGRAPH".
   933       03  filler pic x(31) value "1PERFORM".
   934       03  filler pic x(31) value "0PF".
   935       03  filler pic x(31) value "0PH".
   936       03  filler pic x(31) value "1PIC".
   937       03  filler pic x(31) value "1PICTURE".
   938       03  filler pic x(31) value "1PLUS".
   939       03  filler pic x(31) value "1POINTER".
   940       03  filler pic x(31) value "1POSITION".
   941       03  filler pic x(31) value "1POSITIVE".
   942       03  filler pic x(31) value "0POSITIVE-INFINITY".
   943       03  filler pic x(31) value "0PREFIXED".
   944       03  filler pic x(31) value "0PRESENT".
   945       03  filler pic x(31) value "1PREVIOUS".
   946       03  filler pic x(31) value "1PRINTER".
   947       03  filler pic x(31) value "0PRINTING".
   948       03  filler pic x(31) value "1PROCEDURE".
   949       03  filler pic x(31) value "1PROCEDURE-POINTER".
   950       03  filler pic x(31) value "1PROCEDURES".
   951       03  filler pic x(31) value "1PROCEED".
   952       03  filler pic x(31) value "1PROGRAM".
   953       03  filler pic x(31) value "1PROGRAM-ID".
   954       03  filler pic x(31) value "1PROGRAM-POINTER".
   955       03  filler pic x(31) value "1PROHIBITED".
   956       03  filler pic x(31) value "1PROMPT".
   957       03  filler pic x(31) value "0PROPERTY".
   958       03  filler pic x(31) value "0PROTOTYPE".
   959       03  filler pic x(31) value "0PURGE".
   960       03  filler pic x(31) value "0QUEUE".
   961       03  filler pic x(31) value "1QUOTE".
   962       03  filler pic x(31) value "1QUOTES".
   963       03  filler pic x(31) value "0RAISE".
   964       03  filler pic x(31) value "0RAISING".
   965       03  filler pic x(31) value "1RANDOM".
   966       03  filler pic x(31) value "0RD".
   967       03  filler pic x(31) value "1READ".
   968       03  filler pic x(31) value "0RECEIVE".
   969       03  filler pic x(31) value "1RECORD".
   970       03  filler pic x(31) value "1RECORDING".
   971       03  filler pic x(31) value "1RECORDS".
   972       03  filler pic x(31) value "1RECURSIVE".
   973       03  filler pic x(31) value "1REDEFINES".
   974       03  filler pic x(31) value "1REEL".
   975       03  filler pic x(31) value "1REFERENCE".
   976       03  filler pic x(31) value "1REFERENCES".
   977       03  filler pic x(31) value "0RELATION".
   978       03  filler pic x(31) value "1RELATIVE".
   979       03  filler pic x(31) value "1RELEASE".
   980       03  filler pic x(31) value "1REMAINDER".
   981       03  filler pic x(31) value "1REMOVAL".
   982       03  filler pic x(31) value "1RENAMES".
   983       03  filler pic x(31) value "1REPLACE".
   984       03  filler pic x(31) value "1REPLACING".
   985       03  filler pic x(31) value "0REPORT".
   986       03  filler pic x(31) value "0REPORTING".
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:55:94  Page   18

   987       03  filler pic x(31) value "0REPORTS".
   988       03  filler pic x(31) value "1REPOSITORY".
   989       03  filler pic x(31) value "0REPRESENTS-NOT-A-NUMBER".
   990       03  filler pic x(31) value "1REQUIRED".
   991       03  filler pic x(31) value "1RESERVE".
   992       03  filler pic x(31) value "1RESET".
   993       03  filler pic x(31) value "0RESUME".
   994       03  filler pic x(31) value "0RETRY".
   995       03  filler pic x(31) value "1RETURN".
   996       03  filler pic x(31) value "1RETURN-CODE".
   997       03  filler pic x(31) value "1RETURNING".
   998       03  filler pic x(31) value "1REVERSE-VIDEO".
   999       03  filler pic x(31) value "1REVERSED".
  1000       03  filler pic x(31) value "1REWIND".
  1001       03  filler pic x(31) value "1REWRITE".
  1002       03  filler pic x(31) value "0RF".
  1003       03  filler pic x(31) value "0RH".
  1004       03  filler pic x(31) value "1RIGHT".
  1005       03  filler pic x(31) value "0RIGHT-JUSTIFY".
  1006       03  filler pic x(31) value "1ROLLBACK".
  1007       03  filler pic x(31) value "1ROUNDED".
  1008       03  filler pic x(31) value "0ROUNDING".
  1009       03  filler pic x(31) value "1RUN".
  1010       03  filler pic x(31) value "1SAME".
  1011       03  filler pic x(31) value "1SCREEN".
  1012       03  filler pic x(31) value "1SD".
  1013       03  filler pic x(31) value "1SEARCH".
  1014       03  filler pic x(31) value "0SECONDS".
  1015       03  filler pic x(31) value "1SECTION".
  1016       03  filler pic x(31) value "1SECURE".
  1017       03  filler pic x(31) value "0SEGMENT".
  1018       03  filler pic x(31) value "1SEGMENT-LIMIT".
  1019       03  filler pic x(31) value "1SELECT".
  1020       03  filler pic x(31) value "0SELF".
  1021       03  filler pic x(31) value "0SEND".
  1022       03  filler pic x(31) value "1SENTENCE".
  1023       03  filler pic x(31) value "1SEPARATE".
  1024       03  filler pic x(31) value "1SEQUENCE".
  1025       03  filler pic x(31) value "1SEQUENTIAL".
  1026       03  filler pic x(31) value "1SET".
  1027       03  filler pic x(31) value "1SHARING".
  1028       03  filler pic x(31) value "1SIGN".
  1029       03  filler pic x(31) value "1SIGNED".
  1030       03  filler pic x(31) value "1SIGNED-INT".
  1031       03  filler pic x(31) value "1SIGNED-LONG".
  1032       03  filler pic x(31) value "1SIGNED-SHORT".
  1033       03  filler pic x(31) value "1SIZE".
  1034       03  filler pic x(31) value "1SORT".
  1035       03  filler pic x(31) value "1SORT-MERGE".
  1036       03  filler pic x(31) value "1SORT-RETURN".
  1037       03  filler pic x(31) value "1SOURCE".
  1038       03  filler pic x(31) value "1SOURCE-COMPUTER".
  1039       03  filler pic x(31) value "0SOURCES".
  1040       03  filler pic x(31) value "1SPACE".
  1041       03  filler pic x(31) value "0SPACE-FILL".
  1042       03  filler pic x(31) value "1SPACES".
  1043       03  filler pic x(31) value "1SPECIAL-NAMES".
  1044       03  filler pic x(31) value "1STANDARD".
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:55:94  Page   19

  1045       03  filler pic x(31) value "1STANDARD-1".
  1046       03  filler pic x(31) value "1STANDARD-2".
  1047       03  filler pic x(31) value "0STANDARD-BINARY".
  1048       03  filler pic x(31) value "0STANDARD-DECIMAL".
  1049       03  filler pic x(31) value "1START".
  1050       03  filler pic x(31) value "0STATEMENT".
  1051       03  filler pic x(31) value "1STATIC".
  1052       03  filler pic x(31) value "1STATUS".
  1053       03  filler pic x(31) value "1STDCALL".
  1054       03  filler pic x(31) value "1STEP".
  1055       03  filler pic x(31) value "1STOP".
  1056       03  filler pic x(31) value "1STRING".
  1057       03  filler pic x(31) value "0STRONG".
  1058       03  filler pic x(31) value "0SUB-QUEUE-1".
  1059       03  filler pic x(31) value "0SUB-QUEUE-2".
  1060       03  filler pic x(31) value "0SUB-QUEUE-3".
  1061       03  filler pic x(31) value "1SUBTRACT".
  1062       03  filler pic x(31) value "1SUM".
  1063       03  filler pic x(31) value "0SUPER".
  1064       03  filler pic x(31) value "1SUPPRESS".
  1065       03  filler pic x(31) value "0SYMBOL".
  1066       03  filler pic x(31) value "1SYMBOLIC".
  1067       03  filler pic x(31) value "1SYNC".
  1068       03  filler pic x(31) value "1SYNCHRONISED".
  1069       03  filler pic x(31) value "1SYNCHRONIZED".
  1070       03  filler pic x(31) value "0SYSTEM-DEFAULT".
  1071       03  filler pic x(31) value "0TABLE".
  1072       03  filler pic x(31) value "1TALLYING".
  1073       03  filler pic x(31) value "1TAPE".
  1074       03  filler pic x(31) value "0TERMINAL".
  1075       03  filler pic x(31) value "1TERMINATE".
  1076       03  filler pic x(31) value "1TEST".
  1077       03  filler pic x(31) value "0TEXT".
  1078       03  filler pic x(31) value "1THAN".
  1079       03  filler pic x(31) value "1THEN".
  1080       03  filler pic x(31) value "1THROUGH".
  1081       03  filler pic x(31) value "1THRU".
  1082       03  filler pic x(31) value "1TIME".
  1083       03  filler pic x(31) value "0TIME-OUT".
  1084       03  filler pic x(31) value "0TIMEOUT".
  1085       03  filler pic x(31) value "1TIMES".
  1086       03  filler pic x(31) value "1TO".
  1087       03  filler pic x(31) value "1TOP".
  1088       03  filler pic x(31) value "1TOWARD-GREATER".
  1089       03  filler pic x(31) value "1TOWARD-LESSER".
  1090       03  filler pic x(31) value "1TRAILING".
  1091       03  filler pic x(31) value "0TRAILING-SIGN".
  1092       03  filler pic x(31) value "1TRANSFORM".
  1093       03  filler pic x(31) value "1TRUE".
  1094       03  filler pic x(31) value "1TRUNCATION".
  1095       03  filler pic x(31) value "1TYPE".
  1096       03  filler pic x(31) value "0TYPEDEF".
  1097       03  filler pic x(31) value "0UCS-4".
  1098       03  filler pic x(31) value "1UNDERLINE".
  1099       03  filler pic x(31) value "1UNIT".
  1100       03  filler pic x(31) value "0UNIVERSAL".
  1101       03  filler pic x(31) value "1UNLOCK".
  1102       03  filler pic x(31) value "1UNSIGNED".
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:55:95  Page   20

  1103       03  filler pic x(31) value "1UNSIGNED-INT".
  1104       03  filler pic x(31) value "1UNSIGNED-LONG".
  1105       03  filler pic x(31) value "1UNSIGNED-SHORT".
  1106       03  filler pic x(31) value "1UNSTRING".
  1107       03  filler pic x(31) value "1UNTIL".
  1108       03  filler pic x(31) value "1UP".
  1109       03  filler pic x(31) value "1UPDATE".
  1110       03  filler pic x(31) value "1UPON".
  1111       03  filler pic x(31) value "0UPPER".
  1112       03  filler pic x(31) value "1USAGE".
  1113       03  filler pic x(31) value "1USE".
  1114       03  filler pic x(31) value "0USER-DEFAULT".
  1115       03  filler pic x(31) value "1USING".
  1116       03  filler pic x(31) value "0UTF-16".
  1117       03  filler pic x(31) value "0UTF-8".
  1118       03  filler pic x(31) value "0VAL-STATUS".
  1119       03  filler pic x(31) value "0VALID".
  1120       03  filler pic x(31) value "0VALIDATE".
  1121       03  filler pic x(31) value "0VALIDATE-STATUS".
  1122       03  filler pic x(31) value "1VALUE".
  1123       03  filler pic x(31) value "1VALUES".
  1124       03  filler pic x(31) value "1VARYING".
  1125       03  filler pic x(31) value "1WAIT".
  1126       03  filler pic x(31) value "1WHEN".
  1127       03  filler pic x(31) value "1WITH".
  1128       03  filler pic x(31) value "1WORDS".
  1129       03  filler pic x(31) value "1WORKING-STORAGE".
  1130       03  filler pic x(31) value "1WRITE".
  1131       03  filler pic x(31) value "1YYYYDDD".
  1132       03  filler pic x(31) value "1YYYYMMDD".
  1133       03  filler pic x(31) value "1ZERO".
  1134       03  filler pic x(31) value "0ZERO-FILL".
  1135       03  filler pic x(31) value "1ZEROES".
  1136       03  filler pic x(31) value "1ZEROS".     *>  577 to here
  1137  *>
  1138       03  filler    value high-values.
  1139           05  filler  pic x(31)  occurs 447.   *> total of 1024
  1140  *>
  1141   01  Additional-Reserved-Words-R redefines Additional-Reserved-Words.      *> updated by Get-Reserved-Lists.cbl
  1142       03  Reserved-Names       occurs 1024 ascending key Resvd-Word indexed by Resvd-Idx.
  1143           05  Resvd-Implemented pic x.
  1144           05  Resvd-Word        pic x(30).
  1145   01  Resvd-Table-Size          pic s9(5)   comp    value 577.   *> updated by Get-Reserved-Lists.cbl
  1146  *>
  1147   01  Condition-Table                           value high-values.
  1148       03  Con-Tab-Blocks occurs 10 to 5001 depending on Con-Tab-Size.
  1149  *> +1 used, when testing for max table size
  1150           05  Conditions      pic x(32).
  1151           05  Variables       pic x(32).
  1152           05  CT-In-Use-Flag  pic x.
  1153           05  filler          pic x.
  1154   01  Con-Tab-Size          Binary-Long value 10.
  1155   01  Con-Tab-Count         Binary-Long value zero.
  1156  *>
  1157   01  Global-Item-Table                         value high-values.
  1158       03  Git-Elements  occurs 10 to 10001 depending on Git-Table-Size.
  1159  *> +1 used, when testing for max table size
  1160         05  Git-Word        pic x(32).
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:55:95  Page   21

  1161         05  Git-Prog-Name   pic x(32).
  1162         05  Git-RefNo       pic 9(6).
  1163         05  Git-HoldWSorPD  pic 9.
  1164         05  Git-HoldWSorPD2 pic 9.
  1165         05  Git-Build-No    pic 99.
  1166         05  Git-In-Use-Flag pic x.
  1167         05  filler          pic x.
  1168   01  Git-Table-Size        Binary-Long value 10.
  1169   01  Git-Table-Count       Binary-Long value zero.
  1170  *>
  1171   procedure division.
  1172   aa000-xref-Data    section.
  1173  *>**************************
  1174  *>  TODO & BUGS:
  1175  *>************************************************************************
  1176  *> AAnnn Section:
  1177  *>  THIS ENTIRE SECTION NEEDS A REWRITE, TOO MUCH TAKEN FROM THE VERY OLD
  1178  *>   CODE BASE. DOES READ-A-WORD CATER FOR MULTIPLE STATEMENTS PER LINE
  1179  *>    WITH PERIODS ENDING EACH STATEMENT? IF SO, WHY ARE WE CHECKING FOR
  1180  *>     WORD-DELIMIT = "." THEN.
  1181  *>  THIS ALL NEEDS A GOOD LOOK AT, SO MUST DONE SOON but with fresh eyes
  1182  *> SUGGEST COMMON CODE LEFT HERE WITH NEW SECTIONS DEALING WITH EACH
  1183  *>  SECTION OR MAIN ENTRY
  1184  *> Also
  1185  *>  routines for source reads, get a word, parsers and tokeniser must be rewritten,
  1186  *>   they are still a complete mess.
  1187  *>
  1188  *>  Version 1.10.nn =
  1189  *>  Re-install code for copybooks assuming source is taken from original file
  1190  *>   and not cobc see printcbl v2.01.13 or later for usable source.
  1191  *>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  1192  *>
  1193  *>  Quesions, Questions, Questions,  all I have, is questions!
  1194  *>************************************************************************
  1195  *>
  1196  *>
  1197       perform  zz190-Init-Program thru zz190-Exit.
  1198       move     high-values to Global-Item-Table.
  1199  *>
  1200       move     zero to ws-Return-Code.
  1201       call     "get-reserved-lists" using ws-Return-Code
  1202                                           Function-Table-R
  1203                                           Function-Table-Size
  1204                                           Additional-Reserved-Words-R
  1205                                           Resvd-Table-Size.
  1206  *>
  1207       if       ws-Return-Code not = zero
  1208                display Msg17.         	*> Possible problem with cobc not in path
  1209  *>
  1210  *> Just in case someone's added names in source code (or in cobc) out of sort order
  1211  *>  We MUST have all tables in sorted order
  1212  *>
  1213       sort     Reserved-Names ascending Resvd-Word.
  1214       sort     All-Functions ascending P-Function.
  1215  *>
  1216       perform  zz180-Open-Source-File thru zz180-Exit.
  1217  *>
  1218  *>  If requested, Dump All reserved words from tables to screen, nothing fancy then stop.
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:55:95  Page   22

  1219  *>
  1220       if       Dump-Reserved-Words
  1221                perform varying a from 1 by 1 until a > Resvd-Table-Size
  1222                      display Resvd-Word (a)
  1223                      end-display
  1224                end-perform
  1225                perform varying a from 1 by 1 until a > Function-Table-Size
  1226                      display P-Function (a)
  1227                      end-display
  1228                end-perform
  1229                move zero to return-code
  1230                goback
  1231       end-if
  1232  *>
  1233       open     output Source-Listing.
  1234       if       Reports-In-Lower
  1235                move function lower-case (Prog-BaseName (1:CWS)) to HoldID
  1236       else
  1237                move function upper-case (Prog-BaseName (1:CWS)) to HoldID
  1238       end-if
  1239       move     HoldID to HoldID-Module.
  1240       move     spaces to Arg-Vals.
  1241  *>
  1242  *> get program id frm source filename in case prog-id not present
  1243  *>
  1244   aa020-Bypass-Open.
  1245       open     output Supplemental-Part1-Out.
  1246  *>
  1247  *> Now add in contents of Global table if processing nested modules
  1248  *>   and we have processed first one by loading sort file
  1249  *>
  1250       if       Git-Table-Count not = zero
  1251                initialize SortRecord
  1252                perform varying a from 1 by 1 until a > Git-Table-Count
  1253                     move Git-HoldWSorPD  (a) to SkaWSorPD
  1254                     move Git-HoldWSorPD2 (a) to SkaWSorPD2
  1255                     if Reports-In-Lower
  1256                        move function lower-case (Git-Word (a)) to SkaDataName
  1257                     else
  1258                        move Git-Word (a) to SkaDataName
  1259                     end-if
  1260                     move Git-RefNo (a) to SkaRefNo
  1261                     move 1 to USect (Git-HoldWSorPD (a))
  1262                     write SortRecord
  1263                end-perform
  1264       end-if
  1265  *>
  1266  *> HoldID gets updated with program-id name when found later
  1267  *>   but we can print 1st report headings using the sourcefile name
  1268  *>    we are assuming the user knows what s/he is doing......:)
  1269  *>
  1270       move     Prog-Name to H1Prog-Name.
  1271       if       List-Source
  1272                perform  zz150-WriteHdb.
  1273  *>
  1274       perform  zz100-Get-A-Source-Record thru zz100-Exit.
  1275       move     1 to q S-Pointer F-Pointer.
  1276  *>
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:55:95  Page   23

  1277   aa030-ReadLoop1.
  1278       if       Source-Eof
  1279             or End-Prog
  1280                display Msg2
  1281                close Supplemental-Part1-Out Source-Listing
  1282                close SourceInput
  1283                move 16 to return-code
  1284                goback.
  1285       perform  zz110-Get-A-Word thru zz110-Exit.
  1286       IF       SourceInWS = "DATA DIVISION.  "
  1287                         or  "FILE SECTION.   "
  1288                         or  "WORKING-STORAGE SECTION."
  1289                         or  "PROCEDURE DIVISION."
  1290                go to aa060-ReadLoop3a.
  1291  *>
  1292  *> The above should never happen, as all modules have a program-id
  1293  *>   but who knows what new standards will allow
  1294  *>
  1295       if       wsFoundWord2 not = "PROGRAM-ID"
  1296                go to aa030-ReadLoop1.
  1297       perform  zz110-Get-A-Word thru zz110-Exit.
  1298  *>
  1299  *> got program name so if 1st prog id -> hold-id
  1300  *>               else -> holdid-module (for reports)
  1301  *>  but 1st check if its a literal & if so remove quotes and use 1st CWS chars
  1302  *>
  1303       if       wsf1-1 = quote or = "'"
  1304                unstring wsFoundWord2 (2:32) delimited by quote or "'"  into wsFoundNewWord
  1305                end-unstring
  1306                move wsFoundNewWord (1:CWS) to  wsFoundWord2
  1307       end-if
  1308       if       not Have-Nested
  1309          if       Reports-In-Lower
  1310                   move function lower-case (wsFoundWord2)  to HoldID
  1311          else
  1312                   move function upper-case (wsFoundWord2)  to HoldID.
  1313       if       Have-Nested            *> found more than 1 module in source
  1314          if       Reports-In-Lower
  1315                   move function lower-case (wsFoundWord2) to HoldID-Module
  1316          else
  1317                   move function upper-case (wsFoundWord2) to HoldID-Module.
  1318  *>
  1319  *> We now have the program-id name so update our info, for reports
  1320  *> Next block of interest is special-names and then file-control
  1321  *>
  1322   aa040-ReadLoop2.
  1323       perform  zz100-Get-A-Source-Record thru zz100-Exit.
  1324       if       SourceInWS (1:14) = "SPECIAL-NAMES."
  1325         if We-Are-Testing display "Found aa040 SPECIAL-NAMES" end-if
  1326                go to aa041-Get-SN.
  1327       if       SourceInWS (1:13) = "FILE-CONTROL."   *> selects
  1328         if We-Are-Testing display "Found aa040 FILE-CONTROL" end-if
  1329                go to aa047-GetIO.
  1330       if       SourceInWS (1:12) = "I-O-CONTROL."    *> same area etc
  1331         if We-Are-Testing display "Found aa040 I-O-CONTROL" end-if
  1332                go to aa048-GetIOC.
  1333       if       SourceInWS (1:12) = "DATA DIVISIO"
  1334         if We-Are-Testing display "Found aa040 DATA DIVISIO" end-if
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:55:96  Page   24

  1335                go to aa041-Get-SN.
  1336       perform  aa045-Test-Section thru aa045-Exit.
  1337  *>
  1338  *> if not zero we've got Data Div onwards
  1339  *>
  1340       if       a not = zero
  1341                go to aa060-ReadLoop3a.
  1342       go       to aa040-ReadLoop2.
  1343  *>
  1344   aa041-Get-SN.
  1345  *>
  1346  *> Get special names
  1347  *>
  1348       perform  zz100-Get-A-Source-Record thru zz100-Exit.
  1349       perform  aa045-Test-Section thru aa045-Exit.
  1350       if       a not = zero
  1351                go to aa060-ReadLoop3a.
  1352       if       SourceInWS (1:13) = "INPUT-OUTPUT " or = "DATA DIVISION"
  1353         if We-Are-Testing display "Found aa041 I-O or DATA DIV" end-if
  1354                go to aa041-Get-SN.
  1355       IF       SourceInWS (1:13) = "FILE-CONTROL."
  1356         if We-Are-Testing display "Found aa041 FILE-CONTROL" end-if
  1357                go to aa047-GetIO.
  1358       IF       SourceInWS (1:12) = "I-O-CONTROL."
  1359         if We-Are-Testing display "Found aa041 I_O_CONTROL" end-if
  1360                go to aa048-GetIOC.
  1361  *>
  1362   aa042-Getword.
  1363       perform  zz110-Get-A-Word thru zz110-Exit.
  1364       if       Word-Delimit = "."
  1365                go to aa041-Get-SN.
  1366       if       wsFoundWord2 (1:9) = "CURRENCY "
  1367                perform aa046-Get-Currency
  1368                go to aa042-Getword.
  1369       if       wsFoundWord2 (1:3) not = "IS "
  1370                go to aa042-Getword.
  1371  *>
  1372       perform  zz110-Get-A-Word thru zz110-Exit.
  1373       if       wsf1-1 = quote or = "'" or wsf1-1-number
  1374                go to aa042-Getword.
  1375       perform  zz130-Extra-Reserved-Word-Check thru zz130-Exit.
  1376       if       a not = zero
  1377                go to aa042-Getword.
  1378       move     wsFoundWord2 (1:CWS) to Saved-Variable.
  1379  *>
  1380   aa044-Getword3.
  1381       perform  zz110-Get-A-Word thru zz110-Exit.
  1382       if       Word-Delimit = "."
  1383                go to aa041-Get-SN.
  1384       if       wsFoundWord2 (1:9) = "CURRENCY "
  1385                perform aa046-Get-Currency
  1386                go to aa044-Getword3.
  1387       if       wsFoundWord2 (1:2) not = "ON"
  1388            and wsFoundWord2 (1:3) not = "OFF"
  1389                go to aa044-Getword3.
  1390       perform  zz110-Get-A-Word thru zz110-Exit.
  1391       if       wsf1-1 = quote or = "'" or wsf1-1-number
  1392                go to aa044-Getword3.
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:55:96  Page   25

  1393       perform  zz130-Extra-Reserved-Word-Check thru zz130-Exit.
  1394       if       a not = zero
  1395                go to aa044-Getword3.
  1396  *>
  1397       if       Con-Tab-Size not < Con-Tab-Count
  1398                add 10 to Con-Tab-Size.
  1399       add      1 to Con-Tab-Count.
  1400
  1401       if       Reports-In-Lower
  1402                move function lower-case (Saved-Variable) to  Variables (Con-Tab-Count)
  1403                move function lower-case (wsFoundWord2 (1:CWS)) to Conditions (Con-Tab-Count)
  1404       else
  1405                move Saved-Variable to Variables (Con-Tab-Count)
  1406                move wsFoundWord2 (1:CWS) to Conditions (Con-Tab-Count)
  1407       end-if
  1408       move     Space  to CT-In-Use-Flag (Con-Tab-Count).
  1409       if       Word-Delimit = "."
  1410                go to aa041-Get-SN.
  1411       go       to aa044-Getword3.
  1412  *>
  1413   aa045-Test-Section.
  1414       perform  varying a from 1 by 1 until a > 8
  1415                if SourceInWS (1:24) = Full-Section-Name (a)
  1416                    exit perform
  1417                end-if
  1418       end-perform.
  1419       if       a > 8
  1420                move zero to a.
  1421  *>
  1422   aa045-Exit.
  1423       exit.
  1424  *>
  1425   aa046-Get-Currency.
  1426  *>
  1427  *> got 'Currency', so process as needed for pic tests in zz110
  1428  *>
  1429       perform  zz110-Get-A-Word thru zz110-Exit.
  1430       if       wsFoundWord2 (1:5) = "SIGN "
  1431             or wsFoundWord2 (1:3) = "IS "
  1432                go to aa046-Get-Currency.
  1433  *>
  1434  *> Now I've got the literal "x"
  1435  *>
  1436       move     wsFoundWord2 (2:1) to Currency-Sign.
  1437       if we-are-testing
  1438          display " Now got currency = " Currency-Sign
  1439       end-if.
  1440  *>
  1441   aa047-GetIO.
  1442  *>
  1443  *> now got file control so it's SELECT ..
  1444  *>
  1445       perform  zz100-Get-A-Source-Record thru zz100-Exit.
  1446       perform  aa045-Test-Section thru aa045-Exit.
  1447       if       a not = zero
  1448                go to aa060-ReadLoop3a.
  1449       IF       SourceInWS (1:12) = "I-O-CONTROL."
  1450         if We-Are-Testing display "Found aa047 I-O-CONTROL" end-if
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:55:96  Page   26

  1451                go to aa048-GetIOC.
  1452       if       SourceInWS (1:12) = "DATA DIVISIO"
  1453         if We-Are-Testing display "Found aa047 DATA DIVISIO" end-if
  1454                go to aa050-ReadLoop3.
  1455       if       SourceInWS (1:12) = "FILE SECTION"
  1456         if We-Are-Testing display "Found aa047 FILE SECTION" end-if
  1457                go to aa060-ReadLoop3a.
  1458  *>  go to aa047-getio.   *> skip selects during test
  1459  *>
  1460   aa047-Getword.
  1461       perform  zz110-Get-A-Word thru zz110-Exit.
  1462       if       Word-Delimit = "."
  1463                go to aa047-GetIO.
  1464  *>
  1465  *> now looking at selects: so looking for non reserved words
  1466  *>
  1467       perform  zz130-Extra-Reserved-Word-Check thru zz130-Exit.
  1468       if       a not = zero
  1469                go to aa047-Getword.
  1470       if       Word-Delimit = "."
  1471                go to aa047-GetIO.
  1472  *> Now have filename-1
  1473       move     1 to HoldWSorPD.
  1474       move     0 to HoldWSorPD2.
  1475       perform  zz030-Write-Sort.
  1476  *>
  1477   aa047-Getword2.
  1478       perform  zz110-Get-A-Word thru zz110-Exit.
  1479       if       Source-Eof
  1480                display Msg16
  1481                close Supplemental-Part1-Out Source-Listing
  1482                close SourceInput
  1483                move 16 to return-code
  1484                goback.
  1485  *>
  1486  *> should have assign
  1487  *>
  1488       if       wsFoundWord2 (1:7) not = "ASSIGN "
  1489                go to aa047-Getword2.
  1490  *>
  1491   aa047-Getword3.
  1492       perform  zz110-Get-A-Word thru zz110-Exit.
  1493       if       (wsf1-1 = quote or = "'") AND Word-Delimit = "."
  1494                go to aa047-GetIO.                               *> End of a SELECT
  1495       if       wsf1-1 = quote or = "'" or wsf1-1-number
  1496                go to aa047-Getword3.
  1497       perform  zz130-Extra-Reserved-Word-Check thru zz130-Exit.
  1498       if       a not = zero and Word-Delimit = "."
  1499                go to aa047-GetIO.
  1500       if       a not = zero
  1501                go to aa047-Getword3.
  1502       if       word-length = zero
  1503                go to aa047-GetIO.
  1504  *>
  1505  *> Now have filename
  1506  *> filenames / datanames declared in Selects are shown as in data division
  1507  *>
  1508       move     1 to HoldWSorPD.
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:55:96  Page   27

  1509       move     0 to HoldWSorPD2.
  1510       perform  zz030-Write-Sort.
  1511       if       Word-Delimit = "."
  1512                go to aa047-GetIO.
  1513       go       to aa047-Getword3.
  1514  *>
  1515   aa048-GetIOC.
  1516       perform  zz110-Get-A-Word thru zz110-Exit.
  1517       if       wsf1-1 = quote or = "'" or wsf1-1-number
  1518                go to aa048-GetIOC.
  1519   aa048-Get-Next.
  1520       if       Word-Delimit = "."
  1521                perform zz100-Get-A-Source-Record thru zz100-Exit
  1522                perform aa045-Test-Section thru aa045-Exit
  1523                if      a not = zero
  1524                        go to aa060-ReadLoop3a
  1525                else
  1526                        perform  zz110-Get-A-Word thru zz110-Exit
  1527                end-if
  1528       end-if
  1529       if       wsFoundWord2 (1:5) not = "SAME "
  1530                go to aa048-GetIOC.
  1531  *>
  1532   aa049-Getword.
  1533       perform  zz110-Get-A-Word thru zz110-Exit.
  1534       perform  zz130-Extra-Reserved-Word-Check thru zz130-Exit.
  1535       if       a not = zero
  1536                go to aa049-Getword.
  1537  *> Now have filename
  1538       move     1 to HoldWSorPD.
  1539       move     0 to HoldWSorPD2.
  1540       perform  zz030-Write-Sort.
  1541       if       Word-Delimit = "."
  1542                go to aa048-Get-Next.
  1543       go       to aa049-Getword.
  1544  *>
  1545   aa050-ReadLoop3.
  1546  *>
  1547  *>    Now for the data division or beyond
  1548  *>
  1549       perform  zz100-Get-A-Source-Record thru zz100-Exit.
  1550  *>
  1551   aa060-ReadLoop3a.
  1552       perform  zz170-Check-4-Section thru zz170-Exit.
  1553       if       GotASection = "Y"
  1554                go to aa050-ReadLoop3.
  1555       if       HoldWSorPD > zero and < 8
  1556                move 1 to S-Pointer2
  1557                perform ba000-Process-WS.
  1558  *>
  1559       if       HoldWSorPD = zero
  1560                go to aa050-ReadLoop3.
  1561  *>
  1562       perform  bb000-Process-Procedure.
  1563       if       End-Prog
  1564                close Supplemental-Part1-Out
  1565       else
  1566                close SourceInput Supplemental-Part1-Out.
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:55:97  Page   28

  1567       perform  bc000-Last-Act.
  1568       if       not End-Prog
  1569                perform  bc620-Do-Global-Conditions thru bc629-Exit
  1570                close Source-Listing.
  1571  *>
  1572       if       not We-Are-Testing
  1573            and not End-Prog
  1574  *>            call "CBL_DELETE_FILE" using SourceFileName
  1575  *> kill temp input file (anything else?) but not yet Use when in OC
  1576                call "CBL_DELETE_FILE" using Supp-File-2
  1577                call "CBL_DELETE_FILE" using Supp-File-1.
  1578  *>
  1579       if       End-Prog
  1580                perform  zz190-Init-Program thru zz190-Exit
  1581                move  spaces to PrintLine
  1582                write PrintLine
  1583                write PrintLine
  1584                write PrintLine
  1585                add  3 to Line-Count
  1586                move  zero to sw-End-Prog
  1587                go    to aa020-Bypass-Open
  1588       end-if
  1589       move     zero to return-code.
  1590       goback.
  1591  *>
  1592   ba000-Process-WS Section.
  1593   ba020-GetAWord.
  1594  *>
  1595  *> this should be getting first word of source record
  1596  *>
  1597       perform  zz110-Get-A-Word thru zz110-Exit.
  1598       if       word-length = zero
  1599                go to ba020-GetAWord.
  1600       if       GotASection = "Y" *> check for Proc. Div
  1601           and  HoldWSorPD = 8
  1602                go to ba000-Exit. *> done, so process proc. div
  1603       if       GotASection = "Y"
  1604                move space to GotASection
  1605                perform zz100-Get-A-Source-Record thru zz100-Exit
  1606                go to ba020-GetAWord.
  1607  *>
  1608  *> lets get a file section element out of the way
  1609  *>
  1610       if       wsFoundWord2 (1:3) = "FD " or = "RD "
  1611                move zero to Global-Current-Level  *> Global only
  1612       else
  1613        if      wsFoundWord2 (1:3) = "CD " or = "SD " *> not these
  1614                move 99 to Global-Current-Level.
  1615  *> Clears Global-Active
  1616  *>
  1617  *> note that for CD & SD setting Global-current-* not needed
  1618  *>                           is it a problem
  1619       if       wsFoundWord2 (1:3) = "FD " or = "SD " or = "RD " or = "CD "
  1620                perform zz110-Get-A-Word thru zz110-Exit  *> get fn
  1621                move zero to HoldWSorPD2
  1622                move zero to sw-Git            *> reset Global flag
  1623                move wsFoundWord2 (1:32) to Global-Current-Word
  1624                move Gen-RefNo1   to Global-Current-RefNo
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:55:97  Page   29

  1625                perform zz030-Write-Sort
  1626                perform ba040-Clear-To-Next-Period thru ba049-Exit
  1627                go to ba020-GetAWord.
  1628  *>
  1629  *> we now have basic ws records, ie starting 01-49,66,77,78,88 etc
  1630  *>
  1631        if      wsFoundWord2 (1:Word-Length) not numeric
  1632                display "ba020:" Msg4 wsFoundWord2 (1:Word-Length) " prog = " HoldID " line = " Gen-RefNo1
  1633                close Source-Listing SourceInput
  1634                      Supplemental-Part1-Out
  1635                move 16 to return-code
  1636                goback.    *> if here, its broke
  1637  *>
  1638  *> word = Build-Number
  1639  *>
  1640        perform zz160-Clean-Number thru zz160-Exit.
  1641        if      Build-Number > 0 and < 50
  1642                move spaces to Saved-Variable.
  1643  *>
  1644        if      Build-Number = 01
  1645           and  (Global-Current-Level = 99
  1646             or HoldWSorPD > 1)
  1647                move zero to sw-Git
  1648                move 1 to Global-Current-Level.
  1649  *>
  1650        if      Build-Number = 88 or = 78 or = 77 or = 66
  1651                                  or (Build-Number > 0 and < 50)
  1652                go to ba050-Get-User-Word.
  1653  *>
  1654  *> getting here Should never happen
  1655  *>
  1656        display "ba020:" Msg5 "bld=" Build-Number " word=" wsFoundWord2 (1:CWS) " prog = " HoldID " line = " Gen-RefNo1.
  1657       close    Source-Listing SourceInput Supplemental-Part1-Out.
  1658       move     20 to return-code.
  1659       goback.                            *> if here, its broke
  1660  *>
  1661   ba040-Clear-To-Next-Period.
  1662       if       Word-Delimit = "."
  1663            and S-Pointer2 not < Source-Line-End
  1664                add 1 to S-Pointer2
  1665                move space to Word-Delimit
  1666                go to ba049-Exit.
  1667       if       Word-Delimit = "."
  1668                go to ba049-Exit.
  1669       perform  zz110-Get-A-Word thru zz110-Exit.
  1670       if       WasPicture = 1     *> current word is a pic sub-clause
  1671                move zero to WasPicture
  1672                go to ba040-Clear-To-Next-Period.
  1673       if       wsFoundWord2 (1:7) = "GLOBAL "
  1674                move 1 to sw-Git
  1675                perform zz200-Load-Git thru zz200-Exit
  1676                go to ba040-Clear-To-Next-Period.
  1677       if       wsFoundWord2 (1:8) = "INDEXED "
  1678                perform ba052-After-Index
  1679                go to ba040-Clear-To-Next-Period.
  1680       if       wsFoundWord2 (1:10) = "DEPENDING "
  1681                perform ba053-After-Depending
  1682                go to ba040-Clear-To-Next-Period.
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:55:97  Page   30

  1683       if       HoldWSorPD = 7 and
  1684                (wsFoundWord2 (1:6) = "TO    " or "FROM  " or "USING ")
  1685                perform zz110-Get-A-Word thru zz110-Exit
  1686                inspect wsFoundWord2 tallying a for all "("
  1687                if a not = zero
  1688                   move wsFoundWord2 to wsFoundNewWord5
  1689                   unstring wsFoundNewWord5 delimited by "(" into wsFoundWord2
  1690                end-if
  1691                perform zz030-Write-Sort
  1692                go to ba040-Clear-To-Next-Period.
  1693  *>
  1694  *> Now looking for other non res words but not literals or numerics
  1695  *>
  1696       if       wsf1-1 = quote or = "'"
  1697                go to ba040-Clear-To-Next-Period.
  1698       if       wsf1-1 = "-" or = "+"
  1699                go to ba040-Clear-To-Next-Period.
  1700       if       wsFoundWord2 (1:z) numeric
  1701                go to ba040-Clear-To-Next-Period.
  1702       if       wsf1-1-number
  1703                go to ba040-Clear-To-Next-Period.
  1704       if       wsf1-1 = "("
  1705                go to ba040-Clear-To-Next-Period.
  1706  *> dont have literals or numerics
  1707       perform  zz130-Extra-Reserved-Word-Check thru zz130-Exit.
  1708       if       a > zero              *> reserved word
  1709                go to ba040-Clear-To-Next-Period.
  1710  *>
  1711  *> if here must have user defined word (unless I have forgotten anything)
  1712  *>     no check for global
  1713  *>
  1714       perform  zz030-Write-Sort.
  1715       go       to ba040-Clear-To-Next-Period.
  1716  *>
  1717   ba049-Exit.
  1718       exit.
  1719  *>
  1720   ba050-Get-User-Word.
  1721  *>
  1722  *> to here with nn ^ word but word could be pic/value etc ie no dataname
  1723  *>
  1724       perform  zz110-Get-A-Word thru zz110-Exit.
  1725       if       wsFoundWord2 (1:7) = "FILLER "
  1726                move "FILLER" to Saved-Variable
  1727                go to ba051-After-DataName.
  1728       perform  zz130-Extra-Reserved-Word-Check thru zz130-Exit.
  1729  *>
  1730  *> Trap for no dataname, ie reserved word
  1731  *>   this [the 'if'] MUST be left in here
  1732  *>
  1733       if       a not = zero
  1734                move "FILLER" to Saved-Variable
  1735                go to ba051-After-New-Word.
  1736  *>
  1737  *> not a reserved word AND a 88, looking for 01 - 49 [ or 77]
  1738  *>
  1739       if       (Build-Number > 0 and < 50) or = 77
  1740                move wsFoundWord2 (1:CWS) to Saved-Variable.
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:55:97  Page   31

  1741  *>
  1742       if       Build-Number = 88
  1743            and Con-Tab-Count not < Con-Tab-Size
  1744                add 10 to    Con-Tab-Size.
  1745       if       Con-Tab-Size > 5000
  1746                move 5001 to Con-Tab-Size           *> just in case
  1747                display Msg6
  1748                go to ba050-Bypass-Add-2-Con-Table.
  1749  *>
  1750  *> add 88 dataname to constant table
  1751  *>
  1752       if       Build-Number = 88
  1753            and Con-Tab-Count < Con-Tab-Size
  1754                add 1 to Con-Tab-Count
  1755                if  Reports-In-Lower
  1756                    move function lower-case (Saved-Variable) to  Variables (Con-Tab-Count)
  1757                    move function lower-case (wsFoundWord2 (1:CWS)) to Conditions (Con-Tab-Count)
  1758                else
  1759                    move Saved-Variable to Variables (Con-Tab-Count)
  1760                    move wsFoundWord2 (1:CWS) to Conditions (Con-Tab-Count)
  1761                end-if
  1762       end-if
  1763       .
  1764  *>
  1765   ba050-Bypass-Add-2-Con-Table.
  1766  *>
  1767  *> we don't have a reserved word! a = 0 = no
  1768  *>
  1769        if      Global-Current-Level not = 99
  1770                move Gen-RefNo1   to Global-Current-RefNo
  1771                move wsFoundWord2 (1:32) to Global-Current-Word.
  1772  *>
  1773        perform zz030-Write-Sort.
  1774  *>
  1775   ba051-After-DataName.
  1776       if       Word-Delimit = "."
  1777            and Build-Number not = 66 and not = 77 and not = 78
  1778            and Saved-Variable not = "FILLER"
  1779            and Global-Active
  1780                perform zz200-Load-Git thru zz200-Exit.
  1781       if       Word-Delimit = "."
  1782                go to ba020-GetAWord.
  1783       if       Global-Active
  1784            and Build-Number = 88
  1785                perform zz200-Load-Git thru zz200-Exit
  1786                perform ba040-Clear-To-Next-Period thru ba049-Exit
  1787                go to ba020-GetAWord.
  1788       perform  zz110-Get-A-Word thru zz110-Exit.
  1789  *>
  1790   ba051-After-New-Word.
  1791       if       wsFoundWord2 (1:10) = "REDEFINES " or
  1792                wsFoundWord2 (1:8) = "RENAMES "
  1793                perform zz110-Get-A-Word thru zz110-Exit
  1794                perform zz030-Write-Sort
  1795       else
  1796        if      wsFoundWord2 (1:7) = "GLOBAL "
  1797                move 1 to sw-Git
  1798                perform zz200-Load-Git thru zz200-Exit
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:55:98  Page   32

  1799        else
  1800         if     Global-Active
  1801            and Build-Number not = 66 and not = 77 and not = 78
  1802            and Saved-Variable not = "FILLER"
  1803                perform zz200-Load-Git thru zz200-Exit.
  1804  *>
  1805       if       HoldWSorPD = 7 and
  1806                (wsFoundWord2 (1:6) = "TO    " or "FROM  " or "USING ")
  1807                perform zz110-Get-A-Word thru zz110-Exit
  1808                inspect wsFoundWord2 tallying a for all "("
  1809                if a not = zero
  1810                   move wsFoundWord2 to wsFoundNewWord5
  1811                   unstring wsFoundNewWord5 delimited by "(" into wsFoundWord2
  1812                end-if
  1813                perform zz030-Write-Sort
  1814       end-if
  1815  *>
  1816       perform  ba040-Clear-To-Next-Period thru ba049-Exit.
  1817       go       to ba020-GetAWord.
  1818  *>
  1819   ba052-After-Index.
  1820  *>
  1821  *> if Index found ignore 'by' if present
  1822  *>
  1823       perform  zz110-Get-A-Word thru zz110-Exit.
  1824       if       wsFoundWord2 (1:3) = "BY "
  1825                go to ba052-After-Index.
  1826  *>
  1827  *> Should have index name and might be global
  1828  *>
  1829       perform  zz030-Write-Sort.
  1830       if       Global-Active
  1831                move wsFoundWord2 (1:32) to Global-Current-Word
  1832                perform zz200-Load-Git thru zz200-Exit.
  1833  *>
  1834   ba053-After-Depending.
  1835  *>
  1836  *> If depending found ignore 'on' if present, no global processing
  1837  *>
  1838       perform  zz110-Get-A-Word thru zz110-Exit.
  1839       if       wsFoundWord2 (1:3) = "ON "
  1840                go to ba053-After-Depending.
  1841  *>
  1842  *> Should have depending name
  1843  *>
  1844       perform  zz030-Write-Sort.
  1845  *>
  1846   ba000-Exit.
  1847       exit.
  1848  *>
  1849   bb000-Process-Procedure Section.
  1850   bb010-New-Record.
  1851  *>
  1852  *> at this point we need to get a word but have PROCEDURE (as in DIVISION) as wsFoundWord2
  1853  *> but 1st, sort Global  table prior to running search(es) and I know it will happen for every module in src after 1st one
  1854  *>    this needs a rewrite as well as process a word etc complete mess
  1855       if       Git-Table-Count > 1
  1856                sort  Git-Elements ascending Git-Word.
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:55:98  Page   33

  1857  *>
  1858   bb020-GetAWord.
  1859       perform  zz110-Get-A-Word thru zz110-Exit.
  1860       if       End-Prog
  1861                go to bb000-Exit.
  1862       if       Source-Eof
  1863                go to bb000-Exit.
  1864       if       Word-Delimit = "."
  1865           and  wsf1-1 = space
  1866                go to bb020-GetAWord.
  1867  *>
  1868   bb030-Chk1.
  1869       if       wsFoundWord2 (1:1) alphabetic
  1870                perform zz130-Extra-Reserved-Word-Check thru zz130-Exit
  1871       else
  1872                move zero to a.
  1873  *>
  1874  *> Do we have a reserved word? a = 0 means no or a number so ignore
  1875  *>
  1876       if       a > zero
  1877                go to bb020-GetAWord.
  1878       if       wsf1-1-Number
  1879                go to bb020-GetAWord.
  1880       if       (wsf1-1 = "-" or = "+")
  1881          and   wsFoundWord2 (2:1) numeric
  1882                go to bb020-GetAWord.
  1883       if       wsf1-1 = quote or = "'"
  1884                go to bb020-GetAWord.
  1885       if       (wsf1-1 = "X" or = "H")
  1886          and   (wsFoundWord2 (2:1) = quote or = "'")
  1887                go to bb020-GetAWord.
  1888       if       wsf1-1 = ":"
  1889          and   Word-Length = 1
  1890                go to bb020-GetAWord.
  1891       if       wsf1-1 = "("
  1892                go to bb050-Check-SubScripts.
  1893  *>
  1894   bb040-chk2.
  1895  *>
  1896  *> check for arithmetic operators
  1897  *>
  1898       if       wsf1-3 = "-  " or = "+  " or = "*  " or = "/  " or = "** "
  1899                go to bb020-GetAWord.
  1900  *>
  1901  *> check for relational Conditions
  1902  *>
  1903       if       wsf1-2 = "> " or = "< " or = "= "
  1904                go to bb020-GetAWord.
  1905       if       wsf1-3 = ">= " or = "<= " or = "<> "
  1906                go to bb020-GetAWord.
  1907  *>
  1908  *> we have a dataname and are we at word one with period delimiter
  1909  *> is it a paragraph?
  1910  *>
  1911       move     2 to HoldWSorPD2.
  1912       if       Word-Delimit = "."
  1913            and Source-Words = 1
  1914                move zero to HoldWSorPD2.
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:55:98  Page   34

  1915  *>
  1916  *> Check if we have a section name if so set wdorpd2 = 1
  1917  *>
  1918       string   wsFoundWord2 (1:Word-Length) delimited by size " SECTION" delimited by size  into HoldFoundWord.
  1919       add      Word-Length 8 giving a.
  1920       if       HoldWSorPD2 not = zero
  1921           and  SourceInWS (1:a) = HoldFoundWord (1:a)
  1922                move 1 to HoldWSorPD2.
  1923       if       wsFoundWord2 (Word-Length:1) = ")"
  1924                move space to wsFoundWord2 (Word-Length:1)
  1925                if  Word-Length > 1
  1926                    subtract 1 from Word-Length
  1927                end-if
  1928                go to bb030-Chk1
  1929       end-if
  1930       perform  zz030-Write-Sort.
  1931       go       to bb020-GetAWord.
  1932  *>
  1933   bb050-Check-SubScripts.
  1934  *>
  1935  *> arrives here with (xxxx) or any variation ie (((xxx etc
  1936  *>   xxx)))
  1937  *>
  1938       move     spaces to wsFoundNewWord3.
  1939       move     zero to a c d q y s s2 z2 z3.
  1940       move     1 to s.                   *> Working Word start point
  1941       move     Word-Length to z z2.      *> Working Word Length
  1942   bb051-Clear-Left-Brace.
  1943       if       z2 < 1                    *>  Should never happen but!
  1944                go to bb020-GetAWord.
  1945       if       wsFoundWord2 (s:1) = "("
  1946                add      1 to s
  1947                subtract 1 from z2
  1948                go to bb051-clear-Left-brace.
  1949  *>
  1950  *> Now we have abcde))) or "abcd"))) or word:word)) or sim.
  1951  *>
  1952   bb052-Clear-Right-Brace.
  1953       if       z2 < 1                    *>  Should never happen but!
  1954                go to bb020-GetAWord.     *>  ie empty braces
  1955       if       wsFoundWord2 (z:1) = ")"
  1956                move space to wsFoundWord2 (z:1)
  1957                subtract 1 from z
  1958                subtract 1 from z2
  1959                subtract 1 from Word-Length
  1960                go to bb052-Clear-Right-Brace.
  1961  *>
  1962  *> s  = left char pos         in wsFoundWord2
  1963  *> z  = right most char pos   in wsFoundWord2
  1964  *> z2 = current word length   in wsFoundWord2
  1965  *> WL = orig length minus No. of ')'
  1966  *>
  1967   bb053-numerics.                        *> not interested in
  1968       if       wsFoundWord2 (s:z2) numeric
  1969                go to bb020-GetAWord.
  1970       if       s < z
  1971                subtract 1 from z2 giving z3
  1972                add 1 s giving s2
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:55:98  Page   35

  1973                if  (wsFoundWord2 (s:1) = "+" or = "-")
  1974                 and wsFoundWord2 (s2:z3) numeric
  1975                     go to bb020-GetAWord
  1976                end-if
  1977       end-if
  1978  *>
  1979  *> Next will clear word):xyz for later processing (bb100) 2014-11-05/14
  1980  *>
  1981       inspect  wsFoundWord2 (s:z2) replacing all ")" by space.
  1982  *>
  1983       inspect  wsFoundWord2 (s:z2) tallying a for all "(".
  1984       inspect  wsFoundWord2 (s:z2) tallying a for all ")".
  1985       if       a > zero                  *> should not have braces now
  1986                display "bb053:Logic Error (A=" a " B=" b " Z2= " Z2 " on " wsFoundWord2 (1:80)
  1987                go to bb020-GetAWord
  1988       end-if
  1989  *>
  1990       inspect  wsFoundWord2 (s:z2) tallying y for all quote.
  1991       inspect  wsFoundWord2 (s:z2) tallying y for all "'".
  1992  *>
  1993       if       y > zero                  *> quotes?
  1994                move  zero to b      q t
  1995                subtract 1 from s giving a
  1996                go to bb060-Scan4-Quotes
  1997       end-if
  1998       inspect  wsFoundWord2 (s:z2) tallying c for all ":".
  1999       if       c > zero                  *> a colon?
  2000                move  zero to b q t
  2001                go to bb100-scan4-colon.
  2002   bb054-spaces.
  2003  *>  left over from old code ??
  2004       inspect  wsFoundWord2 (s:z2) tallying d for all space.
  2005       if       d = zero
  2006                move spaces to wsFoundNewWord
  2007                if   z2 < 33
  2008                     move wsFoundWord2 (s:z2) to wsFoundNewWord
  2009                else
  2010                     move wsFoundWord2 (s:32) to wsFoundNewWord
  2011                     if we-are-testing
  2012                        display "bb054:logic err?: " wsFoundWord2 (s:32)
  2013                     end-if
  2014                end-if
  2015                move wsFoundNewWord to wsFoundWord2
  2016                perform zz130-Extra-Reserved-Word-Check thru zz130-Exit
  2017                if  a > zero              *> reserved word
  2018                        go to bb020-GetAWord
  2019                end-if
  2020                perform zz030-Write-Sort
  2021                go to bb020-GetAWord
  2022       end-if
  2023  *> cockup trap
  2024       display Msg7.
  2025       display "bb054b: wsfw2=" wsFoundWord2 (1:64).
  2026       go to bb020-GetAWord.
  2027  *>
  2028   bb060-Scan4-Quotes.
  2029  *>
  2030  *> we are testing if more than 1 word present inc. a literal but it shouldn't
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:55:99  Page   36

  2031  *>
  2032       add      1 to a.        *>  q now a = field start,  s now b, z = rightmost char
  2033       if       a not > z      *> check for end of data in field
  2034          and   wsFoundWord2 (a:1) not = quote and not = "'"
  2035                add 1 to b
  2036                move wsFoundWord2 (a:1) to wsFoundNewWord3 (b:1)
  2037                go to bb060-Scan4-Quotes.
  2038  *>
  2039  *> wsFoundNewWord3 = non quoted field so far
  2040  *>
  2041   bb070-Got-Quote.        *> starts at 1st quote
  2042       add      1 to a.
  2043       add      1 to t.  *> t = literal length (no quotes)
  2044       if       a > z                       *> Word-Length
  2045                go to bb090-Recover-Word.
  2046       if       wsFoundWord2 (a:1) not = quote and not = "'"
  2047                go to bb070-Got-Quote.
  2048       add      1 to a. *> a = next char after 2nd quote
  2049       add      1 to t.
  2050  *>
  2051  *> t = quoted lit length including quotes
  2052  *>   and we are now at end quote + 1
  2053   bb080-Quote-Clean.
  2054       if       a > z                       *> Word-Length
  2055                go to bb090-Recover-Word.
  2056       if we-are-testing
  2057           display "bb080: found 2nd word in scan=" wsFoundWord2
  2058       end-if
  2059       add      1 to b.
  2060       move     wsFoundWord2 (a:1) to wsFoundNewWord3 (b:1).
  2061       add      1 to a.
  2062       go       to bb080-Quote-Clean.
  2063  *>
  2064   bb090-Recover-Word.
  2065  *>
  2066  *> Word-Length and wsFoundWord2 less quoted field could be > 1 word in wsfnw3
  2067  *>
  2068       subtract t from Word-Length.
  2069       if       Word-Length < 1
  2070                go to bb020-GetAWord.
  2071       move     wsFoundNewWord3 (1:CWS) to wsFoundWord2 (1:CWS).
  2072       go       to bb050-Check-SubScripts.
  2073  *>
  2074   bb100-scan4-colon.
  2075  *>
  2076  *> now we can have num:num DataName:DN num:DN DN:num
  2077  *> z2 = current WL, s = leftmost char & z= rightmost char in wsFW2
  2078  *>
  2079       move     spaces to wsFoundNewWord wsFoundNewWord2.
  2080       move     1 to t.
  2081       unstring wsFoundWord2 (s:z2) delimited by ":" into wsFoundNewWord count q pointer t.
  2082  *> t now : +1
  2083       unstring wsFoundWord2 (s:z2) delimited by " " into wsFoundNewWord2 count b pointer t.
  2084       if     t not > z2 or not = Word-Length
  2085              display "bb100 Error: t=" t " word-len="
  2086              Word-Length " z2=" z2.
  2087  *> this numeric test may not work?
  2088       if       wsFoundNewWord (1:q) not numeric
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:55:99  Page   37

  2089           and  wsFoundNewWord (1:1) not = "-" and not = "+"
  2090                move spaces to wsFoundWord2
  2091                move wsFoundNewWord (1:q) to wsFoundWord2
  2092                perform zz030-Write-Sort.
  2093  *> this numeric test may not work?
  2094       if       b > zero
  2095          and   wsFoundNewWord2 (1:b) not numeric
  2096           and  wsFoundNewWord2 (1:1) not = "-" and not = "+"
  2097                move spaces to wsFoundWord2
  2098                move wsFoundNewWord2 (1:b) to wsFoundWord2
  2099                perform zz030-Write-Sort.
  2100       go       to bb020-GetAWord.
  2101   bb000-Exit.
  2102       exit.
  2103  *>
  2104   bc000-Last-Act Section.
  2105  *>*********************
  2106  *>  Report Phase
  2107  *>
  2108       sort     SortFile
  2109                ascending key SdSortKey
  2110                using  Supplemental-Part1-Out
  2111                giving Supplemental-Part2-In.
  2112       if       Git-Table-Count > 1
  2113                sort  Git-Elements ascending Git-Word.
  2114  *> Print order:
  2115  *> Note that although some sections are not yet supported in GC they
  2116  *>       are, in cobxref.
  2117  *>   Xref'd -
  2118  *>     At bc090 = In order: File Section, Working-Storage, Local-Storage,
  2119  *>                 Linkage, Communication, Report, Screen
  2120  *>     At bc600 = Globals (in nested modules)
  2121  *>     At bc190 = Special-names & Conditions (& linked variables),
  2122  *>     At bc300 = Functions,
  2123  *>     At bc200 = Procedure Div,
  2124  *>     At bc400 = Unreferenced: File & WS,
  2125  *>     At bc500 = Unreferenced Procedure,
  2126  *>     At bc620 = Unreferenced Globals (throughout source)
  2127  *>
  2128       if       not All-Reports
  2129                go to bc090-Last-Pass2.
  2130  *>
  2131  *> produce group W-S xref & procedure used in testing
  2132  *>  and taken from original code circa 1983.
  2133  *>  ------- Leave in just in case needed for testing ----
  2134  *>
  2135   bc010-group-report.
  2136       move     spaces to saveSkaDataName.
  2137       open     input Supplemental-Part2-In.
  2138       read     Supplemental-Part2-In at end
  2139                display Msg1
  2140                go to bc000-Exit.
  2141       perform  zz150-WriteHdb thru zz150-Exit.
  2142       perform  zz150-WriteHdb8 thru zz150-Exit.
  2143       move     zero to q.
  2144       go       to bc030-IsX.
  2145  *>
  2146   bc020-Read-Sorter.
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:55:99  Page   38

  2147       read     Supplemental-Part2-In at end
  2148                perform bc050-Check-Q
  2149                close Supplemental-Part2-In
  2150                go to bc000-Exit.
  2151  *>              go to bc090-Last-Pass2.
  2152  *>
  2153   bc030-IsX.
  2154       if       SkaDataName = spaces
  2155                go to bc020-Read-Sorter.
  2156       perform  bc040-PrintXRef thru bc080-Exit.
  2157       go       to bc020-Read-Sorter.
  2158  *>
  2159   bc040-PrintXRef.
  2160       if       SkaDataName = saveSkaDataName
  2161                go to bc070-ConnectD.
  2162       move     SkaDataName to saveSkaDataName.
  2163  *>
  2164   bc050-Check-Q.
  2165       if       XrDataName not = spaces
  2166           and  q = zero
  2167                move 1 to q.
  2168       if       q > zero
  2169                write PrintLine after 1
  2170                add   1 to Line-Count
  2171                if  Line-Count > 59
  2172                    perform  zz150-WriteHdb thru zz150-Exit
  2173                    perform  zz150-WriteHdb8 thru zz150-Exit
  2174                end-if
  2175                move zero to q
  2176                move spaces to PrintLine.
  2177  *>
  2178   bc060-ConnectC.
  2179       move     spaces to PrintLine.
  2180       move     SkaDataName to XrDataName.
  2181       move     SkaRefNo to XrDefn.
  2182       move     LSect (SkaWSorPD) to XrType.
  2183       go       to bc080-Exit.
  2184  *>
  2185   bc070-ConnectD.
  2186       if       q > 7
  2187                perform bc050-Check-Q.
  2188       add      1 to q.
  2189       move     SkaRefNo to XrReference (q).
  2190  *>
  2191   bc080-Exit.
  2192       Exit.
  2193  *>
  2194   bc090-Last-Pass2.
  2195  *>****************
  2196  *> printout W-S section blocks as needed
  2197  *> Check if any w-s used in module if not, do conditions, functions etc
  2198  *>
  2199       move     70 to Line-Count.
  2200       if       Section-Used-Table not = zeros
  2201                move  1 to WS-Anal1
  2202                perform bc100-Working-Storage-Report thru bc180-Exit 7 times.
  2203  *>
  2204       if       Git-Table-Count > zero
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:55:99  Page   39

  2205                perform bc600-Print-Globals thru bc600-Exit.
  2206       go       to bc190-Do-Conditions.
  2207  *>
  2208   bc100-Working-Storage-Report.
  2209  *>****************************
  2210  *>  skip section if no data
  2211  *>
  2212       if       USect (WS-Anal1) = zero
  2213                add 1 to WS-Anal1
  2214                go to bc180-Exit.
  2215  *>
  2216       move     spaces to saveSkaDataName.
  2217       open     input Supplemental-Part2-In.
  2218       read     Supplemental-Part2-In at end
  2219                display Msg1
  2220                go to bc000-Exit.
  2221       perform  zz150-WriteHdb thru zz150-Exit.
  2222       perform  zz150-WriteHdb2 thru zz150-Exit.
  2223       move     zero to q.
  2224  *>
  2225  *> group report
  2226  *>
  2227       go       to bc120-IsX2.
  2228  *>
  2229   bc110-Read-Sorter.
  2230       read     Supplemental-Part2-In at end
  2231                add 1 to WS-Anal1
  2232                perform  bc140-Check-Q
  2233                close Supplemental-Part2-In
  2234                go to bc180-Exit.
  2235  *>
  2236   bc120-IsX2.
  2237       if       SkaDataName = spaces
  2238                go to bc110-Read-Sorter.
  2239       perform  bc130-PrintXRef2 thru bc170-Exit.
  2240       go       to bc110-Read-Sorter.
  2241  *>
  2242   bc130-PrintXRef2.
  2243  *>      test was 8
  2244       if       SkaDataName = saveSkaDataName
  2245                go to bc160-ConnectD2.
  2246  *>
  2247       if       SkaWSorPD > WS-Anal1
  2248                go to bc170-Exit.
  2249       if       SkaWSorPD not = WS-Anal1
  2250                go to bc170-Exit.
  2251  *>
  2252  *> new variable groups 1 thru 7
  2253  *>
  2254       move     SkaDataName to saveSkaDataName.
  2255       move     SkaWSorPD   to saveSkaWSorPD.
  2256       move     SkaWSorPD2  to saveSkaWSorPD2.
  2257  *>
  2258   bc140-Check-Q.
  2259       if       XrDataName not = spaces
  2260           and  q = zero
  2261                move 1 to q.
  2262       if       q > zero
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:56:00  Page   40

  2263                write PrintLine after 1
  2264                add   1 to Line-Count
  2265                if  Line-Count > 59
  2266                    perform  zz150-WriteHdb thru zz150-Exit
  2267                    perform  zz150-WriteHdb2 thru zz150-Exit
  2268                end-if
  2269                move zero to q
  2270                move 1 to q2
  2271                move spaces to PrintLine.
  2272  *>
  2273   bc150-ConnectC2.
  2274       move     spaces to PrintLine.
  2275       move     SkaDataName to XrDataName.
  2276       move     SkaRefNo to XrDefn.
  2277       move     LSect (SkaWSorPD) to XrType.
  2278       go       to bc170-Exit.
  2279  *>
  2280   bc160-ConnectD2.
  2281       if       q > 7
  2282                perform bc140-Check-Q.
  2283       add      1 to q.
  2284       move     SkaRefNo to XrReference (q).
  2285   bc170-Exit.
  2286       exit.
  2287  *>
  2288   bc180-Exit.
  2289       exit.
  2290  *>
  2291   bc190-Do-Conditions.
  2292  *>
  2293  *> start with sorted variables
  2294  *>
  2295       if       Con-Tab-Count = zero
  2296                go to bc195-Done.
  2297       if       Con-Tab-Count > 1
  2298                sort  Con-Tab-Blocks ascending Variables.
  2299       move     "[S]" to hdr11a-sorted.
  2300       move     spaces to hdr11b-sorted.
  2301       perform  zz150-WriteHdb.
  2302       perform  zz150-WriteHdb7 thru zz150-Exit.
  2303       move     zero to a.
  2304       perform  bc192-Print-Conditions.
  2305       go       to bc194-Now-Reverse.
  2306   bc192-Print-Conditions.
  2307       if       a < Con-Tab-Count
  2308                add 1 to a
  2309                move spaces to PrintLine2
  2310                move  Conditions (a) to P-Variables
  2311                move  Variables (a) to P-Conditions
  2312                write PrintLine2 after 1
  2313                add   1 to Line-Count
  2314                if  Line-Count > 59
  2315                    perform  zz150-WriteHdb
  2316                    perform  zz150-WriteHdb7 thru zz150-Exit
  2317                end-if
  2318                go to bc192-Print-Conditions.
  2319  *>
  2320   bc194-Now-Reverse.
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:56:00  Page   41

  2321  *>
  2322  *> now sort conditions if more than 1 element in table
  2323  *>   and print else don't
  2324  *>
  2325       if       Con-Tab-Count > 1
  2326                sort  Con-Tab-Blocks ascending Conditions
  2327                move     "[S]" to hdr11b-sorted
  2328                move     spaces to hdr11a-sorted
  2329                perform  zz150-WriteHdb
  2330                perform  zz150-WriteHdb7 thru zz150-Exit
  2331                move     zero to a
  2332                perform  bc192-Print-Conditions.
  2333       move     spaces to PrintLine2.
  2334   bc195-Done.
  2335       perform  bc300-Last-Pass4 thru bc399-Exit.
  2336  *>
  2337  *> now pass3 (fall thru)
  2338  *>
  2339   bc200-Last-Pass3.
  2340  *>****************
  2341  *> now do procedure div and ref to procedure div but no functions
  2342  *>
  2343       move     spaces to saveSkaDataName.
  2344       move     zero to saveSkaWSorPD saveSkaWSorPD2 q2.
  2345       open     input Supplemental-Part2-In.
  2346       read     Supplemental-Part2-In at end
  2347                display Msg1
  2348                go to bc000-Exit.
  2349       perform  zz150-WriteHdb.
  2350       move     "Procedure" to hdr8-hd
  2351       perform  zz150-WriteHdb3 thru zz150-Exit.
  2352       move     zero to q.
  2353       go       to bc220-IsX3.
  2354   bc210-Read-Sorter3.
  2355       read     Supplemental-Part2-In at end
  2356                perform bc280-Check-Q
  2357                close Supplemental-Part2-In
  2358                if   q2 = zero
  2359                     move spaces to PrintLine
  2360                     move "None" to XrDataName
  2361                     write PrintLine after 1
  2362                     add   1 to Line-Count
  2363                end-if
  2364                go to bc400-Last-Pass5.
  2365  *>
  2366   bc220-IsX3.
  2367       if       SkaDataName = spaces
  2368                go to bc210-Read-Sorter3.
  2369       perform  bc230-PrintXRef3 thru bc270-Exit.
  2370       go       to bc210-Read-Sorter3.
  2371  *>
  2372   bc230-PrintXRef3.
  2373  *>
  2374  *> ignore all working-storage
  2375  *>
  2376       if       SkaDataName not = saveSkaDataName
  2377           and  SkaWSorPD not = 8
  2378                move  SkaDataName to saveSkaDataName
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:56:00  Page   42

  2379                move  SkaWSorPD   to saveSkaWSorPD
  2380                move  SkaWSorPD2  to saveSkaWSorPD2
  2381                go to bc270-Exit.
  2382  *>
  2383  *> catch any redefines
  2384  *>
  2385       if       SkaDataName = saveSkaDataName
  2386           and  saveSkaWSorPD not = 8
  2387                go to bc270-Exit.
  2388  *>
  2389  *> catch any procedure followed by functions
  2390  *>   dont think this can happen
  2391  *>
  2392       if       SkaDataName = saveSkaDataName
  2393           and  saveSkaWSorPD = 8
  2394           and  SkaWSorPD > 8
  2395                go to bc270-Exit.
  2396  *>
  2397       if       SkaDataName = saveSkaDataName
  2398                go to bc260-ConnectD3.
  2399       move     SkaDataName to saveSkaDataName.
  2400       move     SkaWSorPD   to saveSkaWSorPD.
  2401       move     SkaWSorPD2  to saveSkaWSorPD2.
  2402       perform  bc280-Check-Q.
  2403   bc250-ConnectC3.
  2404       move     spaces to PrintLine.
  2405       move     SkaDataName to XrDataName.
  2406       move     SkaRefNo to XrDefn.
  2407  *>
  2408  *> process sections
  2409  *>
  2410       if       SkaWSorPD2 not = 1
  2411                move LSect (SkaWSorPD) to XrType
  2412       else
  2413                move "S" to XrType.
  2414       go       to bc270-Exit.
  2415   bc260-ConnectD3.
  2416       if       q > 7
  2417                perform bc280-Check-Q.
  2418       add      1 to q.
  2419       move     SkaRefNo to XrReference (q).
  2420   bc270-Exit.
  2421       exit.
  2422  *>
  2423   bc280-Check-Q.
  2424       if       XrDataName not = spaces
  2425           and  q = zero
  2426                move 1 to q.
  2427       if       q > zero
  2428                write PrintLine after 1
  2429                add   1 to Line-Count
  2430                if  Line-Count > 59
  2431                    perform  zz150-WriteHdb
  2432                    move     "Procedure" to hdr8-hd
  2433                    perform  zz150-WriteHdb3 thru zz150-Exit
  2434                end-if
  2435                move zero to q
  2436                move 1 to q2
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:56:00  Page   43

  2437                move spaces to PrintLine.
  2438  *>
  2439   bc300-Last-Pass4.
  2440  *>****************
  2441  *> now do functions
  2442  *>
  2443       if       USect (9) = zero
  2444                go to bc399-Exit.
  2445       move     spaces to saveSkaDataName.
  2446       move     zero to saveSkaWSorPD saveSkaWSorPD2 q2.
  2447       move     70 to Line-Count.
  2448       open     input Supplemental-Part2-In.
  2449       read     Supplemental-Part2-In at end
  2450                display Msg1
  2451                go to bc000-Exit.
  2452       move     zero to q.
  2453       go       to bc320-IsX4.
  2454  *>
  2455   bc310-Read-Sorter4.
  2456       read     Supplemental-Part2-In at end
  2457                perform bc335-Check-Q
  2458                close Supplemental-Part2-In
  2459                go to bc399-Exit.
  2460   bc320-IsX4.
  2461       if       SkaDataName = spaces
  2462                go to bc310-Read-Sorter4.
  2463       perform  bc330-PrintXRef4 thru bc360-Exit.
  2464       go       to bc310-Read-Sorter4.
  2465   bc330-PrintXRef4.
  2466  *>
  2467  *> ignore all working-storage & procedure
  2468  *>
  2469       if       SkaWSorPD not = 9
  2470                go to bc360-Exit.
  2471  *>
  2472       if       Line-Count > 59
  2473                move "Functions" to hdr8-hd
  2474                move zero to Line-Count
  2475                perform zz150-WriteHdb
  2476                perform zz150-WriteHdb3 thru zz150-Exit.
  2477  *>
  2478       if       SkaDataName = saveSkaDataName
  2479                go to bc350-ConnectD4.
  2480       move     SkaDataName to saveSkaDataName.
  2481   bc335-Check-Q.
  2482       if       XrDataName not = spaces
  2483           and  q = zero
  2484                move 1 to q.
  2485       if       q > zero
  2486                write PrintLine after 1
  2487                add   1 to Line-Count
  2488                move zero to q
  2489                move 1 to q2
  2490                move spaces to PrintLine.
  2491   bc340-ConnectC4.
  2492       move     spaces to PrintLine.
  2493       move     SkaDataName to XrDataName.
  2494       move     SkaRefNo to XrDefn.
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:56:01  Page   44

  2495       move     LSect (SkaWSorPD) to XrType.
  2496       go       to bc360-Exit.
  2497   bc350-ConnectD4.
  2498       if       q > 7
  2499                perform bc335-Check-Q.
  2500       add      1 to q.
  2501       move     SkaRefNo to XrReference (q).
  2502   bc360-Exit.
  2503       exit.
  2504  *>
  2505   bc399-Exit.
  2506       exit.
  2507  *>
  2508   bc400-Last-Pass5.
  2509  *>****************
  2510  *> now do non referenced ws but ignore references of zero (Globals).
  2511  *>
  2512       move     spaces to saveSkaDataName.
  2513       move     zero to saveSkaWSorPD saveSkaWSorPD2 S-Pointer.
  2514       open     input Supplemental-Part2-In.
  2515       read     Supplemental-Part2-In at end
  2516                display Msg1
  2517                go to bc000-Exit.
  2518       perform  zz150-WriteHdb.
  2519       perform  zz150-WriteHdb4 thru zz150-Exit.
  2520       move     zero to q.
  2521       go       to bc420-IsX5.
  2522  *>
  2523   bc410-Read-Sorter5.
  2524       read     Supplemental-Part2-In at end
  2525                perform bc440-Check-4Old
  2526                close Supplemental-Part2-In
  2527                if   S-Pointer = zero
  2528                     move spaces to PrintLine
  2529                     move "None" to XrDataName
  2530                     add   1 to Line-Count
  2531                     write PrintLine after 1
  2532                end-if
  2533                go to bc500-Last-Pass6.
  2534   bc420-IsX5.
  2535  *>
  2536  *> ignore zero refs = Globals  ??????????
  2537  *>
  2538       if       SkaDataName = spaces
  2539             or SkaRefNo = zeros
  2540                go to bc410-Read-Sorter5.
  2541       perform  bc430-PrintXRef5 thru bc450-Exit.
  2542       go       to bc410-Read-Sorter5.
  2543   bc430-PrintXRef5.
  2544  *>
  2545  *> ignore redefines - No I won't
  2546  *>
  2547  *>     if       SkaDataName = saveSkaDataName
  2548  *>         and  SkaWSorPD < 8
  2549  *>              go to bc450-Exit.
  2550       if       SkaDataName = saveSkaDataName
  2551                move 2 to q
  2552                go to bc450-Exit.
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:56:01  Page   45

  2553  *> 1st copy of a name can't be non w-s
  2554       if       SkaWSorPD > 7
  2555                go to bc450-Exit.
  2556  *> print Only occurance then store new one
  2557       perform  bc440-Check-4Old.
  2558  *>
  2559       move     SkaDataName to saveSkaDataName.
  2560  *>
  2561  *> first record for a given name
  2562  *>
  2563       move     spaces to PrintLine.
  2564       move     SkaDataName to XrDataName.
  2565       move     SkaRefNo to XrDefn.
  2566       move     LSect (SkaWSorPD) to XrType.
  2567       move     1 to q.
  2568       go       to bc450-Exit.
  2569   bc440-Check-4Old.
  2570       if       q = 1
  2571                move 1 to S-Pointer
  2572                add   1 to Line-Count
  2573                write PrintLine after 1
  2574                if  Line-Count > 59
  2575                    perform  zz150-WriteHdb
  2576                    perform  zz150-WriteHdb4 thru zz150-Exit
  2577                end-if.
  2578   bc450-Exit.
  2579       exit.
  2580  *>
  2581   bc500-Last-Pass6.
  2582  *>****************
  2583  *> now do non referenced procedure paragraphs.
  2584  *>
  2585       move     spaces to saveSkaDataName.
  2586       move     zero to saveSkaWSorPD S-Pointer.
  2587       open     input Supplemental-Part2-In.
  2588       read     Supplemental-Part2-In at end
  2589                display Msg1
  2590                go to bc000-Exit.
  2591       perform  zz150-WriteHdb.
  2592       perform  zz150-WriteHdb5 thru zz150-Exit.
  2593       move     zero to q.
  2594       go       to bc520-IsX6.
  2595   bc510-Read-Sorter6.
  2596       read     Supplemental-Part2-In at end
  2597                perform bc540-Check-4Old
  2598                perform bc540-Check-4Old6
  2599                close Supplemental-Part2-In
  2600                go to bc000-Exit.
  2601   bc520-IsX6.
  2602       if       SkaDataName = spaces
  2603                go to bc510-Read-Sorter6.
  2604       perform  bc530-PrintXRef6 thru bc550-Exit.
  2605       go       to bc510-Read-Sorter6.
  2606   bc530-PrintXRef6.
  2607  *>
  2608  *> ignore all non procedure
  2609  *>
  2610       if       SkaDataName = saveSkaDataName
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:56:01  Page   46

  2611                move zero to q
  2612                go to bc550-Exit.
  2613  *> print only occurance then store new one
  2614       if       q = 1
  2615          and   saveSkaWSorPD = 8
  2616                move 1 to S-Pointer
  2617                add   1 to Line-Count
  2618                write PrintLine after 1
  2619                if  Line-Count > 59
  2620                    perform  zz150-WriteHdb
  2621                    perform  zz150-WriteHdb5 thru zz150-Exit
  2622                end-if.
  2623       move     SkaDataName to saveSkaDataName.
  2624       move     SkaWSorPD to saveSkaWSorPD.
  2625  *>
  2626  *> first record for a given name
  2627  *>
  2628       move     spaces to PrintLine.
  2629       move     SkaDataName to XrDataName.
  2630       move     SkaRefNo to XrDefn.
  2631       if       SkaWSorPD2 not = 1
  2632                move LSect (SkaWSorPD) to XrType
  2633       else
  2634                move "S" to XrType.
  2635       move     1 to q.
  2636       go       to bc550-Exit.
  2637   bc540-Check-4Old.
  2638       if       q = 1 and saveSkaWSorPD = 8
  2639                move 1 to S-Pointer
  2640                add   1 to Line-Count
  2641                write PrintLine after 1
  2642                if  Line-Count > 59
  2643                    perform  zz150-WriteHdb
  2644                    perform  zz150-WriteHdb5 thru zz150-Exit
  2645                end-if.
  2646   bc540-Check-4Old6.
  2647       if       S-Pointer = zero
  2648                move spaces to PrintLine
  2649                move "None" to XrDataName
  2650                add   1 to Line-Count
  2651                write PrintLine  after 1.
  2652   bc550-Exit.
  2653       exit.
  2654  *>
  2655   bc600-Print-Globals.
  2656  *>*******************
  2657  *>  Print Global List for all xrefd modules
  2658  *>
  2659       perform  zz150-WriteHdb thru zz150-Exit.
  2660       perform  zz150-WriteHdb2b thru zz150-Exit.
  2661       move     spaces to PrintLine.
  2662       perform  varying a from 1 by 1 until a > Git-Table-Count
  2663                move Git-RefNo (a) to XrDefn
  2664                move Git-HoldWSorPD (a) to b
  2665                if Reports-In-Lower
  2666                    move function lower-case (Git-Word (a))      to XrDataName
  2667                    move function lower-case (Git-Prog-Name (a)) to PL-Prog-Name
  2668                else
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:56:01  Page   47

  2669                    move Git-Word (a) to XrDataName
  2670                    move Git-Prog-Name (a) to PL-Prog-Name
  2671                end-if
  2672                move LSect (b) to XrType
  2673                add   1 to Line-Count
  2674                write PrintLine after 1
  2675                if  Line-Count > 59
  2676                    perform  zz150-WriteHdb thru zz150-Exit
  2677                    perform  zz150-WriteHdb2b thru zz150-Exit
  2678                end-if
  2679       end-perform.
  2680  *>
  2681   bc600-Exit.
  2682       exit.
  2683  *>
  2684   bc620-Do-Global-Conditions.
  2685  *>**************************
  2686  *> Produce report of unused Global Conditions if any
  2687  *>
  2688       if       Git-Table-Count = zero
  2689                go to bc629-Exit.
  2690  *>
  2691       perform  zz150-WriteHdb.
  2692       perform  zz150-WriteHdb6 thru zz150-Exit.
  2693       move     zero to a b.
  2694       perform  varying a from 1 by 1 until a > Git-Table-Count
  2695                if    Git-In-Use-Flag (a) = space
  2696                      move  spaces to PrintLine
  2697                      move  Git-Word (a)  to XrDataName
  2698                      move  git-RefNo (a) to XrDefn
  2699                      move LSect (Git-HoldWsorPD (a)) to XrType
  2700                      if  Git-Build-No (a) = 88
  2701                          move "C" to XrCond
  2702                      else
  2703                          move space to XrCond
  2704                      end-if
  2705                      move 1 to b
  2706                      add   1 to Line-Count
  2707                      write PrintLine after 1
  2708                      if  Line-Count > 59
  2709                          perform  zz150-WriteHdb
  2710                          perform  zz150-WriteHdb6 thru zz150-Exit
  2711                      end-if
  2712                end-if
  2713       end-perform
  2714       if       b = zero
  2715                move spaces to PrintLine
  2716                move "None" to XrDataName
  2717                add   1 to Line-Count
  2718                write PrintLine after 1.
  2719   bc629-Exit.
  2720       exit.
  2721   bc000-Exit.
  2722       exit.
  2723  *>
  2724   zz000-Routines Section.
  2725   zz000-Inc-CobolRefNo.
  2726       add      1 to Gen-RefNo1.
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:56:02  Page   48

  2727  *>
  2728   zz000-OutputSource.
  2729       if       List-Source
  2730                move  spaces to Source-List
  2731                move  SourceRecIn to SourceOutput
  2732                move  Gen-RefNo1 to sl-Gen-RefNo1
  2733                add   1 to Line-Count
  2734                write Source-List after 1
  2735                if       Line-Count > 59
  2736                         perform zz150-WriteHdb.
  2737  *>
  2738   zz030-Write-Sort.
  2739       move     HoldWSorPD to SkaWSorPD.
  2740       move     HoldWSorPD2 to SkaWSorPD2.
  2741       move     wsFoundWord2 (1:CWS) to wsFoundNewWord4.
  2742       if       Reports-In-Lower
  2743                move function lower-case (wsFoundWord2 (1:CWS)) to wsFoundNewWord4.
  2744       if       HoldWSorPD > 7
  2745                perform zz140-Function-Check thru zz140-Exit.
  2746  *>
  2747  *> stops dups on same fn and refno
  2748  *>move 9 to SkaWSorPD
  2749       if       wsFoundNewWord4 not = SkaDataName
  2750           or   Gen-RefNo1 not = SkaRefNo
  2751                move wsFoundNewWord4 to SkaDataName
  2752                move Gen-RefNo1 to SkaRefNo
  2753                move 1 to USect (SkaWSorPD)
  2754                write SortRecord
  2755                if   HoldWSorPD > 7  *> only do for proc div
  2756                     perform zz310-Check-For-Globals thru zz319-Exit
  2757                end-if
  2758       end-if.
  2759  *>
  2760   zz100-Get-A-Source-Record.
  2761  *>*************************
  2762  *> reads a source record, ignoring comments cleans out excessive
  2763  *>   spaces, ';', ',' etc
  2764  *>
  2765       if       Had-End-Prog
  2766                move zero to sw-Had-End-Prog
  2767                go to zz100-New-Program-point.
  2768       if       End-Prog
  2769                go to zz100-Exit.
  2770       if       Source-Eof
  2771                display Msg8
  2772                go to zz100-Exit.
  2773  *>
  2774       move     spaces to SourceRecIn SourceInWS.
  2775       read     SourceInput at end
  2776                move 1 to sw-Source-Eof
  2777                GO TO zz100-Exit.
  2778       move     function upper-case (SourceRecIn) to SourceInWS.
  2779  *>
  2780  *> change tabs to spaces prior to printing & remove OC comment lines eg '#'
  2781  *>
  2782       if       (SourceInWS (1:1) = "#" or = "$")
  2783                go to zz100-Get-A-Source-Record.
  2784  *> next won't happen with fn.i or .t input
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:56:02  Page   49

  2785       if       (SourceInWS (1:1) = "*" or = "/")
  2786                perform zz000-Inc-CobolRefNo
  2787                perform zz000-Outputsource
  2788                go to zz100-Get-A-Source-Record.
  2789  *>
  2790  *> remove unwanted chars and all multi spaces so that unstrings
  2791  *>  can work easier Includes literals " " etc
  2792  *> Doesn't matter if literals get screwed up in this way
  2793  *>
  2794       inspect  SourceInWS replacing all x"09" by space.
  2795       inspect  SourceInWS replacing all ";" by space.
  2796  *>
  2797  *> This could cause a problem in ws so do in proc div
  2798  *>
  2799       if       HoldWSorPD = 8
  2800                inspect SourceInWS replacing all "," by space
  2801       end-if
  2802       inspect  SourceInWS replacing all "&" by space.
  2803       perform  zz120-Replace-Multi-Spaces thru zz120-Exit.
  2804       move     Line-End to Source-Line-End.
  2805  *>
  2806  *> count but and O/P blank lines requested by Robert Mills
  2807  *>
  2808        if      d < 1
  2809                perform zz000-Inc-CobolRefNo
  2810                perform zz000-Outputsource
  2811                go to zz100-Get-A-Source-Record.
  2812  *>
  2813       if       SourceInWS (1:12) = "END PROGRAM "
  2814                perform zz000-Inc-CobolRefNo
  2815                perform zz000-Outputsource
  2816                go to zz100-Get-A-Source-Record.
  2817  *>
  2818       if       HoldWSorPD > 7
  2819          and   (SourceInWS (1:12) = "ID DIVISION."
  2820           or   SourceInWS (1:20) = "IDENTIFICATION DIVIS")
  2821                move 1 to sw-End-Prog sw-Had-End-Prog sw-Nested
  2822                move 1 to S-Pointer2
  2823                go to zz100-Exit.
  2824  *>
  2825   zz100-New-Program-point.
  2826       perform  zz000-Inc-CobolRefNo.
  2827       perform  zz000-Outputsource.
  2828       move     1 to S-Pointer2.
  2829       move     zero to Source-Words.
  2830  *> == cobol85/NC/NC113M.CBL
  2831  *> Check if we have a section name or proc. 1st word name only
  2832  *> ie SECTION or DIVISION is on next line
  2833  *> but that cant happen if line-end > 15
  2834  *>
  2835       if       Source-Line-End > 15
  2836                move zero to HoldFoundWord2-Size
  2837                             HoldFoundWord2-Type
  2838                perform  zz170-Check-4-Section thru zz170-Exit
  2839                go to zz100-Exit.
  2840  *>
  2841  *> now it could be the 1st word, 2nd word and . for line 2 or 3.
  2842  *> Got it? Good, now explain it to me !
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:56:02  Page   50

  2843  *>
  2844       if       HoldFoundWord2-Size = zero
  2845                perform  varying d from 1 by 1 until d > 8
  2846                 if Sht-Section-Name (d) = SourceInWS (1:Source-Line-End)
  2847                   move Spaces               to HoldFoundWord2
  2848                   move Sht-Section-Name (d) to HoldFoundWord2
  2849                   add 1 Source-Line-End giving HoldFoundWord2-Size
  2850                   go to zz100-Get-A-Source-Record
  2851                 end-if
  2852                end-perform
  2853       else
  2854              if   HoldFoundWord2-Type > zero
  2855               and (SourceInWS (1:7) = "SECTION" or = "DIVISIO")
  2856                   add 1 HoldFoundWord2-Size giving d
  2857                   string SourceInWS (1:Line-End) delimited by size into HoldFoundWord2  pointer d
  2858                   move HoldFoundWord2 to SourceInWS
  2859                   move zero to HoldFoundWord2-Size
  2860              end-if
  2861       end-if
  2862  *>
  2863  *> Ignoring fact if period missing, ASSUMING get-a-word covers it
  2864  *>   Here I go, Ass-uming again
  2865  *>
  2866  *> need this here
  2867       perform  zz170-Check-4-Section thru zz170-Exit.
  2868   zz100-Exit.
  2869       exit.
  2870  *>
  2871   zz110-Get-A-Word.
  2872  *>****************
  2873  *>  S-Pointer2 must be set to => 1 prior to call
  2874  *> pointer is a tally of init leading spaces
  2875  *>
  2876       if       Source-Eof
  2877            or  End-Prog
  2878                go to zz110-Exit.
  2879       if       S-Pointer2 not < Source-Line-End
  2880           and  SourceInWS (S-Pointer2:1) = "."
  2881                move "." to Word-Delimit
  2882                move zero to Word-Length
  2883                move space to SourceInWS (S-Pointer2:1)
  2884                move spaces to wsFoundWord2
  2885                go to zz110-Exit.
  2886  *>     if       S-Pointer2 < Source-Line-End
  2887  *>              inspect SourceInWS tallying S-Pointer2 for leading spaces.
  2888  *>
  2889       if       S-Pointer2 > Source-Line-End
  2890            or  S-Pointer2 > 1024
  2891                go to zz110-Get-A-Word-OverFlow.
  2892  *>
  2893  *> S-Pointer2 = 1st non space
  2894  *>
  2895   zz110-Get-A-Word-Unstring.
  2896       move     spaces to wsFoundWord2.
  2897       move     S-Pointer2 to s.
  2898  *>*****************************************************************
  2899  *> Note that after unstring sp2 will be at 1st char AFTER delimiter
  2900  *>*****************************************************************
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:56:02  Page   51

  2901       unstring SourceInWS delimited by " " or "." into wsFoundWord2
  2902                 delimiter Word-Delimit pointer S-Pointer2.
  2903  *> check 1st char
  2904       if       S-Pointer2 > 1024
  2905                go to zz110-Get-A-Word-OverFlow.
  2906       if       wsf1-1 = space
  2907           and  SourceInWS (S-Pointer2:1) = "."
  2908                move "." to Word-Delimit
  2909                move zero to Word-Length
  2910                move spaces to wsFoundWord2
  2911                go to zz110-Exit.
  2912       if       wsf1-1 = space
  2913                go to zz110-Get-A-Word-Unstring.
  2914       if       wsf1-3 = ">>D"                      *> if debug continue ignoring ">>D"
  2915                go to zz110-Get-A-Word-Unstring.
  2916       if       wsf1-2 = "*>"                       *> rest of line is comment so ignore
  2917                go to zz110-Get-A-Word-OverFlow.
  2918       if       (wsf1-1-Number
  2919             or wsf1-1 = "-"
  2920             or wsf1-1 = "+")
  2921           and  SourceInWS (S-Pointer2:1) not = space
  2922                move s to S-Pointer2
  2923                unstring SourceInWS delimited by " " into wsFoundWord2
  2924                           delimiter Word-Delimit pointer S-Pointer2.
  2925  *>
  2926       subtract 2 from S-Pointer2 giving e.
  2927       if       Word-Delimit = space
  2928           and  SourceInWS (e:1) = "."
  2929                move "." to Word-Delimit.
  2930  *>
  2931       if       GotPicture = 1
  2932            and SourceInWS (s:3) not = "IS "
  2933  *> this next test may not be needed ????
  2934  *>**************        and   Word-Delimit = "."
  2935          and   (SourceInWS (s:1) = "$" or = Currency-Sign
  2936                               or = "/" or = "B" or = "0" or = "."
  2937                               or = "," or = "+" or = "-" or = "C"
  2938                               or = "D" or = "*" or = "Z" or = "9"
  2939                               or = "X" or = "A" or = "S" or = "V"
  2940                               or = "P" or = "1" or = "N" or = "E")
  2941                move s to S-Pointer2
  2942                unstring SourceInWS delimited by " " into wsFoundWord2 delimiter Word-Delimit pointer S-Pointer2
  2943                end-unstring
  2944                subtract 2 from S-Pointer2 giving e
  2945                if  SourceInWS (e:1) = "."
  2946                     move "." to Word-Delimit
  2947                end-if
  2948                move 1 to WasPicture
  2949       end-if
  2950  *>
  2951  *> This could cause a problem ??????
  2952  *>
  2953       if       GotPicture = zero
  2954                inspect  wsFoundWord2 replacing all "," by space
  2955       end-if
  2956  *>
  2957       if       wsf1-1 = "("
  2958           and (wsFoundWord2 (2:1) = quote or = "'")
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:56:03  Page   52

  2959                add 2 to s giving S-Pointer2
  2960                move wsFoundWord2 (2:1) to wsFoundWord2 (1:1) Word-Delimit2
  2961                go to zz110-Get-A-Word-Literal2.
  2962  *>
  2963       if       wsf1-1 = "("
  2964           and  wsFoundWord2 (2:1) = space
  2965                add 1 to S-Pointer2
  2966                go to zz110-Get-A-Word.
  2967       if       wsf1-1 = ")"
  2968                go to zz110-Get-A-Word.
  2969  *>
  2970       if       wsf1-1 not = quote and not = "'"
  2971                perform  varying z from 1024 by -1  until wsFoundWord2 (z:1) not = space
  2972                end-perform
  2973                move z to Word-Length
  2974                go to zz110-Get-A-Word-Copy-Check.
  2975  *>
  2976   zz110-Get-A-Word-Literal.
  2977       move     wsf1-1 to Word-Delimit2.
  2978       add      1 to s giving S-Pointer2.
  2979   zz110-Get-A-Word-Literal2.
  2980       move     spaces to wsFoundWord2 (2:1023).
  2981       unstring SourceInWS delimited by Word-Delimit2 into wsFoundWord2 (2:1023) delimiter Word-Delimit pointer S-Pointer2.
  2982  *>
  2983  *> so S-Pointer2 = " +1 & s = starter "   have we another Word-Delimit?
  2984  *>
  2985       if       Word-Delimit not = Word-Delimit2
  2986                perform  varying z from 1024 by -1 until wsFoundWord2 (z:1) not = space
  2987                end-perform
  2988                add 1 to z
  2989       else
  2990                subtract s from S-Pointer2 giving z.
  2991       move     Word-Delimit2 to wsFoundWord2 (z:1).
  2992       move     z to Word-Length.
  2993  *>
  2994  *>  word is quoted literal or word so we are done
  2995  *>
  2996       go       to zz110-Get-A-Word-Copy-Check.
  2997   zz110-Get-A-Word-OverFlow.
  2998       move     1 to S-Pointer2.
  2999       perform  zz100-Get-A-Source-Record thru zz100-Exit.
  3000       if       Source-Eof
  3001                go to zz110-Exit.
  3002       go       to zz110-Get-A-Word.
  3003   zz110-Get-A-Word-Copy-Check.
  3004  *>
  3005       add      1 to Source-Words.
  3006       if we-are-testing
  3007          display "zz110: WD=" word-delimit
  3008                  " WSF2=" wsfoundword2 (1:word-length).
  3009       if       Word-Length < 1
  3010                display "zz110-GAWCH: Oops, zero length word"
  3011                display " Report this to support".
  3012  *>
  3013  *> if the leading char check when delim is period dont work
  3014  *>   then this will be tested higher up in code !
  3015  *>
  3016       if       wsFoundWord2 (1:3) not = "IS "
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:56:03  Page   53

  3017            and GotPicture = 1
  3018                move zero to GotPicture.
  3019  *>
  3020       if       wsFoundWord2 (1:4) = "PIC "
  3021             or wsFoundWord2 (1:8) = "PICTURE "
  3022                move 1 to GotPicture.
  3023   zz110-Exit.
  3024       exit.
  3025  *>
  3026   zz120-Replace-Multi-Spaces.
  3027  *>**************************
  3028  *> remove any multi spaces within a source line
  3029  *>   find actual lengh of record in d
  3030  *> This code is redundent when using source output from cobc or via filename.i
  3031  *>
  3032  *> run profiler against these routines and tidy 'em up if needed
  3033  *>
  3034       perform  varying d from 1024 by -1 until SourceInWS (d:1) not = space
  3035       end-perform
  3036       if       d < 1
  3037                go to zz120-Exit.
  3038  *>
  3039       move     zero to a b c.
  3040       move     spaces to wsFoundNewWord5.
  3041       perform  zz120-Kill-Space thru zz120-Kill-Space-Exit.
  3042       move     spaces to SourceInWS.
  3043       move     wsFoundNewWord5 (1:b) to SourceInWS.
  3044       move     b to Line-End d.
  3045       if we-are-testing
  3046          display "zz120A b=" b " after=" SourceInWS (1:b).
  3047       go       to zz120-Exit.
  3048  *>
  3049   zz120-Kill-Space.
  3050       add      1 to a.
  3051       if       a > d
  3052                go to zz120-Kill-Space-Exit.
  3053       if       SourceInWS (a:1) = space and c = 1
  3054                add 1 to b
  3055                move zero to c
  3056                go to zz120-Kill-Space.
  3057  *>
  3058       if       SourceInWS (a:1) = space
  3059                go to zz120-Kill-Space.
  3060       subtract 1 from a giving e.         *> a will always be 2 or more here
  3061       if       SourceInWS (a:1) = "("
  3062           and  SourceInWS (e:1) not = space
  3063           and  HoldWSorPD > 7
  3064                add 2 to b
  3065       else
  3066                add 1 to b.
  3067       move     SourceInWS (a:1) to wsFoundNewWord5 (b:1).
  3068       move     1 to c.
  3069       go       to zz120-Kill-Space.
  3070   zz120-Kill-Space-Exit.
  3071       exit.
  3072  *>
  3073   zz120-Exit.
  3074       exit.
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:56:03  Page   54

  3075  *>
  3076   zz130-Extra-Reserved-Word-Check.
  3077  *>*******************************
  3078  *>  Check for any other reserved words not in other checks
  3079  *>  note that max reserved word is 25 characters, so compare like 4 like
  3080  *>
  3081       move     zero to a.
  3082       search   all Reserved-Names at end go to zz130-exit
  3083                when Resvd-Word (Resvd-Idx) = wsFoundWord2 (1:30)
  3084                      set a to Resvd-Idx.
  3085       if       a not = zero
  3086          and   wsFoundWord2 (1:8) = "FUNCTION" or = "function"
  3087                move 1 to FoundFunction
  3088       else
  3089                move zero to FoundFunction.
  3090   zz130-Exit.
  3091       exit.
  3092  *>
  3093   zz140-Function-Check.
  3094  *>********************
  3095  *> CALLS:  Only after moving all values to SortRecord and before write verb.
  3096  *>
  3097  *> Do we have an intrinsic function name
  3098  *>           if so modify sort rec for section printing
  3099  *> Note that P-oc-implemented = zero if not implemented,
  3100  *>    but treated as the same as its still a reserved word
  3101  *>
  3102       move     zero to F-Pointer.
  3103       search   all All-Functions  at end go to zz140-exit
  3104                when P-function (All-Fun-Idx) = function upper-case (wsFoundNewWord4)
  3105                    move 9 to SkaWSorPD
  3106                    move 1 to SkaWSorPD2
  3107                    set F-Pointer to All-Fun-Idx.
  3108   zz140-Exit.
  3109       exit.
  3110  *>
  3111   zz150-WriteHdb.
  3112  *> Have a blank line for users reading the listing file avoiding the ugly header placement.
  3113       move     spaces to PrintLine.
  3114       if       Page-No not = zero
  3115                write PrintLine after 1.
  3116  *>
  3117       move     spaces to h1programid.
  3118       accept   hddate from date.
  3119       if       hddate not = "000000"
  3120                move hd-y to hd2-y
  3121                move hd-m to hd2-m
  3122                move hd-d to hd2-d.
  3123       accept   hdtime from time.
  3124       if       hdtime not = "00000000"
  3125                move hd-hh to hd2-hh
  3126                move hd-mm to hd2-mm
  3127                move hd-ss to hd2-ss
  3128                move hd-uu to hd2-uu.
  3129       string   HoldID delimited by space
  3130                "    " delimited by size
  3131                hd-date-time delimited by size into h1programid.
  3132  *>     move     function when-compiled to WS-When-Compiled.
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:56:03  Page   55

  3133  *>     move     WS-WC-DD  to H1-DD.
  3134  *>     move     WS-WC-MM  to H1-MM.
  3135  *>     move     WS-WC-YY  to H1-YY.
  3136  *>     move     WS-WC-HH  to H1-HH.
  3137  *>     move     WS-WC-Min to H1-Min.
  3138       add      1 to Page-No.
  3139       move     Page-No to H1-Page.
  3140       if       Page-No = 1
  3141                write PrintLine from hdr1 after 1
  3142       else     write PrintLine from hdr1 after page.
  3143       move     spaces to PrintLine.
  3144       write    PrintLine after 1.
  3145       move     2 to Line-count.
  3146   zz150-WriteHdb1.
  3147       move     spaces to Hdr5-Prog-Name.
  3148       string   HoldID delimited by space
  3149                " (" delimited by size
  3150                HoldID-Module delimited by space
  3151                ")"  delimited by size
  3152                into Hdr5-Prog-Name.
  3153       move     Hdr5-Prog-Name to Hdr6-Hyphens.
  3154       inspect  hdr6-hyphens replacing characters by "-"
  3155                before initial "  ".
  3156       write    PrintLine from hdr5-symbols.
  3157       write    PrintLine from hdr6-symbols.
  3158       add      2 to Line-Count.
  3159       go       to zz150-Exit.
  3160   zz150-WriteHdb2.
  3161       move     spaces to PrintLine.
  3162       write    PrintLine.
  3163       move     spaces to hdr7-variable.
  3164       string   Full-Section-Name (WS-Anal1) delimited space
  3165                                         ")" delimited by size into hdr7-variable.
  3166       write    PrintLine from hdr7-ws.
  3167       write    PrintLine from hdr3.
  3168       move     spaces to PrintLine.
  3169       write    PrintLine.
  3170       add      4 to Line-Count.
  3171       go       to zz150-Exit.
  3172   zz150-WriteHdb2b.
  3173       move     spaces to PrintLine.
  3174       write    PrintLine.
  3175       move    "ALL GLOBALS)" to hdr7-variable.
  3176       write    PrintLine from hdr7-ws.
  3177       write    PrintLine from hdr3.
  3178       move     spaces to PrintLine.
  3179       write    PrintLine.
  3180       add      4 to Line-Count.
  3181       go       to zz150-Exit.
  3182   zz150-WriteHdb3.
  3183       write    PrintLine from hdr8-ws.
  3184       write    PrintLine from hdr3.
  3185       move     spaces to PrintLine.
  3186       write    PrintLine.
  3187       add      3 to Line-Count.
  3188       go       to zz150-Exit.
  3189   zz150-WriteHdb4.
  3190       write    PrintLine from hdr9.
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:56:04  Page   56

  3191       move     spaces to PrintLine.
  3192       write    PrintLine.
  3193       add      2 to Line-Count.
  3194       go       to zz150-Exit.
  3195   zz150-WriteHdb5.
  3196       write    PrintLine from hdr10.
  3197       move     spaces to PrintLine.
  3198       write    PrintLine.
  3199       add      2 to Line-Count.
  3200       go       to zz150-Exit.
  3201   zz150-WriteHdb6.
  3202       write    PrintLine from hdr9B.
  3203       move     spaces to PrintLine.
  3204       write    PrintLine.
  3205       add      2 to Line-Count.
  3206       go       to zz150-Exit.
  3207   zz150-WriteHdb7.
  3208       write    PrintLine from hdr11.
  3209       write    PrintLine from hdr12-hyphens.
  3210       move     spaces to PrintLine.
  3211       write    PrintLine.
  3212       add      3 to Line-Count.
  3213       go       to zz150-Exit.
  3214   zz150-WriteHdb8.
  3215       write    PrintLine from hdr2.
  3216       write    PrintLine from hdr3.
  3217       move     spaces to PrintLine.
  3218       write    PrintLine.
  3219       add      3 to Line-Count.
  3220       go       to zz150-Exit.
  3221   zz150-Exit.
  3222       exit.
  3223  *>
  3224   zz160-Clean-Number.
  3225        move    zero to Build-Number.
  3226        if      Word-Length = 1
  3227                move wsf3-1 to Build-Number
  3228                go to zz160-Exit.
  3229        if      Word-Length = 2
  3230                compute Build-Number = (wsf3-1 * 10) + wsf3-2.
  3231   zz160-Exit.
  3232       exit.
  3233  *>
  3234   zz170-Check-4-Section.
  3235       move     space to GotASection.
  3236       if       HoldWSorPD = 8
  3237                go to zz170-Exit.
  3238  *>
  3239       perform  varying a2 from 1 by 1 until a2 > 8
  3240                if sv1What = Section-Name (a2)
  3241                    move a2 to HoldWSorPD
  3242                    move "Y" to GotASection
  3243         if We-Are-Testing display "Found zz170 " sv1What  end-if
  3244                    if a2 = 8
  3245                        move zero to HoldWSorPD2
  3246                    end-if
  3247                    exit perform
  3248                end-if
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:56:04  Page   57

  3249       end-perform
  3250  *>
  3251  *> Changed section so we can clear Global flag
  3252  *>
  3253       if       GotASection = "Y"
  3254                move zero to sw-Git.
  3255   zz170-Exit.
  3256       exit.
  3257  *>
  3258   zz180-Open-Source-File.
  3259  *>*********************
  3260  *> get source filename
  3261  *>
  3262       accept   Arg-Number from argument-number.
  3263       if       Arg-Number > zero
  3264                move zero to String-Pointer
  3265                perform zz180-Get-Program-Args Arg-Number times
  3266       else     go to zz180-Check-For-Param-Errors.
  3267  *>
  3268  *> setup source filename
  3269  *>    dont need the pointers - kill it after next test
  3270       move     1 to String-Pointer.
  3271       unstring Arg-Value (1) delimited by spaces into SourceFileName pointer String-Pointer.
  3272  *>
  3273  *> Now get temp environment variable & build temp sort file names
  3274  *>
  3275       perform  zz182-Get-Env-Set-TempFiles thru zz182-Exit.
  3276  *>
  3277   zz180-Check-For-Param-Errors.
  3278       if       SourceFileName = spaces or
  3279                String-Pointer < 5
  3280                display Prog-Name
  3281                move function current-date to WS-When-Compiled
  3282                display "Copyright (c) 1967-" no advancing
  3283                display WS-WC-YY no advancing
  3284                display " Vincent Bryan Coen"
  3285                display " "
  3286                display "Parameters are"
  3287                display " "
  3288                display "1: Source File name (Mandatory)"
  3289                display "2: -R    Do NOT print out source code prior to xref listings in cobc free form"
  3290                display "3: -L    reports in lowercase else upper"
  3291                display "4: -TEST produces testing info (for programmers use only)"
  3292                display "5: -DR   Display All reserved words & stop"
  3293                display "6: -G    produce only group xref: Comp. MF"
  3294                display "7: -H    Display this help message"
  3295                display "   --H   as -H"
  3296                move zero to return-code
  3297                goback.
  3298  *>
  3299       move     1 to String-Pointer String-Pointer2.
  3300       perform  varying a from 1024 by -1 until Sourcefilename (a:1) not = space
  3301       end-perform
  3302       move     a to b.
  3303       perform  varying b from b by -1 until b < 2 or SourceFileName (b:1) = "."
  3304       end-perform
  3305       if       b not < 2
  3306                subtract 1 from b
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:56:04  Page   58

  3307                move SourceFileName (1:b) to Prog-BaseName
  3308                add 1 to b
  3309       end-if
  3310
  3311  *>     unstring Arg-Value (1) delimited by "." into Prog-BaseName
  3312  *>              with pointer String-Pointer.
  3313       if       Prog-BaseName = SourceFileName
  3314                string  Prog-BaseName  delimited by space
  3315                ".pre"        delimited by size into SourceFileName.
  3316       string   Prog-BaseName delimited by space
  3317                ".lst"        delimited by size into Print-FileName
  3318                with pointer String-Pointer2.
  3319  *>
  3320  *> Can now convert to upper-case as source filename is processed
  3321  *>
  3322       move     function upper-case (Arg-Vals) to Arg-Vals.
  3323  *>
  3324  *> Check if help requested
  3325  *>
  3326       if       "-H" = Arg-Value (2) or Arg-Value (3)
  3327             or Arg-Value (4) or Arg-Value (5) or Arg-Value (6)
  3328                move zero to String-Pointer
  3329                go to zz180-Check-For-Param-Errors.
  3330       if       "--H" = Arg-Value (2) or Arg-Value (3)
  3331             or Arg-Value (4) or Arg-Value (5) or Arg-Value (6)
  3332                move zero to String-Pointer
  3333                go to zz180-Check-For-Param-Errors.
  3334  *>
  3335  *> Check v2 if we are NOT listing the source
  3336  *>
  3337        if      "-R" = Arg-Value (2) or Arg-Value (3)
  3338             or Arg-Value (4) or Arg-Value (5) or Arg-Value (6)
  3339                move "N" to sw-2.
  3340  *>
  3341  *> Check v4 if we are dumping all reserved words
  3342  *>
  3343       if       "-DR" = Arg-Value (2) or Arg-Value (3)
  3344             or Arg-Value (4) or Arg-Value (5) or Arg-Value (6)
  3345                move 1 to sw-4
  3346                go to zz180-Exit.
  3347  *>
  3348  *> Check v5 if we are testing
  3349  *>
  3350       if       "-TEST" = Arg-Value (2) or Arg-Value (3)
  3351             or Arg-Value (4) or Arg-Value (5) or Arg-Value (6)
  3352                display " extra information for testing"
  3353                move "Y" to sw-5.
  3354  *>
  3355  *> Check v6 if we are are doing Lower case reports insted of upper
  3356  *>
  3357       if       "-L" = Arg-Value (2) or Arg-Value (3)
  3358             or Arg-Value (4) or Arg-Value (5) or Arg-Value (6)
  3359                move 1 to sw-6.
  3360  *>***************************************************************
  3361  *>  THIS BLOCK FOR TESING and Comparing listing against MF etc  *
  3362  *>***************************************************************
  3363  *>
  3364  *> Check v1 if we are are only doing a group xref ie W-S and procedure
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:56:05  Page   59

  3365  *>
  3366       if       "-G " = Arg-Value (2) or Arg-Value (3)
  3367             or Arg-Value (4) or Arg-Value (5) or Arg-Value (6)
  3368                move "A" to sw-1.
  3369  *>***************************************************************
  3370  *>    END OF SPECIAL TEST BLOCK but with bc030 - bc080 also     *
  3371  *>***************************************************************
  3372       open     input SourceInput.
  3373       if       fs-reply not = zero
  3374                display Msg9
  3375                move 16 to return-code
  3376                goback.
  3377       go       to zz180-Exit.
  3378  *>
  3379   zz180-Get-Program-Args.
  3380       add      1 to String-Pointer.
  3381       accept   Arg-Value (String-Pointer) from argument-value.
  3382  *>
  3383   zz182-Get-Env-Set-TempFiles.
  3384  *>**************************
  3385       accept   Temp-PathName from Environment "TMPDIR".
  3386       if       Temp-PathName = spaces
  3387                accept Temp-PathName from Environment "TMP"
  3388                if  Temp-PathName = spaces
  3389                    accept Temp-PathName from Environment "TEMP"
  3390                    if  Temp-PathName = spaces
  3391                        move "/tmp" to Temp-PathName.
  3392       if       Temp-PathName (1:1) = "/"   *> Its Linux/Unix
  3393                move "/" to OS-Delimiter.
  3394       if       Temp-PathName (1:1) = "\"   *> Its Windoz
  3395                inspect Temp-PathName replacing all "/" by "\"   *> in case of /tmp
  3396                move "\" to OS-Delimiter.
  3397       string   Temp-PathName delimited by space
  3398                 OS-Delimiter delimited by size
  3399                  "Part1.tmp" delimited by size   into Supp-File-1.
  3400       string   Temp-PathName delimited by space
  3401                 OS-Delimiter delimited by size
  3402                  "Part2.tmp" delimited by size   into Supp-File-2.
  3403       string   Temp-PathName delimited by space
  3404                 OS-Delimiter delimited by size
  3405                   "Sort1tmp" delimited by size   into Sort1tmp.
  3406       if we-are-testing
  3407             display  "Temp path used is " Temp-PathName.
  3408   zz182-Exit.
  3409       Exit.
  3410  *>
  3411   zz180-Exit.
  3412       exit.
  3413  *>
  3414   zz190-Init-Program.
  3415  *>
  3416  *>****************************************************************
  3417  *> initialise all Variables should we be processing nested modules
  3418  *>****************************************************************
  3419  *>
  3420       move     spaces to PrintLine Global-Current-Word SortRecord
  3421                saveSkaDataName SourceFileName Print-FileName
  3422                wsFoundNewWord4 wsFoundNewWord3
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:56:05  Page   60

  3423                wsFoundNewWord2 wsFoundNewWord.
  3424       move     high-values to Condition-Table.
  3425       move     10 to Con-Tab-Size.
  3426       move     zeros to GotEndProgram sw-Source-Eof Section-Used-Table
  3427                HoldWSorPD HoldWSorPD2 Con-Tab-Count.
  3428       move     1 to S-Pointer F-Pointer S-Pointer2.
  3429   zz190-Exit.
  3430       exit.
  3431  *>
  3432   zz200-Load-Git.
  3433  *>
  3434  *> Load the Global Item Table with item associated with 01/FD Global
  3435  *>
  3436       if       Global-Current-Level = 99
  3437                go to zz200-Exit.
  3438       add      1 to Git-Table-Count.
  3439       if       Git-Table-Count > Git-Table-Size
  3440           and  Git-Table-Size < 10000
  3441                add 10 to Git-Table-Size.
  3442       if       Git-Table-Size > 10000
  3443                move 10001 to Git-Table-Size        *> just in case
  3444                display Msg10
  3445                go to zz200-Exit.
  3446       move     Global-Current-Word to Git-Word (Git-Table-Count).
  3447       move     space to Git-In-Use-Flag (Git-Table-Count).
  3448       move     Global-Current-RefNo to Git-RefNo (Git-Table-Count).
  3449       move     Build-Number to Git-Build-No (Git-Table-Count).
  3450       move     HoldID to Git-Prog-Name (Git-Table-Count).
  3451       move     HoldWSorPD  to Git-HoldWSorPD (Git-Table-Count).
  3452       move     HoldWSorPD2 to Git-HoldWSorPD2 (Git-Table-Count).
  3453   zz200-Exit.
  3454       exit.
  3455  *>
  3456   zz310-Check-For-Globals.
  3457  *>**********************
  3458       move zero to a1.
  3459       perform  varying a1 from 1 by 1 until a1 > Git-Table-Count
  3460                if  Git-Word (a1) = wsFoundNewWord4
  3461                    move "1" to Git-In-Use-Flag (a1)
  3462                    exit perform
  3463                end-if
  3464       end-perform.
  3465  *>
  3466   zz319-Exit.
  3467       exit.
  3468  *>
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:56:05  Page   61
Symbols of Module: COBXREF (COBXREF)
------------------------------------
All Data/Proc Names              Defn     Reference
--------------------------------+---------------------------------------------------------------


A                               000163W  001221 001222 001225 001226 001252 001253 001254 001256
                                         001258 001260 001261 001340 001350 001376 001394 001414
                                         001415 001419 001420 001447 001468 001498 001500 001523
                                         001535 001686 001687 001708 001733 001808 001809 001872
                                         001876 001919 001921 001921 001939 001983 001984 001985
                                         001986 001995 002017 002032 002033 002034 002036 002042
                                         002044 002046 002048 002054 002060 002061 002303 002307
                                         002308 002310 002311 002331 002662 002663 002664 002666
                                         002667 002669 002670 002693 002694 002695 002697 002698
                                         002699 002700 003039 003050 003051 003053 003058 003060
                                         003061 003067 003081 003084 003085 003300 003300 003302
A1                              000164W  003458 003459 003460 003461
A2                              000165W  003239 003240 003241 003244
AA000-XREF-DATA                 001172P
AA020-BYPASS-OPEN               001244P  001587
AA030-READLOOP1                 001277P  001296
AA040-READLOOP2                 001322P  001342
AA041-GET-SN                    001344P  001326 001335 001354 001365 001383 001410
AA042-GETWORD                   001362P  001368 001370 001374 001377
AA044-GETWORD3                  001380P  001386 001389 001392 001395 001411
AA045-EXIT                      001422P  001336 001349 001446 001522
AA045-TEST-SECTION              001413P  001336 001349 001446 001522
AA046-GET-CURRENCY              001425P  001367 001385 001432
AA047-GETIO                     001441P  001329 001357 001463 001471 001494 001499 001503 001512
AA047-GETWORD                   001460P  001469
AA047-GETWORD2                  001477P  001489
AA047-GETWORD3                  001491P  001496 001501 001513
AA048-GET-NEXT                  001519P  001542
AA048-GETIOC                    001515P  001332 001360 001451 001518 001530
AA049-GETWORD                   001532P  001536 001543
AA050-READLOOP3                 001545P  001454 001554 001560
AA060-READLOOP3A                001551P  001290 001341 001351 001448 001457 001524
ADDITIONAL-RESERVED-WORDS       000559W  001141
ADDITIONAL-RESERVED-WORDS-R     001141W  001204
ALL-FUN-IDX                     000550W  003104 003107
ALL-FUNCTIONS                   000550W  001214 003103
ALL-REPORTS                     000185W  002128
ARG-NUMBER                      000218W  003262 003263 003265
ARG-VALS                        000411W  001240 003322
ARG-VALUE                       000412W  003271 003326 003327 003330 003331 003337 003338 003343
                                         003344 003350 003351 003357 003358 003366 003367 003381
B                               000166W  001986 001994 002000 002035 002036 002059 002060 002083
                                         002094 002095 002098 002664 002672 002693 002705 002714
                                         003039 003043 003044 003046 003046 003054 003064 003066
                                         003067 003302 003303 003303 003305 003306 003307 003308
BA000-EXIT                      001846P  001602
BA000-PROCESS-WS                001592P  001557
BA020-GETAWORD                  001593P  001599 001606 001627 001782 001787 001817
BA040-CLEAR-TO-NEXT-PERIOD      001661P  001626 001672 001676 001679 001682 001692 001697 001699
                                         001701 001703 001705 001709 001715 001786 001816
BA049-EXIT                      001717P  001626 001666 001668 001786 001816
BA050-BYPASS-ADD-2-CON-TABLE    001765P  001748
BA050-GET-USER-WORD             001720P  001652
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:56:05  Page   62
Symbols of Module: COBXREF (COBXREF)
------------------------------------
All Data/Proc Names              Defn     Reference
--------------------------------+---------------------------------------------------------------


BA051-AFTER-DATANAME            001775P  001727
BA051-AFTER-NEW-WORD            001790P  001735
BA052-AFTER-INDEX               001819P  001678 001825
BA053-AFTER-DEPENDING           001834P  001681 001840
BB000-EXIT                      002101P  001861 001863
BB000-PROCESS-PROCEDURE         001849P  001562
BB010-NEW-RECORD                001850P
BB020-GETAWORD                  001858P  001866 001877 001879 001882 001884 001887 001890 001899
                                         001904 001906 001931 001944 001954 001969 001975 001987
                                         002018 002021 002026 002070 002100
BB030-CHK1                      001868P  001928
BB040-CHK2                      001894P
BB050-CHECK-SUBSCRIPTS          001933P  001892 002072
BB051-CLEAR-LEFT-BRACE          001942P  001948
BB052-CLEAR-RIGHT-BRACE         001952P  001960
BB053-NUMERICS                  001967P
BB054-SPACES                    002002P
BB060-SCAN4-QUOTES              002028P  001996 002037
BB070-GOT-QUOTE                 002041P  002047
BB080-QUOTE-CLEAN               002053P  002062
BB090-RECOVER-WORD              002064P  002045 002055
BB100-SCAN4-COLON               002074P  002001
BC000-EXIT                      002721P  002140 002150 002220 002348 002451 002517 002590 002600
BC000-LAST-ACT                  002104P  001567
BC010-GROUP-REPORT              002135P
BC020-READ-SORTER               002146P  002155 002157
BC030-ISX                       002153P  002144
BC040-PRINTXREF                 002159P  002156
BC050-CHECK-Q                   002164P  002148 002187
BC060-CONNECTC                  002178P
BC070-CONNECTD                  002185P  002161
BC080-EXIT                      002191P  002156 002183
BC090-LAST-PASS2                002194P  002129
BC100-WORKING-STORAGE-REPORT    002208P  002202
BC110-READ-SORTER               002229P  002238 002240
BC120-ISX2                      002236P  002227
BC130-PRINTXREF2                002242P  002239
BC140-CHECK-Q                   002258P  002232 002282
BC150-CONNECTC2                 002273P
BC160-CONNECTD2                 002280P  002245
BC170-EXIT                      002285P  002239 002248 002250 002278
BC180-EXIT                      002288P  002202 002214 002234
BC190-DO-CONDITIONS             002291P  002206
BC192-PRINT-CONDITIONS          002306P  002304 002318 002332
BC194-NOW-REVERSE               002320P  002305
BC195-DONE                      002334P  002296
BC200-LAST-PASS3                002339P
BC210-READ-SORTER3              002354P  002368 002370
BC220-ISX3                      002366P  002353
BC230-PRINTXREF3                002372P  002369
BC250-CONNECTC3                 002403P
BC260-CONNECTD3                 002415P  002398
BC270-EXIT                      002420P  002369 002381 002387 002395 002414
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:56:05  Page   63
Symbols of Module: COBXREF (COBXREF)
------------------------------------
All Data/Proc Names              Defn     Reference
--------------------------------+---------------------------------------------------------------


BC280-CHECK-Q                   002423P  002356 002402 002417
BC300-LAST-PASS4                002439P  002335
BC310-READ-SORTER4              002455P  002462 002464
BC320-ISX4                      002460P  002453
BC330-PRINTXREF4                002465P  002463
BC335-CHECK-Q                   002481P  002457 002499
BC340-CONNECTC4                 002491P
BC350-CONNECTD4                 002497P  002479
BC360-EXIT                      002502P  002463 002470 002496
BC399-EXIT                      002505P  002335 002444 002459
BC400-LAST-PASS5                002508P  002364
BC410-READ-SORTER5              002523P  002540 002542
BC420-ISX5                      002534P  002521
BC430-PRINTXREF5                002543P  002541
BC440-CHECK-4OLD                002569P  002525 002557
BC450-EXIT                      002578P  002541 002552 002555 002568
BC500-LAST-PASS6                002581P  002533
BC510-READ-SORTER6              002595P  002603 002605
BC520-ISX6                      002601P  002594
BC530-PRINTXREF6                002606P  002604
BC540-CHECK-4OLD                002637P  002597
BC540-CHECK-4OLD6               002646P  002598
BC550-EXIT                      002652P  002604 002612 002636
BC600-EXIT                      002681P  002205
BC600-PRINT-GLOBALS             002655P  002205
BC620-DO-GLOBAL-CONDITIONS      002684P  001569
BC629-EXIT                      002719P  001569 002689
BUILD-NUMBER                    000220W  001641 001644 001650 001651 001656 001739 001742 001752
                                         001777 001784 001801 003225 003227 003230 003449
C                               000167W  001939 001998 001999 003039 003053 003055 003068
COBOL-WORD-SIZE                 000200W
CON-TAB-BLOCKS                  001148W  002298 002326
CON-TAB-COUNT                   001155W  001397 001399 001402 001403 001405 001406 001408 001743
                                         001753 001754 001756 001757 001759 001760 002295 002297
                                         002307 002325 003427
CON-TAB-SIZE                    001148W  001154 001397 001398 001743 001744 001745 001746 001753
                                         003425
CONDITION-TABLE                 001147W  003424
CONDITIONS                      001150W  001403 001406 001757 001760 002310 002326
CT-IN-USE-FLAG                  001152W  001408
CURRENCY-SIGN                   000224W  001436 001438 002935
CURRENT-DATE                    003281I
CWS                             000201W  001235 001237 001306 001378 001403 001406 001656 001740
                                         001757 001760 002071 002071 002741 002743
D                               000168W  001939 002004 002005 002808 002845 002846 002848 002856
                                         002857 003034 003034 003036 003044 003051
DUMP-RESERVED-WORDS             000189W  001220
E                               000169W  002926 002928 002944 002945 003060 003062
END-PROG                        000207W  001279 001563 001568 001573 001579 001860 002768 002877
ERROR-MESSAGES                  000389W
F-POINTER                       000160W  001275 003102 003107 003428
FOUNDFUNCTION                   000253W  003087 003089
FS-REPLY                        000095F  000239 003373
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:56:05  Page   64
Symbols of Module: COBXREF (COBXREF)
------------------------------------
All Data/Proc Names              Defn     Reference
--------------------------------+---------------------------------------------------------------


FULL-SECTION-NAME               000424W  001415 003164
FUNCTION-TABLE                  000448W  000549
FUNCTION-TABLE-R                000549W  001202
FUNCTION-TABLE-SIZE             000553W  001203 001225
GEN-REFNO1                      000219W  001624 001632 001656 001770 002726 002732 002750 002752
GIT-BUILD-NO                    001165W  002700 003449
GIT-ELEMENTS                    001158W  001856 002113
GIT-HOLDWSORPD                  001163W  001253 001261 002664 002699 003451
GIT-HOLDWSORPD2                 001164W  001254 003452
GIT-IN-USE-FLAG                 001166W  002695 003447 003461
GIT-PROG-NAME                   001161W  002667 002670 003450
GIT-REFNO                       001162W  001260 002663 002698 003448
GIT-TABLE-COUNT                 001169W  001250 001252 001855 002112 002204 002662 002688 002694
                                         003438 003439 003446 003447 003448 003449 003450 003451
                                         003452 003459
GIT-TABLE-SIZE                  001158W  001168 003439 003440 003441 003442 003443
GIT-WORD                        001160W  001256 001258 001856 002113 002666 002669 002697 003446
                                         003460
GLOBAL-ACTIVE                   000213W  001779 001783 001800 001830
GLOBAL-CURRENT-LEVEL            000252W  001611 001614 001645 001648 001769 003436
GLOBAL-CURRENT-REFNO            000251W  001624 001770 003448
GLOBAL-CURRENT-WORD             000250W  001623 001771 001831 003420 003446
GLOBAL-ITEM-TABLE               001157W  001198
GOTASECTION                     000230W  001553 001600 001603 001604 003235 003242 003253
GOTENDPROGRAM                   000221W  003426
GOTPICTURE                      000222W  002931 002953 003017 003018 003022
H1-PAGE                         000301W  003139
H1PROG-NAME                     000285W  001270
H1PROGRAMID                     000299W  003117 003131
HAD-END-PROG                    000210W  002765
HAVE-NESTED                     000216W  001308 001313
HD-D                            000364W  003122
HD-DATE-TIME                    000366W  003131
HD-HH                           000357W  003125
HD-M                            000363W  003121
HD-MM                           000358W  003126
HD-SS                           000359W  003127
HD-UU                           000360W  003128
HD-Y                            000362W  003120
HD2-D                           000367W  003122
HD2-HH                          000373W  003125
HD2-M                           000369W  003121
HD2-MM                          000375W  003126
HD2-SS                          000377W  003127
HD2-UU                          000379W  003128
HD2-Y                           000371W  003120
HDDATE                          000361W  003118 003119
HDR1                            000283W  003141 003142
HDR10                           000341W  003196
HDR11                           000344W  003208
HDR11A-SORTED                   000346W  002299 002328
HDR11B-SORTED                   000350W  002300 002327
HDR12-HYPHENS                   000353W  003209
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:56:05  Page   65
Symbols of Module: COBXREF (COBXREF)
------------------------------------
All Data/Proc Names              Defn     Reference
--------------------------------+---------------------------------------------------------------


HDR2                            000303W  003215
HDR3                            000307W  003167 003177 003184 003216
HDR5-PROG-NAME                  000314W  003147 003152 003153
HDR5-SYMBOLS                    000312W  003156
HDR6-HYPHENS                    000321W  003153 003154
HDR6-SYMBOLS                    000316W  003157
HDR7-VARIABLE                   000325W  003163 003165 003175
HDR7-WS                         000323W  003166 003176
HDR8-HD                         000330W  002350 002432 002473
HDR8-WS                         000329W  003183
HDR9                            000335W  003190
HDR9B                           000338W  003202
HDTIME                          000356W  003123 003124
HOLDFOUNDWORD                   000232W  001918 001921
HOLDFOUNDWORD2                  000233W  002847 002848 002857 002858
HOLDFOUNDWORD2-SIZE             000161W  002836 002844 002849 002856 002859
HOLDFOUNDWORD2-TYPE             000162W  002837 002854
HOLDID                          000255W  001235 001237 001239 001310 001312 001632 001656 003129
                                         003148 003450
HOLDID-MODULE                   000256W  001239 001315 001317 003150
HOLDWSORPD                      000225W  001473 001508 001538 001555 001559 001601 001646 001683
                                         001805 002739 002744 002755 002799 002818 003063 003236
                                         003241 003427 003451
HOLDWSORPD2                     000226W  001474 001509 001539 001621 001911 001914 001920 001922
                                         002740 003245 003427 003452
LINE-COUNT                      000153W  001585 002170 002171 002199 002264 002265 002313 002314
                                         002362 002429 002430 002447 002472 002474 002487 002530
                                         002572 002574 002617 002619 002640 002642 002650 002673
                                         002675 002706 002708 002717 002733 002735 003145 003158
                                         003170 003180 003187 003193 003199 003205 003212 003219
LINE-END                        000157W  002804 002857 003044
LIST-SOURCE                     000187W  001271 002729
LOWER-CASE                      001235I  001256 001310 001315 001402 001403 001756 001757 002666
                                         002667 002743
LSECT                           000406W  002182 002277 002411 002495 002566 002632 002672 002699
MSG1                            000390W  002139 002219 002347 002450 002516 002589
MSG10                           000398W  003444
MSG16                           000400W  001480
MSG17                           000401W  001208
MSG2                            000391W  001280
MSG4                            000392W  001632
MSG5                            000393W  001656
MSG6                            000394W  001747
MSG7                            000395W  002024
MSG8                            000396W  002771
MSG9                            000397W  003374
OS-DELIMITER                    000229W  003393 003396 003398 003401 003404
P-CONDITIONS                    000127F  002311
P-FUNCTION                      000550W  000552 001214 001226 003104
P-OC-IMPLEMENTED                000551W
P-VARIABLES                     000128F  002310
PAGE-NO                         000154W  003114 003138 003139 003140
PL-PROG-NAME                    000124F  002667 002670
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:56:05  Page   66
Symbols of Module: COBXREF (COBXREF)
------------------------------------
All Data/Proc Names              Defn     Reference
--------------------------------+---------------------------------------------------------------


PRINT-FILENAME                  000090F  000241 003317 003421
PRINTLINE                       000111F  001581 001582 001583 001584 002169 002176 002179 002263
                                         002271 002274 002359 002361 002404 002428 002437 002486
                                         002490 002492 002528 002531 002563 002573 002618 002628
                                         002641 002648 002651 002661 002674 002696 002707 002715
                                         002718 003113 003115 003141 003142 003143 003144 003156
                                         003157 003161 003162 003166 003167 003168 003169 003173
                                         003174 003176 003177 003178 003179 003183 003184 003185
                                         003186 003190 003191 003192 003196 003197 003198 003202
                                         003203 003204 003208 003209 003210 003211 003215 003216
                                         003217 003218 003420
PRINTLINE2                      000126F  002309 002312 002333
PROG-BASENAME                   000242W  001235 001237 003307 003313 003314 003316
PROG-NAME                       000148W  001270 003280
Q                               000177W  001275 001939 001994 002000 002081 002088 002091 002143
                                         002166 002167 002168 002175 002186 002188 002189 002223
                                         002260 002261 002262 002269 002281 002283 002284 002352
                                         002416 002418 002419 002425 002426 002427 002435 002452
                                         002483 002484 002485 002488 002498 002500 002501 002520
                                         002551 002567 002570 002593 002611 002614 002635 002638
Q2                              000178W  002270 002344 002358 002436 002446 002489
REPORTS-IN-LOWER                000193W  001234 001255 001309 001314 001401 001755 002665 002742
RESERVED-NAMES                  001142W  001213 003082
RESVD-IDX                       001142W  003083 003084
RESVD-IMPLEMENTED               001143W
RESVD-TABLE-SIZE                001145W  001205 001221
RESVD-WORD                      001142W  001144 001213 001222 003083
S                               000170W  001939 001940 001945 001946 001968 001970 001972 001973
                                         001981 001983 001984 001990 001991 001995 001998 002004
                                         002008 002010 002012 002081 002083 002897 002922 002932
                                         002935 002941 002959 002978 002990
S-POINTER                       000151W  001275 002513 002527 002571 002586 002616 002639 002647
                                         003428
S-POINTER2                      000152W  001556 001663 001664 002822 002828 002879 002880 002883
                                         002889 002890 002897 002902 002904 002907 002921 002922
                                         002924 002926 002941 002942 002944 002959 002965 002978
                                         002981 002990 002998 003428
S2                              000171W  001939 001972 001974
SAVED-VARIABLE                  000235W  001378 001402 001405 001642 001726 001734 001740 001756
                                         001759 001778 001802
SAVESKADATANAME                 000234W  002136 002160 002162 002216 002244 002254 002343 002376
                                         002378 002385 002392 002397 002399 002445 002478 002480
                                         002512 002550 002559 002585 002610 002623 003421
SAVESKAWSORPD                   000236W  002255 002344 002379 002386 002393 002400 002446 002513
                                         002586 002615 002624 002638
SAVESKAWSORPD2                  000237W  002256 002344 002380 002401 002446 002513
SDSORTKEY                       000145F  002109
SECTION-NAME                    000426W  003240
SECTION-NAMES-TABLE             000414W  000423
SECTION-SHORT-NAMES-TABLE       000429W  000438
SECTION-USED-TABLE              000408W  002200 003426
SECTTABLE                       000403W  000405
SHORT-SECTION-NAME              000439W
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:56:05  Page   67
Symbols of Module: COBXREF (COBXREF)
------------------------------------
All Data/Proc Names              Defn     Reference
--------------------------------+---------------------------------------------------------------


SHT-SECTION-NAME                000440W  002846 002848
SKADATANAME                     000135F  001256 001258 002154 002160 002162 002180 002237 002244
                                         002254 002275 002367 002376 002378 002385 002392 002397
                                         002399 002405 002461 002478 002480 002493 002538 002550
                                         002559 002564 002602 002610 002623 002629 002749 002751
SKAREFNO                        000138F  001260 002181 002189 002276 002284 002406 002419 002494
                                         002501 002539 002565 002630 002750 002752
SKAWSORPD                       000136F  001253 002182 002247 002249 002255 002277 002377 002379
                                         002394 002400 002411 002469 002495 002554 002566 002624
                                         002632 002739 002753 003105
SKAWSORPD2                      000137F  001254 002256 002380 002401 002410 002631 002740 003106
SL-GEN-REFNO1                   000108F  002732
SORT1TMP                        000097F  000249 003405
SORTFILE                        000097F  000143 002108
SORTRECORD                      000134F  001251 001262 002754 003420
SOURCE-EOF                      000204W  001278 001479 001862 002770 002876 003000
SOURCE-LINE-END                 000158W  001663 002804 002835 002846 002849 002879 002889
SOURCE-LIST                     000107F  002730 002734
SOURCE-LISTING                  000090F  000106 001233 001281 001481 001570 001633 001657
SOURCE-WORDS                    000159W  001913 002829 003005
SOURCEFILENAME                  000093F  000240 003271 003278 003300 003303 003307 003313 003315
                                         003421
SOURCEINPUT                     000093F  000130 001282 001482 001566 001633 001657 002775 003372
SOURCEINWS                      000258W  001286 001324 001327 001330 001333 001352 001355 001358
                                         001415 001449 001452 001455 001921 002774 002778 002782
                                         002785 002794 002795 002800 002802 002813 002819 002820
                                         002846 002855 002857 002858 002880 002883 002901 002907
                                         002921 002923 002928 002932 002935 002942 002945 002981
                                         003034 003042 003043 003046 003053 003058 003061 003062
                                         003067
SOURCEOUTPUT                    000109F  002731
SOURCERECIN                     000131F  002731 002774 002778
STRING-POINTER                  000149W  003264 003270 003271 003279 003299 003328 003332 003380
                                         003381
STRING-POINTER2                 000150W  003299 003318
SUPP-FILE-1                     000087F  000247 001577 003399
SUPP-FILE-2                     000084F  000248 001576 003402
SUPPLEMENTAL-PART1-OUT          000087F  000101 000133 001245 001281 001481 001564 001566 001634
                                         001657 002110
SUPPLEMENTAL-PART2-IN           000084F  000102 000140 002111 002137 002138 002147 002149 002217
                                         002218 002230 002233 002345 002346 002355 002357 002448
                                         002449 002456 002458 002514 002515 002524 002526 002587
                                         002588 002596 002599
SV1WHAT                         000259W  003240 003243
SW-1                            000183W  003368
SW-2                            000186W  003339
SW-4                            000188W  003345
SW-5                            000190W  003353
SW-6                            000192W  003359
SW-END-PROG                     000206W  001586 002821
SW-GIT                          000212W  001622 001647 001674 001797 003254
SW-HAD-END-PROG                 000209W  002766 002821
SW-NESTED                       000215W  002821
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:56:05  Page   68
Symbols of Module: COBXREF (COBXREF)
------------------------------------
All Data/Proc Names              Defn     Reference
--------------------------------+---------------------------------------------------------------


SW-SOURCE-EOF                   000203W  002776 003426
T                               000172W  001994 002000 002043 002049 002068 002080 002081 002083
                                         002084 002085
TEMP-PATHNAME                   000246W  003385 003386 003387 003388 003389 003390 003391 003392
                                         003394 003395 003397 003400 003403 003407
UPPER-CASE                      001237I  001312 001317 002778 003104 003322
USECT                           000409W  001261 002212 002443 002753
VARIABLES                       001151W  001402 001405 001756 001759 002298 002311
WASPICTURE                      000223W  001670 001671 002948
WE-ARE-TESTING                  000191W  001325 001328 001331 001334 001353 001356 001359 001437
                                         001450 001453 001456 001572 002011 002056 003006 003045
                                         003243 003406
WORD-DELIMIT                    000227W  001364 001382 001409 001462 001470 001493 001498 001511
                                         001520 001541 001662 001665 001667 001776 001781 001864
                                         001912 002881 002902 002908 002924 002927 002929 002942
                                         002946 002981 002985 003007
WORD-DELIMIT2                   000228W  002960 002977 002981 002985 002991
WORD-LENGTH                     000156W  001502 001598 001631 001632 001889 001918 001919 001923
                                         001924 001925 001926 001941 001959 002068 002069 002084
                                         002086 002882 002909 002973 002992 003008 003009 003226
                                         003229
WS-ANAL1                        000238W  002201 002212 002213 002231 002247 002249 003164
WS-RETURN-CODE                  000155W  001200 001201 001207
WS-WC-DD                        000384W
WS-WC-HH                        000385W
WS-WC-MIN                       000386W
WS-WC-MM                        000383W
WS-WC-YY                        000382W  003283
WS-WHEN-COMPILED                000381W  003281
WSF1-1                          000265W  001303 001373 001391 001493 001495 001517 001696 001698
                                         001704 001865 001880 001883 001885 001888 001891 002906
                                         002912 002919 002920 002957 002963 002967 002970 002977
WSF1-1-NUMBER                   000266W  001373 001391 001495 001517 001702 001878 002918
WSF1-2                          000264W  001903 002916
WSF1-3                          000263W  001898 001905 002914
WSF3-1                          000272W  003227 003230
WSF3-1-NUMERIC                  000273W
WSF3-2                          000274W  003230
WSFOUNDNEWWORD                  000277W  001304 001306 002006 002008 002010 002015 002079 002081
                                         002088 002089 002091 003423
WSFOUNDNEWWORD2                 000278W  002079 002083 002095 002096 002098 003423
WSFOUNDNEWWORD3                 000279W  001938 002036 002060 002071 003422
WSFOUNDNEWWORD4                 000280W  002741 002743 002749 002751 003104 003422 003460
WSFOUNDNEWWORD5                 000281W  001688 001689 001810 001811 003040 003043 003067
WSFOUNDWORD                     000262W  000271
WSFOUNDWORD2                    000271W  001295 001304 001306 001310 001312 001315 001317 001366
                                         001369 001378 001384 001387 001388 001403 001406 001430
                                         001431 001436 001488 001529 001610 001613 001619 001623
                                         001631 001632 001656 001673 001677 001680 001684 001686
                                         001688 001689 001700 001725 001740 001757 001760 001771
                                         001791 001792 001796 001806 001808 001810 001811 001824
                                         001831 001839 001869 001881 001886 001918 001923 001924
                                         001945 001955 001956 001968 001973 001974 001981 001983
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:56:05  Page   69
Symbols of Module: COBXREF (COBXREF)
------------------------------------
All Data/Proc Names              Defn     Reference
--------------------------------+---------------------------------------------------------------


                                         001984 001986 001990 001991 001998 002004 002008 002010
                                         002012 002015 002025 002034 002036 002046 002057 002060
                                         002071 002081 002083 002090 002091 002097 002098 002741
                                         002743 002884 002896 002901 002910 002923 002942 002954
                                         002958 002960 002964 002971 002980 002981 002986 002991
                                         003008 003016 003020 003021 003083 003086
XRCOND                          000115F  002701 002703
XRDATANAME                      000112F  002165 002180 002259 002275 002360 002405 002424 002482
                                         002493 002529 002564 002629 002649 002666 002669 002697
                                         002716
XRDEFN                          000113F  002181 002276 002406 002494 002565 002630 002663 002698
XRREFERENCE                     000118F  002189 002284 002419 002501
XRTYPE                          000114F  002182 002277 002411 002413 002495 002566 002632 002634
                                         002672 002699
Y                               000173W  001939 001990 001991 001993
Z                               000174W  001700 001941 001955 001956 001957 001970 002033 002044
                                         002054 002971 002971 002973 002986 002986 002988 002990
                                         002991 002992
Z2                              000175W  001939 001941 001943 001947 001953 001958 001968 001971
                                         001981 001983 001984 001986 001990 001991 001998 002004
                                         002007 002008 002081 002083 002084 002086
Z3                              000176W  001939 001971 001974
ZZ000-INC-COBOLREFNO            002725P  002786 002809 002814 002826
ZZ000-OUTPUTSOURCE              002728P  002787 002810 002815 002827
ZZ000-ROUTINES                  002724P
ZZ030-WRITE-SORT                002738P  001475 001510 001540 001625 001691 001714 001773 001794
                                         001813 001829 001844 001930 002020 002092 002099
ZZ100-EXIT                      002868P  001274 001323 001348 001445 001521 001549 001605 002769
                                         002772 002777 002823 002839 002999
ZZ100-GET-A-SOURCE-RECORD       002760P  001274 001323 001348 001445 001521 001549 001605 002783
                                         002788 002811 002816 002850 002999
ZZ100-NEW-PROGRAM-POINT         002825P  002767
ZZ110-EXIT                      003023P  001285 001297 001363 001372 001381 001390 001429 001461
                                         001478 001492 001516 001526 001533 001597 001620 001669
                                         001685 001724 001788 001793 001807 001823 001838 001859
                                         002878 002885 002911 003001
ZZ110-GET-A-WORD                002871P  001285 001297 001363 001372 001381 001390 001429 001461
                                         001478 001492 001516 001526 001533 001597 001620 001669
                                         001685 001724 001788 001793 001807 001823 001838 001859
                                         002966 002968 003002
ZZ110-GET-A-WORD-COPY-CHECK     003003P  002974 002996
ZZ110-GET-A-WORD-LITERAL        002976P
ZZ110-GET-A-WORD-LITERAL2       002979P  002961
ZZ110-GET-A-WORD-OVERFLOW       002997P  002891 002905 002917
ZZ110-GET-A-WORD-UNSTRING       002895P  002913 002915
ZZ120-EXIT                      003073P  002803 003037 003047
ZZ120-KILL-SPACE                003049P  003041 003056 003059 003069
ZZ120-KILL-SPACE-EXIT           003070P  003041 003052
ZZ120-REPLACE-MULTI-SPACES      003026P  002803
ZZ130-EXIT                      003090P  001375 001393 001467 001497 001534 001707 001728 001870
                                         002016 003082
ZZ130-EXTRA-RESERVED-WORD-CHECK 003076P  001375 001393 001467 001497 001534 001707 001728 001870
                                         002016
ACS Cobol Xref v1.01.15          Dictionary File for COBXREF    08/11/14  18:10:56:05  Page   70
Symbols of Module: COBXREF (COBXREF)
------------------------------------
All Data/Proc Names              Defn     Reference
--------------------------------+---------------------------------------------------------------


ZZ140-EXIT                      003108P  002745 003103
ZZ140-FUNCTION-CHECK            003093P  002745
ZZ150-EXIT                      003221P  002141 002142 002172 002173 002221 002222 002266 002267
                                         002302 002316 002330 002351 002433 002476 002519 002576
                                         002592 002621 002644 002659 002660 002676 002677 002692
                                         002710 003159 003171 003181 003188 003194 003200 003206
                                         003213 003220
ZZ150-WRITEHDB                  003111P  001272 002141 002172 002221 002266 002301 002315 002329
                                         002349 002431 002475 002518 002575 002591 002620 002643
                                         002659 002676 002691 002709 002736
ZZ150-WRITEHDB1                 003146P
ZZ150-WRITEHDB2                 003160P  002222 002267
ZZ150-WRITEHDB2B                003172P  002660 002677
ZZ150-WRITEHDB3                 003182P  002351 002433 002476
ZZ150-WRITEHDB4                 003189P  002519 002576
ZZ150-WRITEHDB5                 003195P  002592 002621 002644
ZZ150-WRITEHDB6                 003201P  002692 002710
ZZ150-WRITEHDB7                 003207P  002302 002316 002330
ZZ150-WRITEHDB8                 003214P  002142 002173
ZZ160-CLEAN-NUMBER              003224P  001640
ZZ160-EXIT                      003231P  001640 003228
ZZ170-CHECK-4-SECTION           003234P  001552 002838 002867
ZZ170-EXIT                      003255P  001552 002838 002867 003237
ZZ180-CHECK-FOR-PARAM-ERRORS    003277P  003266 003329 003333
ZZ180-EXIT                      003411P  001216 003346 003377
ZZ180-GET-PROGRAM-ARGS          003379P  003265
ZZ180-OPEN-SOURCE-FILE          003258P  001216
ZZ182-EXIT                      003408P  003275
ZZ182-GET-ENV-SET-TEMPFILES     003383P  003275
ZZ190-EXIT                      003429P  001197 001580
ZZ190-INIT-PROGRAM              003414P  001197 001580
ZZ200-EXIT                      003453P  001675 001780 001785 001798 001803 001832 003437 003445
ZZ200-LOAD-GIT                  003432P  001675 001780 001785 001798 001803 001832
ZZ310-CHECK-FOR-GLOBALS         003456P  002756
ZZ319-EXIT                      003466P  002756
